Процедура Инициализировать(Объект, ИмяТабличнойЧасти, ТабличноеПолеОбъекта) Экспорт	
	//Сообщить("1" + Объект);
	ОбъектСсылка = Объект;
	//Сообщить("2" + ОбъектСсылка);
	//Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//Диалог.Фильтр = "*.dbf|*.dbf";
	//Если Диалог.Выбрать() Тогда
	//	ПутьКФайлу = Диалог.ПолноеИмяФайла;
	//КонецЕсли;
	
	ПродолжитьЗаполнение = Истина;
	
	Форма = ПолучитьФорму("Форма");
	//Сообщить("3" + ОбъектСсылка);
	Форма.Открыть();
	
	//ЗагрузитьDBF();
КонецПроцедуры

Функция НайтиНоменклатуру(Артикул, Наименование, ТипИзделия, Проба)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК ПоАртикулу,
		|	NULL КАК ПоНаименованию
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Артикул = &Артикул
		|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	NULL,
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование ПОДОБНО &Наименование
		|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Артикул", Артикул);
	Запрос.УстановитьПараметр("Наименование", "%" + Наименование + "%");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.ПоАртикулу) Тогда
			Возврат Выборка.ПоАртикулу;
		Иначе
			Выборка.Следующий();
			Если ЗначениеЗаполнено(Выборка.ПоНаименованию) Тогда
				Возврат Выборка.ПоНаименованию;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовыйЭлемент = СоздатьНовуюНоменклатуру(Артикул, Наименование, ТипИзделия, Проба);
	Возврат НовыйЭлемент;
КонецФункции

Функция СоздатьНовуюНоменклатуру(Артикул, Наименование, ТипИзделия, Проба)
	Попытка
		НовыйЭлемент = Справочники.Номенклатура.СоздатьЭлемент();
		НовыйЭлемент.Родитель = ГруппаНовойНоменклатуры;
		НовыйЭлемент.Наименование = Наименование;
		НовыйЭлемент.Артикул = Артикул;
		НовыйЭлемент.Проба = Справочники.Пробы.ПустаяСсылка();
		НовыйЭлемент.БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("гр");
		НовыйЭлемент.ТипИзделия = Справочники.ТипыИзделий.НайтиПоНаименованию(ТипИзделия, Истина);
		Если НовыйЭлемент.ТипИзделия = Неопределено Тогда
			НовыйЭлемент.ТипИзделия = Справочники.ТипыИзделий.НайтиПоНаименованию(ТипИзделия, Ложь);
		КонецЕсли;
		НовыйЭлемент.ВестиУчетПоХарактеристикам = Истина;
		НовыйЭлемент.Весовой = Истина;
		НовыйЭлемент.НаименованиеПолное = НовыйЭлемент.Наименование;
		НовыйЭлемент.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовыйЭлемент.Записать();
	Исключение
		Сообщить("Не возможно создать новую номенклатуру по причине: " + ИнформацияОбОшибке());
		НовыйЭлемент = Справочники.Номенклатура.ПустаяСсылка();
	КонецПопытки;
		
	Возврат НовыйЭлемент;
КонецФункции

Функция НайтиРазмер(Размер)
	Размер = Строка(СтрЗаменить(Размер, ",", "."));
	Если Найти(Размер, ".") = 0 Тогда
		Размер = Размер + ".0";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Размер.Ссылка
		|ИЗ
		|	Справочник.Размер КАК Размер
		|ГДЕ
		|	Размер.Наименование = &Размер
		|	И Размер.ПометкаУдаления = ЛОЖЬ";
		
	Запрос.УстановитьПараметр("Размер", Размер);
			
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Попытка
			НовыйЭлемент = Справочники.Размер.СоздатьЭлемент();
			НовыйЭлемент.Наименование = Размер;
			НовыйЭлемент.Записать();
		Исключение
			Сообщить("Не возможно создать новый размер по причине: " + ИнформацияОбОшибке());
			НовыйЭлемент = Справочники.Размер.ПустаяСсылка();
		КонецПопытки;
		
		Возврат НовыйЭлемент;
	КонецЕсли;
КонецФункции

Процедура ЗагрузитьDBF() Экспорт
	Форма = ПолучитьФорму("Форма");
	Если Форма.Открыта() Тогда
		Форма.Закрыть();
	КонецЕсли;
	
	ОбъектСсылка.Товары.Очистить();
	
	// создаём DBF
	ДБФ = Новый XBase;
	ДБФ.ОткрытьФайл(ПутьКФайлу);
	ДБФ.Кодировка = КодировкаXBase.OEM;
	
	// открываем DBF
	Если Не ДБФ.Открыта() Тогда
		Сообщить("Не удалось открыть файл! Загрузка не выполнена!", СтатусСообщения.ОченьВажное);
    	Возврат;
	КонецЕсли;
	
	// Читаем первую запись DBF
	Если Не ДБФ.Первая() Тогда
		Сообщить("Не найдена первая запись! Загрузка не выполнена!", СтатусСообщения.ОченьВажное);
    	Возврат;
	КонецЕсли;
	
	//ФормаИндикатора = ПолучитьФорму("ФормаИндикатора");
	//ФормаИндикатора.Открыть();
	//ФормаИндикатора.Индикатор1 = 0;
	ВсегоЗаписей = ДБФ.КоличествоЗаписей();

	// читаем все записи в файле DBF
	Пока Не ДБФ.ВКонце() Цикл
		Если Не ПродолжитьЗаполнение Тогда
			Прервать;
		КонецЕсли;
		
		НоваяСтрока = ОбъектСсылка.Товары.Добавить();
		Номенклатура = НайтиНоменклатуру(СокрЛП(ДБФ.ARTIKUL), СокрЛП(ДБФ.TOVAR), ДБФ.TIP, ДБФ.PROBA);
		НоваяСтрока.Номенклатура = Номенклатура.Ссылка;
		НоваяСтрока.Размер = НайтиРазмер(ДБФ.RAZMER);
		НоваяСтрока.Количество = ДБФ.KOL;
		НоваяСтрока.Вес = ДБФ.VES;
		НоваяСтрока.Цена = ДБФ.CENA;
		
		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрока, ОбъектСсылка);
		//ОбработкаТабличныхЧастей.ЗаполнитьЦенуПокупкиПоТипуЦенТабЧасти(НоваяСтрока, ОбъектСсылка);
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(НоваяСтрока, ОбъектСсылка); 
		ОбработкаТабличныхЧастей.ЗаполнитьКачествоТабЧасти(НоваяСтрока, ОбъектСсылка);
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрока, ОбъектСсылка);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, ОбъектСсылка);
		
		//ФормаИндикатора.Индикатор1 = Окр(ДБФ.НомерЗаписи() * 100 / ВсегоЗаписей, 0, РежимОкругления.Окр15как10);
		Состояние("Идёт загрузка товаров из файла DBF (" + ДБФ.НомерЗаписи() + " из " + ВсегоЗаписей + ")", Окр(ДБФ.НомерЗаписи() * 100 / ВсегоЗаписей, 0, РежимОкругления.Окр15как10));
		ДБФ.Следующая();
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	
	//ФормаИндикатора.Закрыть();
	//ОбъектСсылка.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры