Перем мОписаниеТипаЧисло;
Перем мОписаниеТипаБулево;
Перем мДатаДоставкиПокупателю;

Перем мДоступныеСклады; // Отбор по складу

Процедура ОбновитьНажатие(Элемент)
	
	СнятьОтборСтрокВДоставкеПокупателю();
	ДатаДоставкиПокупателю  = ЭлементыФормы.ПолеКалендаря.ТекущаяДата;
	мДатаДоставкиПокупателю = ДатаДоставкиПокупателю;
	ОбновитьИнформациюПоДоставкеНаДень();
	ОбновитьИнформациюСводнуюПоДоставкеНаНеделю();
	ОбновитьИнформациюПоРейсамСНеотгруженнымиЗаказами();
	
КонецПроцедуры

Процедура ОбновитьИнформациюПоДоставкеНаДень()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Вес,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.ЗаказПокупателя,
	|	ВложенныйЗапрос.Машина,
	|	ВложенныйЗапрос.НомерМашины,
	|	ВложенныйЗапрос.АдресДоставки,
	|	ВложенныйЗапрос.ЗонаДоставки,
	|	ВложенныйЗапрос.СпособДоставки,
	|	ВложенныйЗапрос.Рейс,
	|	ВложенныйЗапрос.РейсПредставление,
	|	ВложенныйЗапрос.Статус,
	|	ВложенныйЗапрос.Остаток,
	|	ВложенныйЗапрос.Ожидается,
	|	ВложенныйЗапрос.ВРезерве,
	|	ВложенныйЗапрос.ДатаОтгрузки КАК ДатаОтгрузки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИТС_ДоставкаЗаказов.Контрагент КАК Контрагент,
	|		ИТС_ДоставкаЗаказов.Вес КАК Вес,
	|		ИТС_ДоставкаЗаказов.Сумма КАК Сумма,
	|		ИТС_ДоставкаЗаказов.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ИТС_МашинаЗаказа.Машина КАК Машина,
	|		ИТС_МашинаЗаказа.Машина.Код КАК НомерМашины,
	|		ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя
	|				ТОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя.АдресДоставки
	|			ИНАЧЕ ИТС_ДоставкаЗаказов.ЗаказПокупателя.ИМИК_АдресПоставки
	|		КОНЕЦ КАК АдресДоставки,
	|		ИТС_ДоставкаЗаказов.ЗаказПокупателя.итс_ЗонаДоставки КАК ЗонаДоставки,
	|		ИТС_ДоставкаЗаказов.СпособДоставки КАК СпособДоставки,
	|		ИТС_МашинаЗаказа.Регистратор КАК Рейс,
	|		""Рейс №"" + ИТС_МашинаЗаказа.Регистратор.Номер КАК РейсПредставление,
	|		ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ДанныеДляСтатуса.Остаток, 0) = 0
	|								И ЕСТЬNULL(ДанныеПоРеализации.КоличествоРеализаций, 0) = 0
	|							ТОГДА ""закрыт""
	|						КОГДА ЕСТЬNULL(ДанныеДляСтатуса.Остаток, 0) = 0
	|								И ЕСТЬNULL(ДанныеПоРеализации.КоличествоРеализаций, 0) > 0
	|							ТОГДА ""отгружен""
	|						КОГДА ЕСТЬNULL(ДанныеДляСтатуса.Остаток, 0) = ЕСТЬNULL(ДанныеДляСтатуса.ВРезерве, 0)
	|							ТОГДА ""готов""
	|						КОГДА ЕСТЬNULL(ДанныеДляСтатуса.Остаток, 0) = ЕСТЬNULL(ДанныеДляСтатуса.Ожидается, 0) + ЕСТЬNULL(ДанныеДляСтатуса.ВРезерве, 0)
	|							ТОГДА ""ожидается""
	|						ИНАЧЕ ""не готов""
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НЕ ИТС_ДоставкаЗаказов.ЗаказПокупателя.итс_Утвержден
	|						ТОГДА ""не готов""
	|					КОГДА ЕСТЬNULL(ДанныеДляСтатуса.Остаток, 0) > 0
	|						ТОГДА ""готов""
	|					ИНАЧЕ ""закрыт""
	|				КОНЕЦ
	|		КОНЕЦ КАК Статус,
	|		ДанныеДляСтатуса.Остаток КАК Остаток,
	|		ДанныеДляСтатуса.Ожидается КАК Ожидается,
	|		ДанныеДляСтатуса.ВРезерве КАК ВРезерве,
	|		ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя
	|				ТОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя.ДатаОтгрузки
	|			ИНАЧЕ ИТС_ДоставкаЗаказов.ЗаказПокупателя.ДатаПоступления
	|		КОНЕЦ КАК ДатаОтгрузки
	|	ИЗ
	|		РегистрНакопления.ИТС_ДоставкаЗаказов КАК ИТС_ДоставкаЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИТС_МашинаЗаказа КАК ИТС_МашинаЗаказа
	|			ПО ИТС_ДоставкаЗаказов.Регистратор = ИТС_МашинаЗаказа.ЗаказПокупателя
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ЗаказыПокупателейОстатки.ЗаказПокупателя КАК Заказ,
	|				ЗаказыПокупателейОстатки.КоличествоОстаток КАК Остаток,
	|				ЕСТЬNULL(РазмещениеЗаказовПокупателейОстатки.КоличествоОстаток, 0) КАК Ожидается,
	|				ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) КАК ВРезерве,
	|				ЕСТЬNULL(ВложенныйЗапрос.КоличествоРеализаций, 0) КАК КоличествоРеализаций
	|			ИЗ
	|				РегистрНакопления.ЗаказыПокупателей.Остатки(, НЕ Номенклатура.Услуга) КАК ЗаказыПокупателейОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, ) КАК ТоварыВРезервеНаСкладахОстатки
	|					ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = ТоварыВРезервеНаСкладахОстатки.ДокументРезерва
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки КАК РазмещениеЗаказовПокупателейОстатки
	|					ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = РазмещениеЗаказовПокупателейОстатки.ЗаказПокупателя
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						РеализацияТоваровУслуг.Сделка КАК Сделка,
	|						СУММА(1) КАК КоличествоРеализаций
	|					ИЗ
	|						Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|					ГДЕ
	|						РеализацияТоваровУслуг.Проведен
	|					
	|					СГРУППИРОВАТЬ ПО
	|						РеализацияТоваровУслуг.Сделка) КАК ВложенныйЗапрос
	|					ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = ВложенныйЗапрос.Сделка
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|				ЗаказыПоставщикамОстатки.КоличествоОстаток,
	|				0,
	|				0,
	|				0
	|			ИЗ
	|				РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки) КАК ДанныеДляСтатуса
	|			ПО ИТС_ДоставкаЗаказов.Регистратор = ДанныеДляСтатуса.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				РеализацияТоваровУслуг.Сделка КАК Сделка,
	|				СУММА(1) КАК КоличествоРеализаций
	|			ИЗ
	|				Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ГДЕ
	|				РеализацияТоваровУслуг.Проведен
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РеализацияТоваровУслуг.Сделка) КАК ДанныеПоРеализации
	|			ПО ИТС_ДоставкаЗаказов.Регистратор = ДанныеПоРеализации.Сделка
	|	ГДЕ
	//++ ИТ-Сервис 09.11.15 
	//|		ИТС_ДоставкаЗаказов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК ВложенныйЗапрос
	|		ИТС_ДоставкаЗаказов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя ССЫЛКА Документ.ЗаказПокупателя
	|				ТОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя.СкладГруппа В (&МассивСкладов)
	|			КОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ИТС_ДоставкаЗаказов.ЗаказПокупателя.Склад В(&МассивСкладов)
	|			КОНЕЦ) КАК ВложенныйЗапрос
	//-- ИТ-Сервис 09.11.15
	|ГДЕ
	|	(ВложенныйЗапрос.Статус <> ""закрыт""
	|				И ВложенныйЗапрос.Статус <> ""отгружен""
	|			ИЛИ &ОтобржальВсе)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОтгрузки";
	
	ДатаНачала    = НачалоДня(ДатаДоставкиПокупателю);
	ДатаОкончания = КонецДня(ДатаДоставкиПокупателю);
	
	//++ ИТС-Сервис 20.08.15
	Если ЭтаФорма.РежимРаботы = 0 Тогда
	//-- ИТС-Сервис 20.08.15  
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	//++ ИТС-Сервис 20.08.15
	Иначе	
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", Дата(3000, 1, 1));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтобржальВсе", Не ЭтаФорма.флПоказыватьТолькоНезакрытыеТовары);
	//-- ИТС-Сервис 20.08.15 
	
	//++ ИТ-Сервис 10.11.15 #Ограничение доступности Нижневартовск 		
	Запрос.УстановитьПараметр("МассивСкладов", мДоступныеСклады);	
	//-- ИТ-Сервис 10.11.15  
	
	ЭлементыФормы.ДоставкаПокупателю.Значение.Очистить();
	ЭлементыФормы.ДоставкаПокупателю.Значение.Загрузить(Запрос.Выполнить().Выгрузить());
	//ДоставкаПокупателю.Загрузить(Запрос.Выполнить().Выгрузить());
	ЭлементыФормы.ДоставкаПокупателю.ОбновитьСтроки();
	
	ОбновитьСводнуюИнформациюПоРейсамИМашинам();
	
КонецПроцедуры

Процедура ОбновитьСводнуюИнформациюПоРейсамИМашинам() Экспорт
	
	ТЗ = ДоставкаПокупателю.Выгрузить();
	ТЗ.Свернуть("Рейс,РейсПредставление,Машина,НомерМашины","Вес,Сумма");
	
	ТЗ.Колонки.Добавить("Грузоподъемность", мОписаниеТипаЧисло);
	ТЗ.Колонки.Добавить("Свободно", мОписаниеТипаЧисло);
	ТЗ.Колонки.Добавить("Утвержден", мОписаниеТипаБулево);
	//ИМИК 16.09.14(
	ТЗ.Колонки.Добавить("СтоимостьРейсаПлан", мОписаниеТипаЧисло);
	ТЗ.Колонки.Добавить("СтоимостьРейсаФакт", мОписаниеТипаЧисло);
	//ИМИК 16.09.14)
	
	Для Каждого Стр Из ТЗ Цикл
		Стр.Грузоподъемность = ?(ЗначениеЗаполнено(Стр.НомерМашины), 1000*Стр.Машина.Грузоподъемность, 0);
		Стр.Свободно = Стр.Грузоподъемность - Стр.Вес;
		Стр.Утвержден = ?(ЗначениеЗаполнено(Стр.Рейс), Стр.Рейс.Утвержден, Ложь);
		//ИМИК 16.09.14(
		Стр.СтоимостьРейсаПлан = ?(ЗначениеЗаполнено(Стр.Рейс), Стр.Рейс.СтоимостьРейсаПлан, 0);
		Стр.СтоимостьРейсаФакт = ?(ЗначениеЗаполнено(Стр.Рейс), Стр.Рейс.СтоимостьРейсаФакт, 0);
		//ИМИК 16.09.14)
	КонецЦикла;
	
	
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВнешнийИсточник.Машина,
	|	ВнешнийИсточник.Рейс,
	|	ВнешнийИсточник.РейсПредставление,
	|	ВнешнийИсточник.Вес,
	|	ВнешнийИсточник.Сумма,
	|	ВнешнийИсточник.Свободно,
	|	ВнешнийИсточник.Грузоподъемность,
	|	ВнешнийИсточник.НомерМашины,
	|   ВнешнийИсточник.Утвержден,
	|   ВнешнийИсточник.СтоимостьРейсаПлан,
	|   ВнешнийИсточник.СтоимостьРейсаФакт
	|ПОМЕСТИТЬ ТабМашин
	|ИЗ
	|	&ВнешнийИсточник КАК ВнешнийИсточник";
	Запрос.УстановитьПараметр("ВнешнийИсточник",ТЗ);
	Запрос.Выполнить();	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИТС_ПаркМашинНаДоставке.Регистратор
	|ПОМЕСТИТЬ ВТ_Рейсы
	|ИЗ
	|	РегистрСведений.ИТС_ПаркМашинНаДоставке КАК ИТС_ПаркМашинНаДоставке
	|ГДЕ
	|	ИТС_ПаркМашинНаДоставке.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Ссылка
	|ПОМЕСТИТЬ ВТ_ДоступныеРейсы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИТС_РейсДоставки.Ссылка КАК Ссылка,
	|		ИТС_РейсДоставкиДокументыРейса.Документ КАК Документ
	|	ИЗ
	|		Документ.ИТС_РейсДоставки КАК ИТС_РейсДоставки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИТС_РейсДоставки.ДокументыРейса КАК ИТС_РейсДоставкиДокументыРейса
	|			ПО ИТС_РейсДоставки.Ссылка = ИТС_РейсДоставкиДокументыРейса.Ссылка
	|	ГДЕ
	|		ИТС_РейсДоставки.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТ_Рейсы.Регистратор
	|				ИЗ
	|					ВТ_Рейсы КАК ВТ_Рейсы)) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВложенныйЗапрос.Документ ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			КОГДА ВложенныйЗапрос.Документ ССЫЛКА Документ.ЗаказПокупателя
	|				ТОГДА ВложенныйЗапрос.Документ.СкладГруппа В (&МассивСкладов)
	|			ИНАЧЕ ВложенныйЗапрос.Документ.Склад В (&МассивСкладов)
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ИТС_ПаркМашинНаДоставке.Машина, ТабМашин.Машина) КАК Машина,
	|	ЕСТЬNULL(ИТС_ПаркМашинНаДоставке.Регистратор, ТабМашин.Рейс) КАК Рейс,
	|	ИТС_ПаркМашинНаДоставке.Водитель,
	|	ВЫБОР
	|		КОГДА ИТС_ПаркМашинНаДоставке.Машина.Грузоподъемность ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ТабМашин.Грузоподъемность ЕСТЬ NULL 
	|						ТОГДА 0
	|					ИНАЧЕ 1000 * ТабМашин.Грузоподъемность
	|				КОНЕЦ
	|		ИНАЧЕ 1000 * ИТС_ПаркМашинНаДоставке.Машина.Грузоподъемность
	|	КОНЕЦ КАК Грузоподъемность,
	|	ЕСТЬNULL(ТабМашин.Вес, 0) КАК Вес,
	|	ЕСТЬNULL(ТабМашин.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(ТабМашин.Свободно, 0) КАК Свободно,
	|	ЕСТЬNULL(ИТС_ПаркМашинНаДоставке.Машина.Код, ТабМашин.НомерМашины) КАК НомерМашины,
	|	ЕСТЬNULL(""Рейс №"" + ИТС_ПаркМашинНаДоставке.Регистратор.Номер, ТабМашин.РейсПредставление) КАК РейсПредставление,
	|	ЕСТЬNULL(ТабМашин.Утвержден, ЛОЖЬ) КАК Утвержден,
	|	ВЫБОР
	|		КОГДА ИТС_ПаркМашинНаДоставке.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИТС_ПаркМашинНаДоставке.Регистратор.СтоимостьРейсаПлан
	|		ИНАЧЕ ТабМашин.СтоимостьРейсаПлан
	|	КОНЕЦ КАК СтоимостьРейсаПлан,
	|	ВЫБОР
	|		КОГДА ИТС_ПаркМашинНаДоставке.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИТС_ПаркМашинНаДоставке.Регистратор.СтоимостьРейсаФакт
	|		ИНАЧЕ ТабМашин.СтоимостьРейсаФакт
	|	КОНЕЦ КАК СтоимостьРейсаФакт
	|ИЗ
	|	ТабМашин КАК ТабМашин
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ИТС_ПаркМашинНаДоставке КАК ИТС_ПаркМашинНаДоставке
	|		ПО ТабМашин.Рейс = ИТС_ПаркМашинНаДоставке.Регистратор
	|ГДЕ
	|	ИТС_ПаркМашинНаДоставке.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЕСТЬNULL(ИТС_ПаркМашинНаДоставке.Регистратор, ТабМашин.Рейс) В
	|			(ВЫБРАТЬ
	|				ВТ_ДоступныеРейсы.Ссылка
	|			ИЗ
	|				ВТ_ДоступныеРейсы КАК ВТ_ДоступныеРейсы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рейс,
	|	Машина,
	|	НомерМашины";
				   			   
	//++ ИТС-Сервис 20.08.15 
	//Запрос.УстановитьПараметр("ДатаДоставки", НачалоДня(ДатаДоставкиПокупателю));
	ДатаНачала    = НачалоДня(ДатаДоставкиПокупателю);
	ДатаОкончания = КонецДня(ДатаДоставкиПокупателю);
	
	Если ЭтаФорма.РежимРаботы = 0 Тогда
		Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Иначе	
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаОкончания", Дата(3000, 1, 1));
	КонецЕсли;
	//-- ИТС-Сервис 20.08.15  
	
	//++ ИТ-Сервис 12.11.15 #Ограничение доступности Нижневартовск 
	Запрос.УстановитьПараметр("МассивСкладов", мДоступныеСклады);
	//-- ИТ-Сервис 12.11.15  
	
	ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.Значение.Очистить();
	ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.Значение.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//СводнаяИнформацияПоМашинамНаДень.Загрузить(Запрос.Выполнить().Выгрузить());
	ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.ОбновитьСтроки();
	
	Запрос.Текст = "УНИЧТОЖИТЬ ТабМашин";
	Запрос.Выполнить();
	
	ОбновитьСписокВыбораМашин();  
	
КонецПроцедуры

Процедура ОбновитьСписокВыбораМашин()
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого Стр Из СводнаяИнформацияПоМашинамНаДень Цикл
		Если ЗначениеЗаполнено(Стр.Рейс) Тогда
			СписокВыбора.Добавить(Стр.РейсПредставление, Стр.РейсПредставление);
		КонецЕсли;  
	КонецЦикла;	
	ЭлементыФормы.ДоставкаПокупателю.Колонки.РейсПредставление.ЭлементУправления.СписокВыбора = СписокВыбора;
	
КонецПроцедуры	

Процедура ОбновитьИнформациюСводнуюПоДоставкеНаНеделю()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК ДатаДоставки,
	|	СУММА(ЕСТЬNULL(ИТС_ДоставкаЗаказовОбороты.ВесОборот, 0)) КАК Вес,
	|	СУММА(ЕСТЬNULL(ИТС_ДоставкаЗаказовОбороты.СуммаОборот, 0)) КАК Сумма,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.ДоставкаВРегионыАвто)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДоставкиВРегионы,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.ДоставкаВРегионыАвто)
	|				ТОГДА ВЫБОР
	|						КОГДА ИТС_МашинаЗаказа.Регистратор ЕСТЬ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНевключенныеДоставкиВРегионы,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.МестнаяДоставкаАвто)
	|				ТОГДА ВЫБОР
	|						КОГДА ИТС_МашинаЗаказа.Регистратор ЕСТЬ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНевключенныеМестныеДоставки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.ДоставкаКонтейнером)
	|				ТОГДА ВЫБОР
	|						КОГДА ИТС_МашинаЗаказа.Регистратор ЕСТЬ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНевключенныеДоставкиКонтейнером,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.МестнаяДоставкаАвто)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК МестныеДоставки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИТС_ДоставкаЗаказовОбороты.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.ИТС_СпособыДоставки.ДоставкаКонтейнером)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДоставкиКонтейнером
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИТС_ДоставкаЗаказов.Обороты(&ДатаНачала, &ДатаОкончания, День, ) КАК ИТС_ДоставкаЗаказовОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИТС_МашинаЗаказа КАК ИТС_МашинаЗаказа
	|			ПО ИТС_ДоставкаЗаказовОбороты.ЗаказПокупателя = ИТС_МашинаЗаказа.ЗаказПокупателя
	|		ПО РегламентированныйПроизводственныйКалендарь.ДатаКалендаря = ИТС_ДоставкаЗаказовОбороты.Период
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ.Вес,
	|	ВТ.Сумма,
	|	ВТ.ЕстьНевключенныеДоставкиВРегионы,
	|	ВТ.ЕстьНевключенныеМестныеДоставки,
	|	ВТ.ЕстьНевключенныеДоставкиКонтейнером,
	|	ВТ.МестныеДоставки,
	|	ВТ.ДоставкиКонтейнером,
	|	ВТ.ДоставкиВРегионы
	|ИЗ
	|	ВТ КАК ВТ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДоставки");	
	ДатаНачала = НачалоДня(ДатаДоставкиПокупателю);
	ДатаОкончания = КонецДня(ДатаНачала + 13*24*60*60);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	СводнаяИнформацияПоДням.Очистить();
	СводнаяИнформацияПоДням.Загрузить(Запрос.Выполнить().Выгрузить());
	ЭлементыФормы.СводнаяИнформацияПоДням.ОбновитьСтроки();
	
	НайдСтр = СводнаяИнформацияПоДням.Найти(мДатаДоставкиПокупателю, "ДатаДоставки");
	Если НайдСтр <> Неопределено Тогда
		ЭлементыФормы.СводнаяИнформацияПоДням.ТекущаяСтрока = НайдСтр;
		ДатаДоставкиПокупателю = НайдСтр.ДатаДоставки;
		СнятьОтборСтрокВДоставкеПокупателю();
		ОбновитьИнформациюПоДоставкеНаДень();
	КонецЕсли;	   
КонецПроцедуры	

Процедура ЗакреплениеМашиныЗаЗаказамиНажатие(Элемент)
	ФормаЗакрепления = ПолучитьФорму("ФормаЗакрепленияМашины",,ЭтаФорма);
	ФормаЗакрепления.ВладелецФормы = ЭтаФорма;
	ФормаЗакрепления.ОткрытьМодально();
	ОбновитьСводнуюИнформациюПоРейсамИМашинам();
КонецПроцедуры

Процедура ПаркМашинНаДеньНажатие(Элемент)
	ФормаУтвержденияРейса = ПолучитьФорму("ФормаУтвержденияРейса");
	ФормаУтвержденияРейса.ОткрытьМодально();
	//ИМИК 18.09.14(
	ОбновитьИнформациюПоДоставкеНаДень();
	ОбновитьИнформациюСводнуюПоДоставкеНаНеделю();
 	//ОбновитьСводнуюИнформациюПоРейсамИМашинам();
	//ИМИК 18.09.14)
КонецПроцедуры

Процедура ДоставкаПокупателюМашинаПриИзменении(Элемент)
	ТекСтр = ЭлементыФормы.ДоставкаПокупателю.ТекущаяСтрока;
	Машина = ТекСтр.Машина;
	ЗаказПокупателя = ТекСтр.ЗаказПокупателя;
	
	Если ЗначениеЗаполнено(Машина) Тогда
	  СделатьЗаписьВРегистрМашинаЗаказа(ЗаказПокупателя, Машина);
	  ТекСтр.НомерМашины = Машина.Код;
    Иначе
	  ИТС_МодульДоставки.УдалитьЗаписьИзРегистраМашинаЗаказа(ЗаказПокупателя);
	  ТекСтр.НомерМашины = "";
    КонецЕсли;
    ОбновитьСводнуюИнформациюПоРейсамИМашинам();
КонецПроцедуры

Процедура СводнаяИнформацияПоМашинамНаДеньВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	//СнятьОтборПоСпособуДоставки();
	СнятьОтборСтрокВДоставкеПокупателю();
	УстановитьОтборПоРейсу(ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.ТекущаяСтрока.Рейс);
КонецПроцедуры

Процедура УстановитьОтборПоРейсу(Рейс)
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок.Найти("Рейс");
   Отбор.ВидСравнения = ВидСравнения.Равно;
   Отбор.Значение = Рейс;
   Отбор.Использование = Истина;
КонецПроцедуры

Процедура УстановитьОтборПоМашине(Машина)
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок.Найти("Машина");
   Отбор.ВидСравнения = ВидСравнения.Равно;
   Отбор.Значение = Машина;
   Отбор.Использование = Истина;
КонецПроцедуры                                      

Процедура СводнаяИнформацияПоДнямВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
    ДатаДоставкиПокупателю = ВыбраннаяСтрока.ДатаДоставки;
	СнятьОтборСтрокВДоставкеПокупателю();
	ОбновитьИнформациюПоДоставкеНаДень();
КонецПроцедуры

Процедура КоманднаяПанель1Р(Кнопка)
	СнятьОтборПоРейсу();
	УстановитьОтборПоСпособуДоставки(Перечисления.ИТС_СпособыДоставки.ДоставкаВРегионыАвто);
КонецПроцедуры

Процедура КоманднаяПанель1М(Кнопка)
	СнятьОтборПоРейсу();
	УстановитьОтборПоСпособуДоставки(Перечисления.ИТС_СпособыДоставки.МестнаяДоставкаАвто);
КонецПроцедуры

Процедура КоманднаяПанель1К(Кнопка)
	СнятьОтборПоРейсу();
	УстановитьОтборПоСпособуДоставки(Перечисления.ИТС_СпособыДоставки.ДоставкаКонтейнером);
КонецПроцедуры

Процедура УстановитьОтборПоСпособуДоставки(СпособДоставки)
   //мЗначениеОтбораПоМашине = Машина;
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок.Найти("СпособДоставки");
   Отбор.ВидСравнения = ВидСравнения.Равно;
   Отбор.Значение = СпособДоставки;
   Отбор.Использование = Истина;
КонецПроцедуры  

Процедура СнятьОтборПоРейсу()
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок.Найти("Рейс");
   Отбор.Использование = Ложь;
КонецПроцедуры	

Процедура СнятьОтборПоСпособуДоставки()
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок.Найти("СпособДоставки");
   Отбор.Использование = Ложь;
КонецПроцедуры

Процедура СоздатьРейсНажатие(Элемент)
	
   ФормаСпискаРейсов = Документы.ИТС_РейсДоставки.ПолучитьФормуСписка("ФормаСпискаДляРМЛогиста");
   ФормаСпискаРейсов.ВладелецФормы = ЭтаФорма;
   ФормаСпискаРейсов.ОткрытьМодально();
   
   ОбновитьСводнуюИнформациюПоРейсамИМашинам();

КонецПроцедуры

Процедура УдалитьЗаписьЗаказаИзРейса(ЗаказПокупателя, Рейс)
	Об = Рейс.ПолучитьОбъект();
	НайдСтр = Об.ДокументыРейса.Найти(ЗаказПокупателя,"Документ");

	Если НайдСтр <> Неопределено Тогда
		Об.ДокументыРейса.Удалить(НайдСтр);
		Об.РаспределенаСуммаПоВсемЗаказам = Ложь;
		Об.ВыпущеныВсеРеализации = Ложь;
		Об.Утвержден = Ложь;
		Об.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры	

Функция НайтиМашинуРейса(Рейс)
	НайдСтр = СводнаяИнформацияПоМашинамНаДень.Найти(Рейс,"Рейс");
	Если НайдСтр = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат НайдСтр.Машина;
	КонецЕсли;	
КонецФункции

Процедура ДоставкаПокупателюРейсПриИзменении(Элемент)
	НайдСтр = СводнаяИнформацияПоМашинамНаДень.Найти(Элемент.Значение,"РейсПредставление");
	
	Если НайдСтр <> Неопределено Тогда
		Рейс = НайдСтр.Рейс;
	Иначе
		Рейс = Неопределено;
	КонецЕсли;	
	
	ТекСтр = ЭлементыФормы.ДоставкаПокупателю.ТекущаяСтрока;
	ЗаказПокупателя = ТекСтр.ЗаказПокупателя;
	РейсБыл = ТекСтр.Рейс;
	
	Если РейсБыл <> Рейс Тогда
		Если ЗначениеЗаполнено(РейсБыл) Тогда
			УдалитьЗаписьЗаказаИзРейса(ЗаказПокупателя,РейсБыл);
		КонецЕсли;	
		
		ТекСтр.Рейс = Рейс;
		
		Если ЗначениеЗаполнено(Рейс) Тогда
			СделатьЗаписьЗаказаВРейс(ЗаказПокупателя, Рейс);
		КонецЕсли;
		
		Машина = НайтиМашинуРейса(Рейс);
		ТекСтр.Машина = Машина;
		ТекСтр.НомерМашины = ?(ЗначениеЗаполнено(Машина), Машина.Код, "");
		
		ОбновитьСводнуюИнформациюПоРейсамИМашинам();
	КонецЕсли;
	
КонецПроцедуры

Процедура РассылкаSMSВодителямКандидатамНажатие(Элемент)
	ФормаРассылкиSMSКандидатамВодителям = ПолучитьФорму("ФормаРассылкиSMSКандидатамВодителям");
	ФормаРассылкиSMSКандидатамВодителям.Открыть();
КонецПроцедуры

Процедура СводнаяИнформацияПоДнямПриПолученииДанных(Элемент, ОформленияСтрок)
	//ТД = ЭлементыФормы.СводнаяИнформацияПоДням.ТекущаяСтрока;
	//Если ТД <> Неопределено Тогда
	//	Для Каждого ОформлениеСтрок Из ОформленияСтрок Цикл
	//		Если ТД.ДоставкиВРегионы Тогда
	//			ОформлениеСтрок.Ячейки.Р.ЦветТекста = ?(ТД.ЕстьНевключенныеДоставкиВРегионы , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
	//			ОформлениеСтрок.Ячейки.Р.УстановитьТекст("Р");
	//		Иначе
	//			ОформлениеСтрок.Ячейки.Р.УстановитьТекст("");
	//		КонецЕсли; 
	//		Если ТД.МестныеДоставки Тогда
	//			ОформлениеСтрок.Ячейки.М.ЦветТекста = ?(ТД.ЕстьНевключенныеМестныеДоставки , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
	//			ОформлениеСтрок.Ячейки.М.УстановитьТекст("М");
	//		Иначе
	//			ОформлениеСтрок.Ячейки.М.УстановитьТекст("");
	//		КонецЕсли; 
	//		Если ТД.ДоставкиКонтейнером Тогда
	//			ОформлениеСтрок.Ячейки.К.ЦветТекста = ?(ТД.ЕстьНевключенныеДоставкиКонтейнером , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
	//			ОформлениеСтрок.Ячейки.К.УстановитьТекст("К");
	//		Иначе
	//			ОформлениеСтрок.Ячейки.К.УстановитьТекст("");
	//		КонецЕсли;
	//		
	//		Если ТД.ДоставкиВРегионы Тогда
	//			ОформлениеСтрок.Ячейки.Колонка1.ЦветТекста = ?(ТД.ЕстьНевключенныеДоставкиВРегионы , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
	//			ОформлениеСтрок.Ячейки.Колонка1.УстановитьТекст("Р");
	//		Иначе
	//			ОформлениеСтрок.Ячейки.Колонка1.УстановитьТекст("");
	//		КонецЕсли; 
	//		
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

Процедура СводнаяИнформацияПоДнямПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ОформлениеСтроки.ДанныеСтроки.ДоставкиВРегионы Тогда
		ОформлениеСтроки.Ячейки.Р.ЦветТекста = ?(ОформлениеСтроки.ДанныеСтроки.ЕстьНевключенныеДоставкиВРегионы , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
		ОформлениеСтроки.Ячейки.Р.УстановитьТекст("Р");
	Иначе
		ОформлениеСтроки.Ячейки.Р.УстановитьТекст("");
	КонецЕсли; 
	Если ОформлениеСтроки.ДанныеСтроки.МестныеДоставки Тогда
		ОформлениеСтроки.Ячейки.М.ЦветТекста = ?(ОформлениеСтроки.ДанныеСтроки.ЕстьНевключенныеМестныеДоставки , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
		ОформлениеСтроки.Ячейки.М.УстановитьТекст("М");
	Иначе
		ОформлениеСтроки.Ячейки.М.УстановитьТекст("");
	КонецЕсли; 
	Если ОформлениеСтроки.ДанныеСтроки.ДоставкиКонтейнером Тогда
		ОформлениеСтроки.Ячейки.К.ЦветТекста = ?(ОформлениеСтроки.ДанныеСтроки.ЕстьНевключенныеДоставкиКонтейнером , ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ЦветТекстаПоля);
		ОформлениеСтроки.Ячейки.К.УстановитьТекст("К");
	Иначе
		ОформлениеСтроки.Ячейки.К.УстановитьТекст("");
	КонецЕсли; 
КонецПроцедуры

//ИТС 06.06.16(
Процедура КоманднаяПанель2Расшифровка(Кнопка)
	
	ТД = ЭлементыФормы.СводнаяИнформацияПоДням.ТекущиеДанные;
	Количество = СводнаяИнформацияПоДням.Количество();
	Если Количество < 1 Тогда
		Возврат;
	КонецЕсли;	
	
	ПервСтр = СводнаяИнформацияПоДням[0];
	ПослСтр = СводнаяИнформацияПоДням[Количество-1];
	
	Если ЗначениеЗаполнено(ТД) Тогда
		
		ОтчетРасшифровка.УстановитьНачальныеНастройки();
			
		УниверсальныйОтчет = ОтчетРасшифровка.УниверсальныйОтчет;
		УниверсальныйОтчет.ДатаНач = НачалоДня(ПервСтр.ДатаДоставки);
		УниверсальныйОтчет.ДатаКон = КонецДня(ПослСтр.ДатаДоставки);
			
		ФормаОтчета = Отчетрасшифровка.ПолучитьФорму("Форма");
		ФормаОтчета.Открыть();
		ФормаОтчета.ОбновитьОтчет();
			
	КонецЕсли;
	
КонецПроцедуры
//ИТС 06.06.16)

//ИТС 07.07.14(
Процедура СнятьОтборСтрокВДоставкеПокупателю()
   Отбор = ЭлементыФормы.ДоставкаПокупателю.ОтборСтрок;
   Для Каждого Элемент Из Отбор Цикл
     Элемент.Использование = Ложь;
   КонецЦикла;
КонецПроцедуры

Процедура СводнаяИнформацияПоМашинамНаДеньПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки) И Не ОформлениеСтроки.ДанныеСтроки.Утвержден Тогда
		ОформлениеСтроки.Ячейки.РейсПредставление.ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла
	Иначе	
		ОформлениеСтроки.Ячейки.РейсПредставление.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
	КонецЕсли; 

КонецПроцедуры
//ИТС07.06.14)

//ИМИК 10.09.14(
Процедура НадписьВзаиморасчетыПоПеревозкамНажатие(Элемент)
	
	ОтчетВзаиморасчетыПоПеревозкам.УстановитьНачальныеНастройки();
		
	УниверсальныйОтчет = ОтчетВзаиморасчетыПоПеревозкам.УниверсальныйОтчет;
	УниверсальныйОтчет.ДатаКон = КонецДня(ТекущаяДата());
		
	ФормаОтчета = ОтчетВзаиморасчетыПоПеревозкам.ПолучитьФорму("Форма");
	ФормаОтчета.Открыть();
	ФормаОтчета.ОбновитьОтчет();

КонецПроцедуры

//ИМИК 12.09.14(
Процедура СводнаяИнформацияПоМашинамНаДеньРейсПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	ТД = ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.ТекущиеДанные;
	ТД.Рейс.ПолучитьФорму().Открыть();
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ДоставкаПокупателюРейсПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	ТД = ЭлементыФормы.ДоставкаПокупателю.ТекущиеДанные;
	ТД.Рейс.ПолучитьФорму().Открыть();
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ВзаиморасчетыЗаПеревозкиНажатие(Элемент)
		
	ОтчетВзаиморасчетыПоПеревозкам.УстановитьНачальныеНастройки();
		
	УниверсальныйОтчет = ОтчетВзаиморасчетыПоПеревозкам.УниверсальныйОтчет;
	УниверсальныйОтчет.ДатаКон = КонецДня(ТекущаяДата());
		
	ФормаОтчета = ОтчетВзаиморасчетыПоПеревозкам.ПолучитьФорму("Форма");
	ФормаОтчета.Открыть();
	ФормаОтчета.ОбновитьОтчет();

КонецПроцедуры

Процедура КоманднаяПанель6Расшифровка(Кнопка)
	
	ТД = ЭлементыФормы.СводнаяИнформацияПоМашинамНаДень.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТД) Тогда
	 Рейс = ТД.Рейс;
	 Рейс.ПолучитьФорму().Открыть();
	КонецЕсли; 
	
КонецПроцедуры
//ИМИК 12.09.14)

//ИМИК 12.09.14(
Процедура ОбновитьИнформациюПоРейсамСНеотгруженнымиЗаказами()
	//++ ИТ-Сервис 11.08.15 
	//Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	ИТС_РейсДоставкиДокументыРейса.Ссылка КАК Рейс,
	//                      |	МАКСИМУМ(ВЫБОР
	//                      |			КОГДА РеализацияТоваровУслуг.Ссылка ЕСТЬ NULL 
	//                      |				ТОГДА ЛОЖЬ
	//                      |			ИНАЧЕ ИСТИНА
	//                      |		КОНЕЦ) КАК ПризнакНеотргуженных
	//                      |ПОМЕСТИТЬ ВТРейсы
	//                      |ИЗ
	//                      |	Документ.ИТС_РейсДоставки.ДокументыРейса КАК ИТС_РейсДоставкиДокументыРейса
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//                      |		ПО ИТС_РейсДоставкиДокументыРейса.Документ = РеализацияТоваровУслуг.Сделка
	//                      |			И (РеализацияТоваровУслуг.итс_ОтработаноКладовщиком = ЛОЖЬ)
	//                      |			И (НЕ РеализацияТоваровУслуг.ПометкаУдаления)
	//                      |ГДЕ
	//                      |	ИТС_РейсДоставкиДокументыРейса.Ссылка.ДатаРейса <= &НаДату
	//                      |	И ИТС_РейсДоставкиДокументыРейса.Ссылка.Проведен
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ИТС_РейсДоставкиДокументыРейса.Ссылка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТРейсы.Рейс,
	//                      |	ВТРейсы.Рейс.ДатаРейса КАК ДатаРейса
	//                      |ИЗ
	//                      |	ВТРейсы КАК ВТРейсы
	//                      |ГДЕ
	//                      |	ВТРейсы.ПризнакНеотргуженных
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	ВТРейсы.Рейс.Дата");
						  
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаОтслеживаияЗаказов", НачалоДня(Дата(2015, 8, 10)));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ЗаказыПокупателейОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			ЗаказПокупателя.ДатаОтгрузки <= &НаДату
	|				И ЗаказПокупателя.Дата >= &ДатаНачалаОтслеживаияЗаказов
	|				И ЗаказПокупателя В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ИТС_ДоставкаЗаказовОбороты.ЗаказПокупателя КАК ЗаказПокупателя
	|					ИЗ
	|						РегистрНакопления.ИТС_ДоставкаЗаказов.Обороты КАК ИТС_ДоставкаЗаказовОбороты)) КАК ЗаказыПокупателейОстатки
	|ГДЕ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.СкладГруппа В(&МассивСкладов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОтгрузки";
	//-- ИТ-Сервис 11.08.15 
							  
	Запрос.УстановитьПараметр("НаДату", НачалоДня(ТекущаяДата()));					  
	
	//++ ИТ-Сервис 12.11.15 #Ограничение доступности Нижневартовск 
	Запрос.УстановитьПараметр("МассивСкладов", мДоступныеСклады);
	//-- ИТ-Сервис 12.11.15  
	
	ЭлементыФормы.РейсыСНеотгруженнымиЗаказами.Значение.Загрузить(Запрос.Выполнить().Выгрузить());
	ЭлементыФормы.РейсыСНеотгруженнымиЗаказами.ОбновитьСтроки();
	
КонецПроцедуры	

//ИМИК 12.09.14)

//++ ИТС-Сервис 06.08.15 #Резервирование 
Процедура ДоставкаПокупателюПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Статус = "закрыт" Тогда 
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(155, 0, 0);
	ИначеЕсли ДанныеСтроки.Статус = "отгружен" Тогда 
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(0, 240, 0);
	ИначеЕсли ДанныеСтроки.Статус = "готов" Тогда 
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(36, 182, 255);
	ИначеЕсли ДанныеСтроки.Статус = "ожидается" Тогда 
    	ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(0, 0, 255);
	Иначе
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(255, 0, 0);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеСтроки.ЗаказПокупателя) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(186, 186, 186);
	Иначе
		ОформлениеСтроки.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеСтроки.ЗаказПокупателя) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 
		Склад = ДанныеСтроки.ЗаказПокупателя.СкладГруппа;
	Иначе
		Склад = ДанныеСтроки.ЗаказПокупателя.Склад;
	КонецЕсли;
	
	//#TODO
	Если Склад.Наименование = "Товары Нижневартовск" Тогда
		ОформлениеСтроки.Ячейки.ЗаказПокупателя.ЦветТекста = Новый Цвет(72, 194, 255);
	Иначе
		ОформлениеСтроки.Ячейки.ЗаказПокупателя.ЦветТекста = Новый Цвет(0, 0, 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура РаботатьСКалендаремПриИзменении(Элемент)
	
	ОбновитьИнформациюПоДоставкеНаДень();	
	
	УправлениеДоступностью();
	УправлениеВидимостью();
	
КонецПроцедуры

Процедура флПоказыватьТолькоНезакрытыеТоварыПриИзменении(Элемент)
	
	ОбновитьИнформациюПоДоставкеНаДень();	
	
КонецПроцедуры

Процедура УправлениеДоступностью()
	
	ЭлементыФормы.ПолеКалендаря.Доступность = (РежимРаботы = 0);
	
КонецПроцедуры

Процедура УправлениеВидимостью()
	
	ЭлементыФормы.ДоставкаПокупателю.Колонки.ДатаОтгрузки.Видимость = (РежимРаботы = 1);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭтаФорма.флПоказыватьТолькоНезакрытыеТовары = Ложь;
	ЭтаФорма.РежимРаботы 						= 0;
	
	УправлениеДоступностью();
	
	УправлениеВидимостью();
		
КонецПроцедуры
//-- ИТС-Сервис 06.08.15  

мОписаниеТипаЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0));
мОписаниеТипаБулево = Новый ОписаниеТипов("Булево");

//++ ИТ-Сервис 12.11.15 #Ограничение доступности Нижневартовск
СтрокаСПользователем = Справочники.ГруппыПользователей.Нижневартовск.ПользователиГруппы.Найти(ПараметрыСеанса.ТекущийПользователь);

мДоступныеСклады = Новый Массив;
Если СтрокаСПользователем = Неопределено Тогда
	ВыборкаСкладов = Справочники.Склады.Выбрать();
	Пока ВыборкаСкладов.Следующий() Цикл
		мДоступныеСклады.Добавить(ВыборкаСкладов.Ссылка);					
	КонецЦикла;
Иначе
	мДоступныеСклады.Добавить(Справочники.Склады.ТоварыНижневартовск); 
	мДоступныеСклады.Добавить(Справочники.Склады.НайтиПоКоду("Т00000017")); 
	мДоступныеСклады.Добавить(Справочники.Склады.НайтиПоКоду("Т00000018")); 
КонецЕсли;
//-- ИТ-Сервис 12.11.15  