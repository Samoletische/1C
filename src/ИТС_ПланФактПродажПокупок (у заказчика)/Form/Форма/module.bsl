Перем РасшифровкаПоставкиКонтрагентИмя;
Перем РасшифровкаПоставкиКонтрагентДень;
Перем РасшифровкаПоставкиГруппаЗатратИмя;
Перем РасшифровкаПоставкиПримечание;
Перем РасшифровкаПоставкиГруппаЗатратДень;
Перем РасшифровкаПоставкиИтогДень;

Перем РасшифровкаКонтрольнаяСтрокаДень;

Перем РасшифровкаПродажиКонтрагентИмя;
Перем РасшифровкаПродажиПримечание;
Перем РасшифровкаПродажиКонтрагентДень;
Перем РасшифровкаГруппаКонтрагентовИмя;
Перем РасшифровкаГруппаКонтрагентовДень;
Перем РасшифровкаГруппаКонтрагентовВсего;
Перем РасшифровкаГруппаКонтрагентовПримечание;
Перем РасшифровкаПродажиИтогДень;

Перем УдалятьПустыеКолонкиОтчета;
Перем УдалятьПустыеСтрокиОтчета;
Перем СчитатьИтогПоНоменклатурнойГруппеВКонтрагенте;
Перем АвтоматическоеОбновлениеИнтервал;
Перем ДобавлятьНоменклатуру;
Перем ПоказыватьТолькоВыбраннуюГруппуЗатрат;

Функция ПроверкаЗаполненияПараметров()
	ЭлементыФормы.ТабДок.Очистить();
	
	Макет = ПолучитьМакет("МакетОбработки");
	
	НетОшибок = Истина;
	
	Если Не ЗначениеЗаполнено(ЭлементыФормы.ДатаНачала.Значение) ИЛИ Не ЗначениеЗаполнено(ЭлементыФормы.ДатаОкончания.Значение) Тогда
		Область = Макет.ПолучитьОбласть("Сообщение");
		Область.Параметры.Сообщение = "Необходимо выбрать период планирования";
		ЭлементыФормы.ТабДок.Вывести(Область);
		НетОшибок = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭлементыФормы.НоменклатурнаяГруппа.Значение) Тогда
		Область = Макет.ПолучитьОбласть("Сообщение");
		Область.Параметры.Сообщение = "Необходимо выбрать номенклатурную группу";
		ЭлементыФормы.ТабДок.Вывести(Область);
		НетОшибок = Ложь;
	КонецЕсли;
	
	Возврат НетОшибок;
КонецФункции

Процедура СформироватьТаблицуПоставок(Макет, ТабДок, ТекстЗапроса)
	НачалоПериода = НачалоДня(ДатаНач);
	ОкончаниеПериода = КонецДня(ДатаКон);
	Сегодня = НачалоДня(ТекущаяДата());
	Вчера = НачалоДня(Сегодня - 1);
	Завтра = КонецДня(Сегодня) + 1;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаЗатрат", ЭлементыФормы.НоменклатурнаяГруппа.Значение);
	Запрос.УстановитьПараметр("ДатаНачалаФакт", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончанияПлан", ОкончаниеПериода);
	
	Если Сегодня >= НачалоПериода Тогда
		Если Сегодня < ОкончаниеПериода Тогда
			// сегодня в пределах периода
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", КонецДня(Сегодня));
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		Иначе
			// весь период - это факт
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", ОкончаниеПериода);
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		КонецЕсли;
	Иначе
		// весь период - это план
		Запрос.УстановитьПараметр("ДатаОкончанияФакт", Сегодня);
		Запрос.УстановитьПараметр("ДатаНачалаПлан", НачалоПериода);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	// формируем шапку таблицы
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПоставокНачало");
	ТабДок.Вывести(Область);
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПоставокДень");
	ТекущаяДата = НачалоПериода;
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		Область.Параметры.День = ТекущаяДата;
		ТабДок.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПоставокКонец");
	ТабДок.Присоединить(Область);
	
	СтрШапка = ТабДок.Область("ШапкаТаблицыПоставокНачало").Верх;
	ДеньНачало = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право + 1;
	ДеньКонец = ТабДок.Область("ШапкаТаблицыПоставокКонец").Лево - 1;
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	Выборка1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеИмеются = Ложь;
	
	// проход по поставщикам
	Пока Выборка1.Следующий() Цикл
		//Если Не ЗначениеЗаполнено(Выборка1.Контрагент) Тогда
		//	Продолжить;
		//КонецЕсли;
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок1Начало");
		Область.Параметры.Контрагент = Выборка1.Контрагент;
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПоставкиКонтрагентИмя);
		СР.Вставить("ИД", Выборка1.Контрагент);
		Область.Параметры.Расшифровка = СР;
		ТабДок.Вывести(Область, 1);
		
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок1День");
		ТекущаяДата = НачалоПериода;
		Пока ТекущаяДата <= ОкончаниеПериода Цикл
			Область.Параметры.День = "";
			СР = новый Структура;
			СР.Вставить("ТипЯчейки", РасшифровкаПоставкиКонтрагентДень);
			СР.Вставить("ИД", "");
			Область.Параметры.Расшифровка = СР;
			ТабДок.Присоединить(Область);
			ТекущаяДата = ТекущаяДата + 86400;
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок1Конец");
		Область.Параметры.Всего = "";
		ТабДок.Присоединить(Область);
	
		Выборка2 = Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ПерваяГЗЗакончена = Ложь;
		// проход по составному полю: Примечание + Группа затрат
		Пока Выборка2.Следующий() Цикл
			СтрФактПримечание = Неопределено;
			Выборка3 = Выборка2.Выбрать();
			//ПерваяГЗ = Истина;
			// проход по дням
			Если Выборка3.Следующий() Тогда
				// выводим начало строки
				Если Не ЗначениеЗаполнено(Выборка3.ГруппаЗатрат) Тогда
					Продолжить;
				КонецЕсли;
				//Если ПерваяГЗ 
				//	И ((Выборка3.Примечание = "-=Факт=-" И Не ПерваяГЗЗакончена)
				//	ИЛИ Выборка3.Примечание <> "-=Факт=-") Тогда
				Если (Выборка3.Примечание = "-=Факт=-" И Не ПерваяГЗЗакончена)
					ИЛИ Выборка3.Примечание <> "-=Факт=-" Тогда
					//ПерваяГЗ = Ложь;
					
					Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2Начало");
					СР = новый Структура;
					Если Выборка3.Примечание = "-=Факт=-" Тогда
						Область.Параметры.Примечание = "";
						СР.Вставить("Порядок", 0);
					Иначе
						Область.Параметры.Примечание = Выборка3.Примечание;
						СР.Вставить("Порядок", Выборка3.Порядок);
					КонецЕсли;
					
					Область.Параметры.ГруппаЗатрат = Выборка3.ГруппаЗатрат;
					СР.Вставить("ИД", Выборка3.ГруппаЗатрат);
					СР.Вставить("ТипЯчейки", РасшифровкаПоставкиГруппаЗатратИмя);
					Область.Параметры.Расшифровка = СР;
					СР = новый Структура;
					СР.Вставить("ТипЯчейки", РасшифровкаПоставкиПримечание);
					Если Выборка3.Примечание = "-=Факт=-" Тогда
						СР.Вставить("Примечание", "");
					Иначе
						СР.Вставить("Примечание", Выборка3.Примечание);
					КонецЕсли;
					Область.Параметры.РасшифровкаПримечания = СР;
					ТабДок.Вывести(Область, 2);
				КонецЕсли;
				
				// выводим остальные ячейки строки
				// проход по датам в таблице
				ТекущаяДата = НачалоПериода;
				НетПримечания = Истина;
				Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2День");
				Для Кол = ДеньНачало По ДеньКонец Цикл
					ТекущаяДата = ТабДок.Область("R" + Строка(СтрШапка) + "C" + Строка(Кол)).Значение;
					// пропускаем значения плана до завтрашнего числа
					Если ТекущаяДата < Завтра И Выборка3.Примечание <> "-=Факт=-" Тогда
						Область.Параметры.День = 0;
						СР = новый Структура;
						СР.Вставить("ТипЯчейки", РасшифровкаПоставкиГруппаЗатратДень);
						Область.Параметры.Расшифровка = СР;
						ТабДок.Присоединить(Область);
						
						Продолжить;
					КонецЕсли;
					// выбираем из выборки строки для текущей даты
					МассивСтрок = ТЗ.НайтиСтроки(Новый Структура("Контрагент, ПримечаниеГЗ, Период", Выборка3.Контрагент, Выборка3.ПримечаниеГЗ, ТекущаяДата));
					
					// считаем сумму по дню
					СуммаДень = 0;
					Для Каждого СтрокаКоличество Из МассивСтрок Цикл
						СуммаДень = СуммаДень + СтрокаКоличество.Количество;
					КонецЦикла;
					
					// если кроме фактической строки были строки у этого контрагента и текущая дата меньше завтра
					Если Выборка3.Примечание = "-=Факт=-" И ПерваяГЗЗакончена Тогда	
						Если ТекущаяДата < Завтра Тогда
							Если СтрФактПримечание = Неопределено Тогда
								СтрФактПримечание = ОпределитьСтрокуПервойГруппыЗатрат(Выборка3.Контрагент, Выборка3.ГруппаЗатрат);
							КонецЕсли;
							ТабДок.Область("R" + Строка(СтрФактПримечание) + "C" + Строка(Кол)).Значение = СуммаДень;
						КонецЕсли;
					Иначе
						Область.Параметры.День = СуммаДень;
						СР = новый Структура;
						СР.Вставить("ТипЯчейки", РасшифровкаПоставкиГруппаЗатратДень);
						Область.Параметры.Расшифровка = СР;
						ТабДок.Присоединить(Область);
					КонецЕсли;
				КонецЦикла;
				
				Если Выборка3.Примечание = "-=Факт=-" И Не ПерваяГЗЗакончена 
					ИЛИ Выборка3.Примечание <> "-=Факт=-" Тогда
					// выводим конец строки
					Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2Конец");
					Область.Параметры.Всего = "";
					ТабДок.Присоединить(Область);
				КонецЕсли;
				
				Если Не ПерваяГЗЗакончена Тогда
					ПерваяГЗЗакончена = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	// сформировать итоговую строку таблицы
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПоставокНачало");
	ТабДок.Вывести(Область);
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПоставокДень");
	ТекущаяДата = НачалоПериода;
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		Область.Параметры.День = "";
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПоставкиИтогДень);
		СР.Вставить("ИД", "");
		Область.Параметры.Расшифровка = СР;
		ТабДок.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПоставокКонец");
	Область.Параметры.Всего = "";
	ТабДок.Присоединить(Область);
	
	// обсчитываем таблицу поставок
	ОбсчетТаблицыПоставок();
КонецПроцедуры

Функция ОпределитьСтрокуПервойГруппыЗатрат(Контрагент, ГруппаЗатрат)
	Стр = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокНачало").Верх + 1;
	Кол = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	
	Строка = Неопределено;
	
	// находим контрагента
	Пока Истина Цикл
		Расш = ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка;
		Если ЗначениеЗаполнено(Расш) Тогда
			Если Расш.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя И Расш.ИД = Контрагент Тогда
				Строка = Стр + 1;
				Прервать;
			КонецЕсли;
		Иначе
			Прервать;
		КонецЕсли;
		Стр = Стр + 1;
	КонецЦикла;
	
	// находим группузатрат + примечание
	Пока Истина Цикл
		Расш = ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка;
		Если ЗначениеЗаполнено(Расш) Тогда
			Если Расш.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя И Расш.ИД = ГруппаЗатрат Тогда
				Строка = Стр;
				Прервать;
			КонецЕсли;
		Иначе
			Прервать;
		КонецЕсли;
		Стр = Стр + 1;
	КонецЦикла;
	
	Возврат Строка;
КонецФункции

Процедура СформироватьСтрокуИтогов(Макет, ТабДок)
	НачалоПериода = ДатаНач;
	ОкончаниеПериода = ДатаКон;
	
	Область = Макет.ПолучитьОбласть("КонтрольнаяСтрокаНачало");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("КонтрольнаяСтрокаДень");
	ТекущаяДата = НачалоПериода;
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		Область.Параметры.День = "";
		СР = новый Структура("ТипЯчейки,ИД", РасшифровкаКонтрольнаяСтрокаДень, "");
		Область.Параметры.Расшифровка = СР;
		ТабДок.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	
	//Область = Макет.ПолучитьОбласть("КонтрольнаяСтрокаКонец");
	//СР = новый Структура("ТипЯчейки,ИД", РасшифровкаКонтрольнаяСтрокаВсего, "");
	//Область.Параметры.Расшифровка = СР;
	//ТабДок.Присоединить(Область);
КонецПроцедуры

Процедура СформироватьТаблицуПродаж(Макет, ТабДок, ТекстЗапроса)
	НачалоПериода = НачалоДня(ДатаНач);
	ОкончаниеПериода = КонецДня(ДатаКон);
	Сегодня = НачалоДня(ТекущаяДата());
	Вчера = НачалоДня(Сегодня - 1);
	Завтра = КонецДня(Сегодня) + 1;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаЗатрат", ЭлементыФормы.НоменклатурнаяГруппа.Значение);
	Запрос.УстановитьПараметр("ДатаНачалаФакт", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончанияПлан", ОкончаниеПериода);
		
	Если Сегодня >= НачалоПериода Тогда
		Если Сегодня < ОкончаниеПериода Тогда
			// сегодня в пределах периода
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", КонецДня(Сегодня));
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		Иначе
			// весь период - это факт
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", ОкончаниеПериода);
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		КонецЕсли;
	Иначе
		// весь период - это план
		Запрос.УстановитьПараметр("ДатаОкончанияФакт", Сегодня);
		Запрос.УстановитьПараметр("ДатаНачалаПлан", НачалоПериода);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	// сформировать итоговую строку таблицы
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПродажНачало");
	ТабДок.Вывести(Область);
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПродажДень");
	ТекущаяДата = НачалоПериода;
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		Область.Параметры.День = "";
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПродажиИтогДень);
		СР.Вставить("ИД", "");
		Область.Параметры.Расшифровка = СР;
		ТабДок.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("СтрокаИтоговПродажКонец");
	Область.Параметры.Всего = "";
	//СР = новый Структура;
	//СР.Вставить("ТипЯчейки", РасшифровкаПродажиИтогВсего);
	//СР.Вставить("ИД", "");
	//Область.Параметры.Расшифровка = СР;
	ТабДок.Присоединить(Область);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	Выборка1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеИмеются = Ложь;
	
	// проход по продавцам
	Пока Выборка1.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродажНачало");
		Область.Параметры.Контрагент = Выборка1.Контрагент;
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПродажиКонтрагентИмя);
		СР.Вставить("ИД", Выборка1.Контрагент);
		Область.Параметры.Расшифровка = СР;
		ТабДок.Вывести(Область, Выборка1.Уровень());
		
		// Расчёт координат "Примечания"
		Кол = ТабДок.Область("СтрокиТаблицыПродажНачало").Право;
		Стр = ТабДок.Область("СтрокиТаблицыПродажНачало").Верх;
		
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПродажиПримечание);
		СР.Вставить("ИД", "");
		ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка = СР;
		
		// проход по датам в таблице
		ТекущаяДата = НачалоПериода;
		НетПримечания = Истина;
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродажДень");
		Пока ТекущаяДата <= ОкончаниеПериода Цикл
			ЕстьЗначение = Ложь;
			ЯчКол = 0;
			ЯчСтр = 0;
			
			// проход по датам в запросе
			Выборка2 = Выборка1.Выбрать();
			НетЗначения = Истина;
			Пока Выборка2.Следующий() Цикл
				Если Формат(ТекущаяДата, "ДФ=дд.ММ") = Формат(Выборка2.Период, "ДФ=дд.ММ") Тогда
					Если ЕстьЗначение Тогда
						ЯчОбласть = ТабДок.Область("R" + Строка(ЯчСтр) + "C" + Строка(ЯчКол));
						ЯчОбласть.Значение = ЯчОбласть.Значение + Выборка2.Количество;
					Иначе
						ЕстьЗначение = Истина;
						
						Область.Параметры.День = Выборка2.Количество;
						
						Если Выборка2.Примечание <> "" И НетПримечания и Выборка2.Примечание <> "-=Факт=-" Тогда
							НетПримечания = Ложь;
							ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение = Выборка2.Примечание;
						КонецЕсли;
						
						СР = новый Структура;
						СР.Вставить("ТипЯчейки", РасшифровкаПродажиКонтрагентДень);
						СР.Вставить("ИД", "");
						Область.Параметры.Расшифровка = СР;
						
						ТабДок.Присоединить(Область);
						
						// запоминаем ячейку для дальнейшего ссумирования количества этого дня
						ЯчКол = ТабДок.Область("СтрокиТаблицыПродажДень").Право;
						ЯчСтр = ТабДок.Область("СтрокиТаблицыПродажДень").Верх;
					КонецЕсли;
					
					НетЗначения = Ложь;
				КонецЕсли;
			КонецЦикла;
			Если НетЗначения Тогда
				Область.Параметры.День = "";
				СР = новый Структура;
				СР.Вставить("ТипЯчейки", РасшифровкаПродажиКонтрагентДень);
				СР.Вставить("ИД", "");
				Область.Параметры.Расшифровка = СР;
				ТабДок.Присоединить(Область);
			Иначе
				ДанныеИмеются = Истина;
			КонецЕсли;
			ТекущаяДата = ТекущаяДата + 86400;
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродажКонец");
		Область.Параметры.Всего = "";
		//СР = новый Структура;
		//СР.Вставить("ТипЯчейки", РасшифровкаПродажиКонтрагентВсего);
		//СР.Вставить("ИД", "");
		//Область.Параметры.Расшифровка = СР;
		ТабДок.Присоединить(Область);
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	// Формирование строки "Группа контрагентов"
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажиОбороты.Период,
	               |	ПродажиОбороты.Контрагент КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
	               |			ТОГДА ПродажиОбороты.КоличествоОборот
	               |		ИНАЧЕ ПродажиОбороты.КоличествоОборот * ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
	               |	КОНЕЦ КАК Количество,
	               |	""-=Факт=-"" КАК Примечание
	               |ПОМЕСТИТЬ ФактПериод
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			&ДатаНачалаФакт,
	               |			&ДатаОкончанияФакт,
	               |			День,
	               |			Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат
	               |				И Контрагент.ИТС_УчаствуетВПланированииКакПокупатель = ЛОЖЬ
	               |				И Контрагент.Покупатель = ИСТИНА) КАК ПродажиОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИТС_ПланированиеЗакупаПродаж.Период,
	               |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
	               |	ИТС_ПланированиеЗакупаПродаж.Количество,
	               |	ИТС_ПланированиеЗакупаПродаж.Примечание
	               |ПОМЕСТИТЬ ПланПериод
	               |ИЗ
	               |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
	               |ГДЕ
	               |	ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаПлан
	               |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
	               |	И ИТС_ПланированиеЗакупаПродаж.Поставки = ЛОЖЬ
	               |	И ИТС_ПланированиеЗакупаПродаж.Контрагент = ""-=Группа=-""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФактПериод.Период КАК Период,
	               |	ФактПериод.Контрагент КАК Контрагент,
	               |	ФактПериод.Количество КАК Количество,
	               |	""-=Факт=-"" КАК Примечание,
	               |	ФактПериод.Контрагент.Наименование КАК КонтрагентНаименование
	               |ИЗ
	               |	ФактПериод КАК ФактПериод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФактПериод.Период,
	               |	ФактПериод.Контрагент,
	               |	ФактПериод.Контрагент.Наименование,
	               |	ФактПериод.Количество
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПланПериод.Период,
	               |	""-=Группа=-"",
	               |	ПланПериод.Количество,
	               |	ПланПериод.Примечание,
	               |	ПланПериод.Контрагент.Наименование
	               |ИЗ
	               |	ПланПериод КАК ПланПериод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПланПериод.Период,
	               |	ПланПериод.Количество,
	               |	ПланПериод.Примечание,
	               |	ПланПериод.Контрагент.Наименование
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период,
	               |	КонтрагентНаименование
	               |ИТОГИ
	               |	СУММА(Количество)
	               |ПО
	               |	Период";
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ЕдиницыИзмерения.ЕдиницаПоКлассификатору,
	//               |	ЕдиницыИзмерения.Вес,
	//               |	ЕдиницыИзмерения.Владелец
	//               |ПОМЕСТИТЬ ЕИ
	//               |ИЗ
	//               |	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	//               |ГДЕ
	//               |	ЕдиницыИзмерения.Вес <> 0
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	ЕдиницыИзмерения.ЕдиницаПоКлассификатору,
	//               |	1,
	//               |	ЕдиницыИзмерения.Владелец
	//               |ИЗ
	//               |	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	//               |ГДЕ
	//               |	ЕдиницыИзмерения.Вес = 0
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПродажиОбороты.Период,
	//               |	ПродажиОбороты.Контрагент КАК Контрагент,
	//               |	ПродажиОбороты.КоличествоОборот * ЕдиницыИзмерения.Вес КАК Количество
	//               |ПОМЕСТИТЬ ФактПериод
	//               |ИЗ
	//               |	РегистрНакопления.Продажи.Обороты(
	//               |			&ДатаНачалаФакт,
	//               |			&ДатаОкончанияФакт,
	//               |			День,
	//               |			Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат
	//               |				И Контрагент.ИТС_УчаствуетВПланировании = ЛОЖЬ
	//               |				И Контрагент.Покупатель = ИСТИНА) КАК ПродажиОбороты
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ЕИ КАК ЕдиницыИзмерения
	//               |		ПО ПродажиОбороты.Номенклатура = ЕдиницыИзмерения.Владелец
	//               |ГДЕ
	//               |	ЕдиницыИзмерения.ЕдиницаПоКлассификатору = ПродажиОбороты.Номенклатура.БазоваяЕдиницаИзмерения
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ИТС_ПланированиеЗакупаПродаж.Период,
	//               |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
	//               |	ИТС_ПланированиеЗакупаПродаж.Количество,
	//               |	ИТС_ПланированиеЗакупаПродаж.Примечание
	//               |ПОМЕСТИТЬ ПланПериод
	//               |ИЗ
	//               |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
	//               |ГДЕ
	//               |	ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаПлан
	//               |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
	//               |	И ИТС_ПланированиеЗакупаПродаж.Поставки = ЛОЖЬ
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ФактПериод.Период КАК Период,
	//               |	ФактПериод.Контрагент КАК Контрагент,
	//               |	ФактПериод.Количество КАК Количество,
	//               |	""-=Факт=-"" КАК Примечание,
	//               |	ФактПериод.Контрагент.Наименование КАК КонтрагентНаименование
	//               |ИЗ
	//               |	ФактПериод КАК ФактПериод
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ФактПериод.Период,
	//               |	ФактПериод.Контрагент,
	//               |	ФактПериод.Количество,
	//               |	ФактПериод.Контрагент.Наименование
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	ПланПериод.Период,
	//               |	""-=Группа=-"",
	//               |	ПланПериод.Количество,
	//               |	ПланПериод.Примечание,
	//               |	ПланПериод.Контрагент.Наименование
	//               |ИЗ
	//               |	ПланПериод КАК ПланПериод
	//               |ГДЕ
	//               |	ПланПериод.Контрагент = ""-=Группа=-""
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ПланПериод.Период,
	//               |	ПланПериод.Количество,
	//               |	ПланПериод.Примечание,
	//               |	ПланПериод.Контрагент.Наименование
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Период,
	//               |	КонтрагентНаименование
	//               |ИТОГИ
	//               |	СУММА(Количество)
	//               |ПО
	//               |	Период";
				   
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаЗатрат", ЭлементыФормы.НоменклатурнаяГруппа.Значение);
	Запрос.УстановитьПараметр("ДатаНачалаФакт", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончанияПлан", ОкончаниеПериода);
	//Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору", Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("166"));
		
	Если Сегодня >= НачалоПериода Тогда
		Если Сегодня < ОкончаниеПериода Тогда
			// сегодня в пределах периода
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", КонецДня(Сегодня));
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		Иначе
			// весь период - это факт
			Запрос.УстановитьПараметр("ДатаОкончанияФакт", ОкончаниеПериода);
			Запрос.УстановитьПараметр("ДатаНачалаПлан", Завтра);
		КонецЕсли;
	Иначе
		// весь период - это план
		Запрос.УстановитьПараметр("ДатаОкончанияФакт", Сегодня);
		Запрос.УстановитьПараметр("ДатаНачалаПлан", НачалоПериода);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродаж2Начало");
	СР = новый Структура;
	СР.Вставить("ТипЯчейки", РасшифровкаГруппаКонтрагентовИмя);
	СР.Вставить("ИД", "");
	Область.Параметры.Расшифровка = СР;
	ТабДок.Вывести(Область, Выборка1.Уровень());
		
	// Расчёт координат "Примечания"
	Кол = ТабДок.Область("СтрокиТаблицыПродаж2Начало").Право;
	Стр = ТабДок.Область("СтрокиТаблицыПродаж2Начало").Верх;
	
	СР = новый Структура;
	СР.Вставить("ТипЯчейки", РасшифровкаГруппаКонтрагентовПримечание);
	СР.Вставить("ИД", "");
	ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка = СР;
		
	// проход по датам в таблице
	ТекущаяДата = НачалоПериода;
	НетПримечания = Истина;
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродаж2День");
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		ЕстьЗначение = Ложь;
		ЯчКол = 0;
		ЯчСтр = 0;
		// проход по датам в запросе
		Выборка1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НетЗначения = Истина;
		Пока Выборка1.Следующий() Цикл
			Если Строка(Выборка1.Период) <> "" Тогда
				Если Формат(ТекущаяДата, "ДФ=дд.ММ") = Формат(Выборка1.Период, "ДФ=дд.ММ") Тогда
					Если ЕстьЗначение Тогда
						ЯчОбласть = ТабДок.Область("R" + Строка(ЯчСтр) + "C" + Строка(ЯчКол));
						ЯчОбласть.Значение = ЯчОбласть.Значение + Выборка1.Количество;
					Иначе
						ЕстьЗначение = Истина;
						Область.Параметры.День = Выборка1.Количество;
					
						Выборка2 = Выборка1.Выбрать();
						Выборка2.Следующий();
						Если Выборка2.Примечание <> "" И НетПримечания и Выборка2.Примечание <> "-=Факт=-" Тогда
							НетПримечания = Ложь;
							ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение = Выборка2.Примечание;
						КонецЕсли;
					
						СР = новый Структура;
						СР.Вставить("ТипЯчейки", РасшифровкаГруппаКонтрагентовДень);
						СР.Вставить("ИД", "");
						Область.Параметры.Расшифровка = СР;
					
						ТабДок.Присоединить(Область);
						
						// запоминаем ячейку для дальнейшего ссумирования количества этого дня
						ЯчКол = ТабДок.Область("СтрокиТаблицыПродаж2День").Право;
						ЯчСтр = ТабДок.Область("СтрокиТаблицыПродаж2День").Верх;
					КонецЕсли;
					
					НетЗначения = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если НетЗначения Тогда
			Область.Параметры.День = "";
			СР = новый Структура;
			СР.Вставить("ТипЯчейки", РасшифровкаГруппаКонтрагентовДень);
			СР.Вставить("ИД", "");
			Область.Параметры.Расшифровка = СР;
			ТабДок.Присоединить(Область);
		Иначе
			ДанныеИмеются = Истина;
		КонецЕсли;
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПродаж2Конец");
	Область.Параметры.Всего = "";
	СР = новый Структура;
	СР.Вставить("ТипЯчейки", РасшифровкаГруппаКонтрагентовВсего);
	СР.Вставить("ИД", "");
	Область.Параметры.Расшифровка = СР;
	ТабДок.Присоединить(Область);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
				   
	// формируем шапку таблицы
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПродажНачало");
	ТабДок.Вывести(Область);
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПродажДень");
	ТекущаяДата = НачалоПериода;
	Пока ТекущаяДата <= ОкончаниеПериода Цикл
		Область.Параметры.День = ТекущаяДата;
		//СР = новый Структура("ТипЯчейки,ИД", РасшифровкаПродажиШапкаДень, "");
		//Область.Параметры.Расшифровка = СР;
		ТабДок.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыПродажКонец");
	//СР = новый Структура("ТипЯчейки,ИД", РасшифровкаПродажиШапкаВсего, "");
	//Область.Параметры.Расшифровка = СР;
	ТабДок.Присоединить(Область);
	
	// обсчитываем таблицу продаж
	//Если ДанныеИмеются Тогда
		ОбсчетТаблицыПродаж();
	//КонецЕсли;
	
	// обсчитываем итоговую строку
	ОбсчетИтоговойСтроки();
КонецПроцедуры

Процедура СформироватьОтчет()
	Макет = Обработки.ИТС_ПланФактПродажПокупок.ПолучитьМакет("МакетОбработки");
	ТабДок = ЭлементыФормы.ТабДок;
	
	ТабДок.Очистить();
	
	Если КонецДня(ТекущаяДата()) + 1 > КонецДня(ДатаКон) Тогда
		// если таблица полностью фактическая
		ТекстПоставок = "ВЫБРАТЬ
		                |	Контрагенты.Ссылка КАК Контрагент,
		                |	Контрагенты.Наименование КАК КонтрагентНаименование
		                |ПОМЕСТИТЬ Поставщики
		                |ИЗ
		                |	Справочник.Контрагенты КАК Контрагенты
		                |ГДЕ
		                |	Контрагенты.Поставщик = ИСТИНА
		                |	И Контрагенты.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ЗакупкиОбороты.Период КАК Период,
		                |	ВЫБОР
		                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		                |	КОНЕЦ КАК Количество,
		                |	""-=Факт=-"" КАК Примечание,
		                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
		                |	""-=Факт=-"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование КАК ПримечаниеГЗ,
		                |	Поставщики.Контрагент КАК Контрагент,
		                |	Поставщики.КонтрагентНаименование КАК КонтрагентНаименование,
		                |	1000 КАК Порядок
		                |ИЗ
		                |	Поставщики КАК Поставщики
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(
		                |				&ДатаНачалаФакт,
		                |				&ДатаОкончанияФакт,
		                |				День,
		                |				Контрагент.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		                |					И Контрагент.Поставщик = ИСТИНА
		                |					И Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат) КАК ЗакупкиОбороты
		                |		ПО Поставщики.Контрагент = ЗакупкиОбороты.Контрагент
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ЗакупкиОбороты.Период,
		                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат,
		                |	ВЫБОР
		                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		                |	КОНЕЦ,
		                |	Поставщики.Контрагент,
		                |	Поставщики.КонтрагентНаименование,
		                |	""-=Факт=-"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	КонтрагентНаименование,
		                |	Порядок
		                |ИТОГИ
		                |	СУММА(Количество)
		                |ПО
		                |	Контрагент,
		                |	ПримечаниеГЗ";
		//ТекстПоставок = "ВЫБРАТЬ
		//                |	ЗакупкиОбороты.Период КАК Период,
		//                |	ЗакупкиОбороты.Контрагент КАК Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура КАК Номенклатура,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ КАК Количество,
		//                |	""-=Факт=-"" КАК Примечание,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
		//                |	ЗакупкиОбороты.Номенклатура.Наименование КАК НоменклатураНаименование,
		//                |	ЗакупкиОбороты.Контрагент.Наименование КАК КонтрагентНаименование,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование КАК НоменклатураНоменклатурнаяГруппаЗатратНаименование
		//                |ИЗ
		//                |	РегистрНакопления.Закупки.Обороты(
		//                |			&ДатаНачалаФакт,
		//                |			&ДатаОкончанияФакт,
		//                |			День,
		//                |			Контрагент.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		//                |				И Контрагент.Поставщик = ИСТИНА
		//                |				И Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат) КАК ЗакупкиОбороты
		//                |
		//                |СГРУППИРОВАТЬ ПО
		//                |	ЗакупкиОбороты.Период,
		//                |	ЗакупкиОбороты.Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат,
		//                |	ЗакупкиОбороты.Номенклатура.Наименование,
		//                |	ЗакупкиОбороты.Контрагент.Наименование,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ
		//                |
		//                |УПОРЯДОЧИТЬ ПО
		//                |	КонтрагентНаименование,
		//                |	НоменклатураНоменклатурнаяГруппаЗатратНаименование,
		//                |	НоменклатураНаименование
		//                |ИТОГИ
		//                |	СУММА(Количество)
		//                |ПО
		//                |	Контрагент,
		//                |	Номенклатура";
	Иначе
		// если в таблице присутствует план
		ТекстПоставок = "ВЫБРАТЬ
		                |	Контрагенты.Ссылка КАК Контрагент,
		                |	Контрагенты.Наименование КАК КонтрагентНаименование
		                |ПОМЕСТИТЬ Поставщики
		                |ИЗ
		                |	Справочник.Контрагенты КАК Контрагенты
		                |ГДЕ
		                |	Контрагенты.Поставщик = ИСТИНА
		                |	И Контрагенты.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ИТС_ПланированиеЗакупаПродаж.Контрагент.Наименование + ИТС_ПланированиеЗакупаПродаж.ГруппаЗатрат.Наименование КАК КонтрагентГЗ,
		                |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
		                |	ИТС_ПланированиеЗакупаПродаж.ГруппаЗатрат,
		                |	ИТС_ПланированиеЗакупаПродаж.Период,
		                |	ИТС_ПланированиеЗакупаПродаж.Примечание,
		                |	ИТС_ПланированиеЗакупаПродаж.Поставки,
		                |	ИТС_ПланированиеЗакупаПродаж.Количество,
		                |	ИТС_ПланированиеЗакупаПродаж.Порядок
		                |ПОМЕСТИТЬ КонтрагентыИГруппыЗатрат
		                |ИЗ
		                |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
		                |ГДЕ
		                |	ИТС_ПланированиеЗакупаПродаж.Поставки = ИСТИНА
		                |	И ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаФакт
		                |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	Поставщики.Контрагент КАК Контрагент,
		                |	ЗакупкиОбороты.Период КАК Период,
		                |	ВЫБОР
		                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		                |	КОНЕЦ КАК Количество,
		                |	""999"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование КАК Порядок,
		                |	""-=Факт=-"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование КАК ПримечаниеГЗ,
		                |	""-=Факт=-"" КАК Примечание,
		                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
		                |	Поставщики.КонтрагентНаименование КАК КонтрагентНаименование
		                |ИЗ
		                |	Поставщики КАК Поставщики
		                |		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыИГруппыЗатрат КАК КонтрагентыИГруппыЗатрат
		                |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(&ДатаНачалаФакт, &ДатаОкончанияФакт, День, ) КАК ЗакупкиОбороты
		                |			ПО (КонтрагентыИГруппыЗатрат.КонтрагентГЗ = ЗакупкиОбороты.Контрагент.Наименование + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование)
		                |		ПО Поставщики.Контрагент = КонтрагентыИГруппыЗатрат.Контрагент
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ЗакупкиОбороты.Период,
		                |	ВЫБОР
		                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		                |	КОНЕЦ,
		                |	""-=Факт=-"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование,
		                |	Поставщики.Контрагент,
		                |	Поставщики.КонтрагентНаименование,
		                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат,
		                |	""999"" + ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	Поставщики.Контрагент,
		                |	КонтрагентыИГруппыЗатрат.Период,
		                |	КонтрагентыИГруппыЗатрат.Количество,
		                |	КонтрагентыИГруппыЗатрат.Порядок,
		                |	КонтрагентыИГруппыЗатрат.Примечание + КонтрагентыИГруппыЗатрат.ГруппаЗатрат.Наименование,
		                |	КонтрагентыИГруппыЗатрат.Примечание,
		                |	КонтрагентыИГруппыЗатрат.ГруппаЗатрат,
		                |	Поставщики.КонтрагентНаименование
		                |ИЗ
		                |	Поставщики КАК Поставщики
		                |		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыИГруппыЗатрат КАК КонтрагентыИГруппыЗатрат
		                |		ПО Поставщики.Контрагент = КонтрагентыИГруппыЗатрат.Контрагент
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	КонтрагентНаименование,
		                |	Порядок
		                |ИТОГИ
		                |	СУММА(Количество)
		                |ПО
		                |	Контрагент,
		                |	Порядок";
		//ТекстПоставок = "ВЫБРАТЬ
		//                |	ИТС_ПланированиеЗакупаПродаж.Период,
		//                |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
		//                |	ИТС_ПланированиеЗакупаПродаж.ГруппаЗатрат,
		//                |	ИТС_ПланированиеЗакупаПродаж.Поставки,
		//                |	ИТС_ПланированиеЗакупаПродаж.Количество,
		//                |	ИТС_ПланированиеЗакупаПродаж.Примечание,
		//                |	ИТС_ПланированиеЗакупаПродаж.Порядок
		//                |ПОМЕСТИТЬ ГруппаЗатратПлан
		//                |ИЗ
		//                |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
		//                |ГДЕ
		//                |	ИТС_ПланированиеЗакупаПродаж.Поставки = ИСТИНА
		//                |	И ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаПлан
		//                |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
		//                |;
		//                |
		//                |////////////////////////////////////////////////////////////////////////////////
		//                |ВЫБРАТЬ
		//                |	ЗакупкиОбороты.Контрагент КАК Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
		//                |	ЗакупкиОбороты.Период КАК Период,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ КАК Количество,
		//                |	""-=Факт=-"" КАК Примечание,
		//                |	ЗакупкиОбороты.Контрагент.Наименование КАК КонтрагентНаименование,
		//                |	0 КАК Порядок
		//                |ИЗ
		//                |	ГруппаЗатратПлан КАК ГруппаЗатратПлан
		//                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(
		//                |				&ДатаНачалаФакт,
		//                |				&ДатаОкончанияФакт,
		//                |				День,
		//                |				Контрагент.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		//                |					И Контрагент.Поставщик = ИСТИНА) КАК ЗакупкиОбороты
		//                |		ПО ГруппаЗатратПлан.ГруппаЗатрат = ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат
		//                |
		//                |СГРУППИРОВАТЬ ПО
		//                |	ЗакупкиОбороты.Период,
		//                |	ЗакупкиОбороты.Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат,
		//                |	ЗакупкиОбороты.Контрагент.Наименование,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ
		//                |
		//                |ОБЪЕДИНИТЬ ВСЕ
		//                |
		//                |ВЫБРАТЬ
		//                |	ГруппаЗатратПлан.Контрагент,
		//                |	ГруппаЗатратПлан.ГруппаЗатрат,
		//                |	ГруппаЗатратПлан.Период,
		//                |	ГруппаЗатратПлан.Количество,
		//                |	ГруппаЗатратПлан.Примечание,
		//                |	ГруппаЗатратПлан.Контрагент.Наименование,
		//                |	ГруппаЗатратПлан.Порядок
		//                |ИЗ
		//                |	ГруппаЗатратПлан КАК НоменклатураПлан,
		//                |	ГруппаЗатратПлан КАК ГруппаЗатратПлан
		//                |
		//                |УПОРЯДОЧИТЬ ПО
		//                |	КонтрагентНаименование,
		//                |	Порядок
		//                |ИТОГИ
		//                |	СУММА(Количество)
		//                |ПО
		//                |	Контрагент,
		//                |	ГруппаЗатрат";
		//ТекстПоставок = "ВЫБРАТЬ
		//                |	ИТС_ПланированиеЗакупаПродаж.Период,
		//                |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
		//                |	ИТС_ПланированиеЗакупаПродаж.Номенклатура,
		//                |	ИТС_ПланированиеЗакупаПродаж.Поставки,
		//                |	ИТС_ПланированиеЗакупаПродаж.Количество,
		//                |	ИТС_ПланированиеЗакупаПродаж.Примечание
		//                |ПОМЕСТИТЬ НоменклатураПлан
		//                |ИЗ
		//                |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
		//                |ГДЕ
		//                |	ИТС_ПланированиеЗакупаПродаж.Поставки = ИСТИНА
		//                |	И ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаФакт
		//                |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
		//                |;
		//                |
		//                |////////////////////////////////////////////////////////////////////////////////
		//                |ВЫБРАТЬ
		//                |	ЗакупкиОбороты.Период КАК Период,
		//                |	ЗакупкиОбороты.Контрагент КАК Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура КАК Номенклатура,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ КАК Количество,
		//                |	""-=Факт=-"" КАК Примечание,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
		//                |	ЗакупкиОбороты.Номенклатура.Наименование КАК НоменклатураНаименование,
		//                |	ЗакупкиОбороты.Контрагент.Наименование КАК КонтрагентНаименование,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование КАК НоменклатураНоменклатурнаяГруппаЗатратНаименование
		//                |ИЗ
		//                |	НоменклатураПлан КАК НоменклатураПлан
		//                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки.Обороты(
		//                |				&ДатаНачалаФакт,
		//                |				&ДатаОкончанияФакт,
		//                |				День,
		//                |				Контрагент.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
		//                |					И Контрагент.Поставщик = ИСТИНА) КАК ЗакупкиОбороты
		//                |		ПО НоменклатураПлан.Номенклатура = ЗакупкиОбороты.Номенклатура
		//                |
		//                |СГРУППИРОВАТЬ ПО
		//                |	ЗакупкиОбороты.Период,
		//                |	ЗакупкиОбороты.Контрагент,
		//                |	ЗакупкиОбороты.Номенклатура,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат,
		//                |	ЗакупкиОбороты.Номенклатура.Наименование,
		//                |	ЗакупкиОбороты.Контрагент.Наименование,
		//                |	ЗакупкиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование,
		//                |	ВЫБОР
		//                |		КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
		//                |			ТОГДА ЗакупкиОбороты.КоличествоОборот
		//                |		ИНАЧЕ ЗакупкиОбороты.КоличествоОборот * ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
		//                |	КОНЕЦ
		//                |
		//                |ОБЪЕДИНИТЬ ВСЕ
		//                |
		//                |ВЫБРАТЬ
		//                |	НоменклатураПлан.Период,
		//                |	НоменклатураПлан.Контрагент,
		//                |	НоменклатураПлан.Номенклатура,
		//                |	НоменклатураПлан.Количество,
		//                |	НоменклатураПлан.Примечание,
		//                |	НоменклатураПлан.Номенклатура.НоменклатурнаяГруппаЗатрат,
		//                |	НоменклатураПлан.Номенклатура.Наименование,
		//                |	НоменклатураПлан.Контрагент.Наименование,
		//                |	НоменклатураПлан.Номенклатура.НоменклатурнаяГруппаЗатрат.Наименование
		//                |ИЗ
		//                |	НоменклатураПлан КАК НоменклатураПлан
		//                |
		//                |УПОРЯДОЧИТЬ ПО
		//                |	КонтрагентНаименование,
		//                |	НоменклатураНоменклатурнаяГруппаЗатратНаименование,
		//                |	НоменклатураНаименование
		//                |ИТОГИ
		//                |	СУММА(Количество)
		//                |ПО
		//                |	Контрагент,
		//                |	Номенклатура";
	КонецЕсли;
	ТекстПродаж = "ВЫБРАТЬ
	              |	Контрагенты.Ссылка,
	              |	Контрагенты.Наименование
	              |ПОМЕСТИТЬ Покупатели
	              |ИЗ
	              |	Справочник.Контрагенты КАК Контрагенты
	              |ГДЕ
	              |	Контрагенты.Покупатель = ИСТИНА
	              |	И Контрагенты.ИТС_УчаствуетВПланированииКакПокупатель = ИСТИНА
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПродажиОбороты.Период КАК Период,
	              |	ПродажиОбороты.Контрагент КАК Контрагент,
	              |	""-=Факт=-"" КАК Примечание,
	              |	ПродажиОбороты.Контрагент.Наименование КАК КонтрагентНаименование,
	              |	ВЫБОР
	              |		КОГДА ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
	              |			ТОГДА ПродажиОбороты.КоличествоОборот
	              |		ИНАЧЕ ПродажиОбороты.КоличествоОборот * ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
	              |	КОНЕЦ КАК Количество,
	              |	ПродажиОбороты.Номенклатура.НоменклатурнаяГруппаЗатрат
	              |ПОМЕСТИТЬ ПокупкаФакт
	              |ИЗ
	              |	РегистрНакопления.Продажи.Обороты(&ДатаНачалаФакт, &ДатаОкончанияФакт, День, Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат) КАК ПродажиОбороты
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ИТС_ПланированиеЗакупаПродаж.Период,
	              |	ИТС_ПланированиеЗакупаПродаж.ГруппаЗатрат,
	              |	ИТС_ПланированиеЗакупаПродаж.Количество,
	              |	ИТС_ПланированиеЗакупаПродаж.Примечание,
	              |	ИТС_ПланированиеЗакупаПродаж.Контрагент,
	              |	ИТС_ПланированиеЗакупаПродаж.Порядок
	              |ПОМЕСТИТЬ ПокупкиПлан
	              |ИЗ
	              |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
	              |ГДЕ
	              |	ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаПлан
	              |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
	              |	И ИТС_ПланированиеЗакупаПродаж.Поставки = ЛОЖЬ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Покупатели.Ссылка КАК Контрагент,
	              |	ПокупкаФакт.НоменклатураНоменклатурнаяГруппаЗатрат КАК ГруппаЗатрат,
	              |	ПокупкаФакт.Период,
	              |	ПокупкаФакт.Количество КАК Количество,
	              |	""-=Факт=-"" КАК Примечание,
	              |	ПокупкаФакт.Контрагент.Наименование КАК КонтрагентИмя,
	              |	0 КАК Порядок
	              |ИЗ
	              |	Покупатели КАК Покупатели
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ПокупкаФакт КАК ПокупкаФакт
	              |		ПО Покупатели.Ссылка = ПокупкаФакт.Контрагент
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	Покупатели.Ссылка,
	              |	ПокупкиПлан.ГруппаЗатрат,
	              |	ПокупкиПлан.Период,
	              |	ПокупкиПлан.Количество,
	              |	ПокупкиПлан.Примечание,
	              |	Покупатели.Наименование,
	              |	ПокупкиПлан.Порядок
	              |ИЗ
	              |	Покупатели КАК Покупатели
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ПокупкиПлан КАК ПокупкиПлан
	              |		ПО Покупатели.Ссылка = ПокупкиПлан.Контрагент
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Покупатели.Ссылка,
	              |	ПокупкиПлан.Период,
	              |	ПокупкиПлан.Количество,
	              |	ПокупкиПлан.Примечание,
	              |	Покупатели.Наименование,
	              |	ПокупкиПлан.ГруппаЗатрат,
	              |	ПокупкиПлан.Порядок
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	КонтрагентИмя
	              |ИТОГИ
	              |	СУММА(Количество)
	              |ПО
	              |	Контрагент";
	//ТекстПродаж = "ВЫБРАТЬ
	//              |	Контрагенты.Ссылка,
	//              |	Контрагенты.Наименование
	//              |ПОМЕСТИТЬ Покупатели
	//              |ИЗ
	//              |	Справочник.Контрагенты КАК Контрагенты
	//              |ГДЕ
	//              |	Контрагенты.Покупатель = ИСТИНА
	//              |	И Контрагенты.ИТС_УчаствуетВПланированииКакПоставщик = ИСТИНА
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	ПродажиОбороты.Период КАК Период,
	//              |	ПродажиОбороты.Контрагент КАК Контрагент,
	//              |	ПродажиОбороты.Номенклатура КАК Номенклатура,
	//              |	""-=Факт=-"" КАК Примечание,
	//              |	ПродажиОбороты.Контрагент.Наименование КАК КонтрагентНаименование,
	//              |	ВЫБОР
	//              |		КОГДА ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес = 0
	//              |			ТОГДА ПродажиОбороты.КоличествоОборот
	//              |		ИНАЧЕ ПродажиОбороты.КоличествоОборот * ПродажиОбороты.Номенклатура.ЕдиницаХраненияОстатков.Вес
	//              |	КОНЕЦ КАК Количество
	//              |ПОМЕСТИТЬ ПокупкаФакт
	//              |ИЗ
	//              |	РегистрНакопления.Продажи.Обороты(&ДатаНачалаФакт, &ДатаОкончанияФакт, День, Номенклатура.НоменклатурнаяГруппаЗатрат = &НоменклатурнаяГруппаЗатрат) КАК ПродажиОбороты
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	ИТС_ПланированиеЗакупаПродаж.Период,
	//              |	ИТС_ПланированиеЗакупаПродаж.Номенклатура,
	//              |	ИТС_ПланированиеЗакупаПродаж.Количество,
	//              |	ИТС_ПланированиеЗакупаПродаж.Примечание,
	//              |	ИТС_ПланированиеЗакупаПродаж.Контрагент
	//              |ПОМЕСТИТЬ ПокупкиПлан
	//              |ИЗ
	//              |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
	//              |ГДЕ
	//              |	ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНачалаПлан
	//              |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаОкончанияПлан
	//              |	И ИТС_ПланированиеЗакупаПродаж.Поставки = ЛОЖЬ
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	Покупатели.Ссылка КАК Контрагент,
	//              |	ПокупкаФакт.Период,
	//              |	ПокупкаФакт.Количество КАК Количество,
	//              |	""-=Факт=-"" КАК Примечание,
	//              |	Покупатели.Наименование КАК КонтрагентИмя
	//              |ИЗ
	//              |	Покупатели КАК Покупатели
	//              |		ЛЕВОЕ СОЕДИНЕНИЕ ПокупкаФакт КАК ПокупкаФакт
	//              |		ПО Покупатели.Ссылка = ПокупкаФакт.Контрагент
	//              |
	//              |ОБЪЕДИНИТЬ ВСЕ
	//              |
	//              |ВЫБРАТЬ
	//              |	Покупатели.Ссылка,
	//              |	ПокупкиПлан.Период,
	//              |	ПокупкиПлан.Количество,
	//              |	ПокупкиПлан.Примечание,
	//              |	Покупатели.Наименование
	//              |ИЗ
	//              |	Покупатели КАК Покупатели
	//              |		ЛЕВОЕ СОЕДИНЕНИЕ ПокупкиПлан КАК ПокупкиПлан
	//              |		ПО Покупатели.Ссылка = ПокупкиПлан.Контрагент
	//              |
	//              |СГРУППИРОВАТЬ ПО
	//              |	Покупатели.Ссылка,
	//              |	ПокупкиПлан.Период,
	//              |	ПокупкиПлан.Количество,
	//              |	ПокупкиПлан.Примечание,
	//              |	Покупатели.Наименование
	//              |
	//              |УПОРЯДОЧИТЬ ПО
	//              |	КонтрагентИмя
	//              |ИТОГИ
	//              |	СУММА(Количество)
	//              |ПО
	//              |	Контрагент";
				  
	СформироватьТаблицуПоставок(Макет, ТабДок, ТекстПоставок);
	СформироватьСтрокуИтогов(Макет, ТабДок);
	СформироватьТаблицуПродаж(Макет, ТабДок, ТекстПродаж);
КонецПроцедуры

Процедура ОбсчетИтоговойСтроки()
	ТабДок = ЭлементыФормы.ТабДок;
	//ОстаткиФакт = 0;
	
	ДеньНачало = ТабДок.Область("СтрокаИтоговПоставокНачало").Право + 1;
	ДеньКонец = ТабДок.Область("СтрокаИтоговПоставокКонец").Лево - 1;
	Поставки = ТабДок.Область("СтрокаИтоговПоставокНачало").Верх;
	Продажи = ТабДок.Область("СтрокаИтоговПродажНачало").Верх;
	Итог = ТабДок.Область("КонтрольнаяСтрокаНачало").Верх + 1;
	
	// Считаем остатки на начало периода
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаНачала, Номенклатура.НоменклатурнаяГруппаЗатрат = &ГруппаЗатрат) КАК ТоварыНаСкладахОстатки";
		
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНач);
	Запрос.УстановитьПараметр("ГруппаЗатрат", НоменклатурнаяГруппа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Остаток = Выборка.КоличествоОстаток;
	
	Для Кол = ДеньНачало По ДеньКонец Цикл
		СуммаПоставок = 0;
		СуммаПродаж = 0;
		Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Поставки) + "C" + Строка(Кол)).Значение) Тогда
			СуммаПоставок = ТабДок.Область("R" + Строка(Поставки) + "C" + Строка(Кол)).Значение;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Продажи) + "C" + Строка(Кол)).Значение) Тогда
			СуммаПродаж = ТабДок.Область("R" + Строка(Продажи) + "C" + Строка(Кол)).Значение;
		КонецЕсли;
		
		Область = ТабДок.Область("R" + Строка(Итог) + "C" + Строка(Кол));
		Область.Значение = Остаток + СуммаПоставок - СуммаПродаж;
		Остаток = Область.Значение;
		Если Остаток < 0 Тогда
			Область.ЦветФона = ЦветаСтиля.ТекстПредупреждающейНадписи;
		Иначе
			Область.ЦветФона = ЦветаСтиля.ФонУправляющегоПоля;
		КонецЕсли;
		//Если СуммаПоставок = 0 И СуммаПродаж = 0 Тогда
		//	ТабДок.Область("R" + Строка(Итог) + "C" + Строка(Кол)).Текст = "";
		//Иначе
		//	ТабДок.Область("R" + Строка(Итог) + "C" + Строка(Кол)).Текст = Строка(СуммаПоставок - СуммаПродаж);
		//КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбсчетТаблицыПоставок()
	ТабДок = ЭлементыФормы.ТабДок;
	
	ШапкаВерх = ТабДок.Область("ШапкаТаблицыПоставокКонец").Верх;
	ШапкаПраво = ТабДок.Область("ШапкаТаблицыПоставокКонец").Лево;
	ПримечаниеЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право;
	ДанныеЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право + 1;
	ИтогВерх = ТабДок.Область("СтрокаИтоговПоставокДень").Верх;
	
	ТабДок.ФиксацияСверху = ШапкаВерх;
	ТабДок.ФиксацияСлева = ПримечаниеЛево;
	
	// выявляем строки не выбранной номенклатурной группы затрат
	Для Стр = ШапкаВерх + 1 По ИтогВерх - 1 Цикл
		Если ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ДанныеЛево)).Расшифровка.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя
			И ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ДанныеЛево)).Расшифровка.ИД <> НоменклатурнаяГруппа Тогда
			ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ПримечаниеЛево - 1) + ":R" + Строка(Стр) + "C" + Строка(ШапкаПраво)).ЦветФона = ЦветаСтиля.АльтернативныйЦветФонаПоля;
		КонецЕсли;
	КонецЦикла;
	
	// условие фактической таблицы
	ТаблицаФакт = Ложь;
	Если ТабДок.Область("R" + Строка(ШапкаВерх) + "C" + Строка(ШапкаПраво - 1)).Значение < КонецДня(ТекущаяДата()) + 1 Тогда
		ТаблицаФакт = Истина;
	КонецЕсли;
	
	// находим первый день
	Строка = ШапкаВерх;
	Колонка = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право + 1;
	
	// проходим по дням и считаем суммы по контрагентам и в итоге
	// проходим по дням
	Для Кол = Колонка По ШапкаПраво - 1 Цикл
		СуммаДень = 0;
		
		Для Стр = Строка + 1 По ИтогВерх - 1 Цикл
			// встречаем итог по контрагенту
			Если ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка.ТипЯчейки = РасшифровкаПоставкиКонтрагентДень Тогда
				// идём по контрагенту Стр:Кол
				Ст = Стр + 1;
				Сумма = 0;
				СуммаГруппа = 0;
				Пока ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Расшифровка.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратДень Цикл
					// защищаем "вчерашние" ячейки
					Если ТабДок.Область("R" + Строка(ШапкаВерх) + "C" + Строка(Кол)).Значение < КонецДня(ТекущаяДата()) + 1 Тогда
						ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Защита = Истина;
					КонецЕсли;
					
					// защищаем ячейку с примечанием, если таблица полностью фактическая
					Если ТаблицаФакт И Кол = Колонка Тогда
						ТабДок.Область("R" + Строка(Ст) + "C" + Строка(ПримечаниеЛево)).Защита = Истина;
					КонецЕсли;
					
					// считаем сумму по контрагенту
					Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Значение) Тогда
						Сумма = Сумма + ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Значение;
						// проверка на номенклатурную группу
						Если ТабДок.Область("R" + Строка(ст) + "C" + Строка(ПримечаниеЛево - 1)).Расшифровка.ИД = НоменклатурнаяГруппа Тогда
							СуммаГруппа = СуммаГруппа + ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Значение;
						КонецЕсли;
					КонецЕсли;
					Ст = Ст + 1;
				КонецЦикла;
				
				// считаем сумму за день
				Если СчитатьИтогПоНоменклатурнойГруппеВКонтрагенте Тогда
					ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение = СуммаГруппа;
				Иначе
					ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение = Сумма;
				КонецЕсли;
				СуммаДень = СуммаДень + СуммаГруппа;
				
				Стр = Ст - 1;
			КонецЕсли;
		КонецЦикла;
		// выводим сумму в Итог дня
		ТабДок.Область("R" + Строка(ИтогВерх) + "C" + Строка(Кол)).Значение = СуммаДень;
	КонецЦикла;
	
	// проходим по колонке "Всего" и считаем суммы по строкам
	Для Стр = Строка + 1 По ИтогВерх Цикл
		Сумма = 0;
		Кол = ШапкаПраво - 1;
		Пока Кол >= ДанныеЛево Цикл
			Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение) Тогда
				Сумма = Сумма + ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение;
			КонецЕсли;
			Кол = Кол - 1;
		КонецЦикла;
		ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ШапкаПраво)).Значение = Сумма;
		Если Стр <> ИтогВерх Тогда
			ТабДок.Область("R" + Строка(Стр)).АвтоВысотаСтроки = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбсчетТаблицыПродаж()
	ТабДок = ЭлементыФормы.ТабДок;
	
	ШапкаВерх = ТабДок.Область("ШапкаТаблицыПродажКонец").Верх;
	ШапкаПраво = ТабДок.Область("ШапкаТаблицыПродажКонец").Лево;
	ПримечаниеЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право;
	ДанныеЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право + 1;
	ИтогНиз = ТабДок.Область("СтрокаИтоговПродажДень").Низ;
	
	// условие фактической таблицы
	ТаблицаФакт = Ложь;
	Если ТабДок.Область("R" + Строка(ШапкаВерх) + "C" + Строка(ШапкаПраво - 1)).Значение < КонецДня(ТекущаяДата()) + 1 Тогда
		ТаблицаФакт = Истина;
	КонецЕсли;
	
	// находим первый день
	Строка = ШапкаВерх;
	Колонка = ТабДок.Область("ШапкаТаблицыПродажНачало").Право + 1;
	
	// проходим по дням и считаем суммы по контрагентам и в итоге
	// проходим по дням
	Для Кол = Колонка По ШапкаПраво - 1 Цикл
		СуммаДень = 0;
		Стр = Строка - 1;
		Пока Стр > ИтогНиз Цикл
			// защищаем "вчерашние" ячейки
			Если ТабДок.Область("R" + Строка(ШапкаВерх) + "C" + Строка(Кол)).Значение < КонецДня(ТекущаяДата()) + 1 Тогда
				ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Защита = Истина;
			КонецЕсли;
			
			// защищаем ячейку с примечанием, если таблица полностью фактическая
			Если ТаблицаФакт И Кол = Колонка Тогда
				ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ПримечаниеЛево)).Защита = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение) Тогда
				СуммаДень = СуммаДень + ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение;
			КонецЕсли;
			Стр = Стр - 1;
		КонецЦикла;
		// выводим сумму в Итог дня
		ТабДок.Область("R" + Строка(ИтогНиз) + "C" + Строка(Кол)).Значение = СуммаДень;
	КонецЦикла;
	
	// проходим по колонке "Всего" и считаем суммы по строкам
	Стр = Строка - 1;
	Пока Стр >= ИтогНиз Цикл
		Сумма = 0;
		Кол = ШапкаПраво - 1;
		Пока Кол >= ДанныеЛево Цикл
			Если ЗначениеЗаполнено(ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение) Тогда
				Сумма = Сумма + ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение;
			КонецЕсли;
			Кол = Кол - 1;
		КонецЦикла;
		ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ШапкаПраво)).Значение = Сумма;
		Если Стр > ИтогНиз И Стр < Строка - 1 Тогда
			ТабДок.Область("R" + Строка(Стр)).АвтоВысотаСтроки = Истина;
		КонецЕсли;
		Стр = Стр - 1;
	КонецЦикла;
КонецПроцедуры

Процедура ПериодПриИзменении(Элемент)
	Дальше = ПроверкаЗаполненияПараметров();
	Если Дальше Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	Дальше = ПроверкаЗаполненияПараметров();
	Если Дальше Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписьВРегистр(ДанныеДляЗаписи, Поставщик, Количество = Истина, Перезаписать = Истина)
	НаборЗаписей = РегистрыСведений.ИТС_ПланированиеЗакупаПродаж.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДанныеДляЗаписи.День);
	НаборЗаписей.Отбор.Контрагент.Установить(ДанныеДляЗаписи.Контрагент);
	НаборЗаписей.Отбор.ГруппаЗатрат.Установить(ДанныеДляЗаписи.ГруппаЗатрат);
	Если Количество Тогда
		НаборЗаписей.Отбор.Примечание.Установить(ДанныеДляЗаписи.НПримечание);
	КонецЕсли;
	НаборЗаписей.Отбор.Поставки.Установить(Поставщик);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Для Каждого Запись Из НаборЗаписей Цикл
			Если Перезаписать И Запись.Примечание = ДанныеДляЗаписи.СПримечание Тогда
				Запись.Количество = ДанныеДляЗаписи.Количество;
				Запись.Примечание = ДанныеДляЗаписи.НПримечание;
				Запись.Порядок = ДанныеДляЗаписи.Порядок;
			КонецЕсли;
		КонецЦикла;
	Иначе
		// новая запись
		Запись = НаборЗаписей.Добавить();
		Запись.Период = ДанныеДляЗаписи.День;
		Запись.Контрагент = ДанныеДляЗаписи.Контрагент;
		Запись.ГруппаЗатрат = ДанныеДляЗаписи.ГруппаЗатрат;
		Запись.Примечание = ДанныеДляЗаписи.НПримечание;
		Запись.Поставки = Поставщик;
		Запись.Количество = ДанныеДляЗаписи.Количество;
		Запись.Порядок = ДанныеДляЗаписи.Порядок;
	КонецЕсли;
	
	Попытка
        НаборЗаписей.Записать(Истина);
    Исключение
        Предупреждение("Введенные данные не могут быть сохранены! Возможно запись с таким Контрагентом->Группой->Примечанием уже есть в плане.");
        СформироватьОтчет()
    КонецПопытки;
КонецПроцедуры

Функция ЗапросДнейВПлане(Контрагент, ГруппаЗатрат, Примечание)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИТС_ПланированиеЗакупаПродаж.Период,
	                      |	ИТС_ПланированиеЗакупаПродаж.Количество
	                      |ИЗ
	                      |	РегистрСведений.ИТС_ПланированиеЗакупаПродаж КАК ИТС_ПланированиеЗакупаПродаж
	                      |ГДЕ
	                      |	ИТС_ПланированиеЗакупаПродаж.Контрагент = &Контрагент
	                      |	И ИТС_ПланированиеЗакупаПродаж.ГруппаЗатрат = &ГруппаЗатрат
	                      |	И ИТС_ПланированиеЗакупаПродаж.Примечание = &Примечание
	                      |	И ИТС_ПланированиеЗакупаПродаж.Поставки = ИСТИНА
	                      |	И ИТС_ПланированиеЗакупаПродаж.Период >= &ДатаНач
	                      |	И ИТС_ПланированиеЗакупаПродаж.Период <= &ДатаКон");
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ГруппаЗатрат", ГруппаЗатрат);
	Запрос.УстановитьПараметр("Примечание", Примечание);
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Процедура ТабДокПриИзмененииСодержимогоОбласти(Элемент, Область)
	ПоставкаШапкаВерх = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокКонец").Верх;
	ПоставкаШапкаПраво = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокКонец").Лево - 1;
	ПоставкаЛево = ЭлементыФормы.ТабДок.Область("СтрокиТаблицыПоставок1Начало").Лево;
	ПоставкаПраво = ЭлементыФормы.ТабДок.Область("СтрокиТаблицыПоставок1Начало").Право;
	ПродажаШапкаВерх = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПродажКонец").Верх;
	ПродажаШапкаПраво = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПродажКонец").Лево - 1;
	ПродажаЛево = ЭлементыФормы.ТабДок.Область("СтрокиТаблицыПродажНачало").Лево;
	ПродажаПраво = ЭлементыФормы.ТабДок.Область("СтрокиТаблицыПродажНачало").Право;
		
	// изменения в таблице поставок
	// Количество поставок
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратДень Тогда
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("День", Дата(ЭлементыФормы.ТабДок.Область("R" + Строка(ПоставкаШапкаВерх) + "C" + Строка(Область.Лево)).Значение));
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаЛево)).Расшифровка.ИД);
		ДанныеДляЗаписи.Вставить("Порядок", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаЛево)).Расшифровка.Порядок);
		Стр = Область.Верх;
		Пока ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Область.Лево)).Расшифровка.ТипЯчейки <> РасшифровкаПоставкиКонтрагентДень Цикл
			Стр = Стр - 1;
		КонецЦикла;
		ДанныеДляЗаписи.Вставить("Контрагент", ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ПоставкаЛево)).Расшифровка.ИД);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаПраво)).Значение);
		ДанныеДляЗаписи.Вставить("СПримечание", ДанныеДляЗаписи.НПримечание);
		ДанныеДляЗаписи.Вставить("Количество", Область.Значение);
		
		ЗаписьВРегистр(ДанныеДляЗаписи, Истина);
		ОбсчетТаблицыПоставок();
		ОбсчетИтоговойСтроки();
	КонецЕсли;
	
	//Примечание поставок
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаПоставкиПримечание Тогда
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаЛево)).Расшифровка.ИД);
		ДанныеДляЗаписи.Вставить("Порядок", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаЛево)).Расшифровка.Порядок);
		ДанныеДляЗаписи.Вставить("СПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаПраво)).Расшифровка.Примечание);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаПраво)).Значение);
		Стр = Область.Верх;
		Пока ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Область.Лево + 1)).Расшифровка.ТипЯчейки <> РасшифровкаПоставкиКонтрагентДень Цикл
			Стр = Стр - 1;
		КонецЦикла;
		ДанныеДляЗаписи.Вставить("Контрагент", ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ПоставкаЛево)).Расшифровка.ИД);
		
		// записываем примечание в каждый день плана
		Выборка = ЗапросДнейВПлане(ДанныеДляЗаписи.Контрагент, ДанныеДляЗаписи.ГруппаЗатрат, ДанныеДляЗаписи.СПримечание);
		Если Выборка.Количество() > 0 Тогда
			Пока Выборка.Следующий() Цикл
				ДанныеДляЗаписи.Вставить("День", Выборка.Период);
				ДанныеДляЗаписи.Вставить("Количество", Выборка.Количество);
				ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
			КонецЦикла;
		Иначе
			// если в строке нет записей записываем Примечание в первый день
			ДанныеДляЗаписи.Вставить("День", ДатаНач);
			ДанныеДляЗаписи.Вставить("Количество", 0);
			ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
		КонецЕсли;
		
		ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаПраво)).Расшифровка.Примечание = ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПоставкаПраво)).Значение;
	КонецЕсли;
	
	// изменения в таблице продаж Строки с контрагентами
	// количество продаж
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаПродажиКонтрагентДень Тогда
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("День", ЭлементыФормы.ТабДок.Область("R" + Строка(ПродажаШапкаВерх) + "C" + Строка(Область.Лево)).Значение);
		ДанныеДляЗаписи.Вставить("Контрагент", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаЛево)).Расшифровка.ИД);
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		ДанныеДляЗаписи.Вставить("Порядок", 0);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение);
		ДанныеДляЗаписи.Вставить("СПримечание", ДанныеДляЗаписи.НПримечание);
		ДанныеДляЗаписи.Вставить("Количество", Область.Значение);
		
		ЗаписьВРегистр(ДанныеДляЗаписи, Ложь);
		ОбсчетТаблицыПродаж();
		ОбсчетИтоговойСтроки();
	КонецЕсли;
	
	// примечание продаж
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаПродажиПримечание Тогда
		// находим первую заполненную запись
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("Контрагент", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаЛево)).Расшифровка.ИД);
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		ДанныеДляЗаписи.Вставить("Порядок", 0);
		ДанныеДляЗаписи.Вставить("СПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Расшифровка.Примечание);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение);
		
		// записываем примечание в каждый день плана
		Выборка = ЗапросДнейВПлане(ДанныеДляЗаписи.Контрагент, ДанныеДляЗаписи.ГруппаЗатрат, ДанныеДляЗаписи.СПримечание);
		Если Выборка.Количество() > 0 Тогда
			Пока Выборка.Следующий() Цикл
				ДанныеДляЗаписи.Вставить("День", Выборка.Период);
				ДанныеДляЗаписи.Вставить("Количество", Выборка.Количество);
				ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
			КонецЦикла;
		Иначе
			// если в строке нет записей записываем Примечание в первый день
			ДанныеДляЗаписи.Вставить("День", ДатаНач);
			ДанныеДляЗаписи.Вставить("Количество", 0);
			ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
		КонецЕсли;
		
		ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Расшифровка.Примечание = ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение;
	КонецЕсли;
	
	// изменения в таблице продаж Строка "Группа контрагентов"
	// Количество продаж
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаГруппаКонтрагентовДень Тогда
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("День", ЭлементыФормы.ТабДок.Область("R" + Строка(ПродажаШапкаВерх) + "C" + Строка(Область.Лево)).Значение);
		ДанныеДляЗаписи.Вставить("Контрагент", "-=Группа=-");
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		ДанныеДляЗаписи.Вставить("Порядок", 0);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение);
		ДанныеДляЗаписи.Вставить("СПримечание", ДанныеДляЗаписи.НПримечание);
		ДанныеДляЗаписи.Вставить("Количество", Область.Значение);
		
		ЗаписьВРегистр(ДанныеДляЗаписи, Ложь);
		ОбсчетТаблицыПродаж();
		ОбсчетИтоговойСтроки();
	КонецЕсли;
	
	//Примечание продаж
	Если Область.Расшифровка.ТипЯчейки = РасшифровкаГруппаКонтрагентовПримечание Тогда
		// находим первую заполненную запись
		ДанныеДляЗаписи = новый Структура;
		ДанныеДляЗаписи.Вставить("Контрагент", "-=Группа=-");
		ДанныеДляЗаписи.Вставить("ГруппаЗатрат", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
		ДанныеДляЗаписи.Вставить("Порядок", 0);
		ДанныеДляЗаписи.Вставить("СПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Расшифровка.Примечание);
		ДанныеДляЗаписи.Вставить("НПримечание", ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение);
		
		// записываем примечание в каждый день плана
		Выборка = ЗапросДнейВПлане(ДанныеДляЗаписи.Контрагент, ДанныеДляЗаписи.ГруппаЗатрат, ДанныеДляЗаписи.СПримечание);
		Если Выборка.Количество() > 0 Тогда
			Пока Выборка.Следующий() Цикл
				ДанныеДляЗаписи.Вставить("День", Выборка.Период);
				ДанныеДляЗаписи.Вставить("Количество", Выборка.Количество);
				ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
			КонецЦикла;
		Иначе
			// если в строке нет записей записываем Примечание в первый день
			ДанныеДляЗаписи.Вставить("День", ДатаНач);
			ДанныеДляЗаписи.Вставить("Количество", 0);
			ЗаписьВРегистр(ДанныеДляЗаписи, Истина, Ложь);
		КонецЕсли;
		
		ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Расшифровка.Примечание = ЭлементыФормы.ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ПродажаПраво)).Значение;
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьВыгрузкуПоКонтрагенту(Строка)
	Макет = ПолучитьМакет("МакетОтчетаПоставки");
	Док = новый ТабличныйДокумент;
	ТабДок = ЭлементыФормы.ТабДок;
	ДеньНачало = ТабДок.Область("ШапкаТаблицыПоставокНачало").Право + 1;
	ДеньОкончание = ТабДок.Область("ШапкаТаблицыПоставокКонец").Лево - 1;
	ШапкаВерх = ТабДок.Область("ШапкаТаблицыПоставокНачало").Верх;
	СтрИтоги = ТабДок.Область("СтрокаИтоговПоставокНачало").Верх;
	ОбластьКонтрагент = ТабДок.Область("R" + Строка(Строка) + "C" + Строка(ДеньНачало - 2));
	
	// формируем шапку
	Область = Макет.ПолучитьОбласть("ШапкаОтчета");
	Область.Параметры.НачалоПериода = ДатаНач;
	Область.Параметры.КонецПериода = ДатаКон;
	Док.Вывести(Область);
	
	// формируем шапку таблицы
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыНачало");
	Область.Параметры.Контрагент = ОбластьКонтрагент.Текст;
	Док.Вывести(Область);
	Для Кол = ДеньНачало По ДеньОкончание Цикл
		Область = Макет.ПолучитьОбласть("ШапкаТаблицыДень");
		День = Дата(ТабДок.Область("R" + Строка(ШапкаВерх) + "C" + Строка(Кол)).Значение);
		Область.Параметры.День = День;
		Область.Параметры.ДеньНедели = День;
		Док.Присоединить(Область);
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("ШапкаТаблицыКонец");
	Док.Присоединить(Область);
	
	Док.НачатьАвтогруппировкуСтрок();
	
	// формируем строки таблицы
	Стр = ОбластьКонтрагент.Верх + 1;
	
	Пока Стр < СтрИтоги Цикл
		Обл = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ДеньНачало - 2));
		Расш = Обл.Расшифровка;
		// если уже итоговая строка
		Если Не ЗначениеЗаполнено(Расш) Тогда
			Прервать;
		КонецЕсли;
		
		// если дошли до следующего контрагента
		Если Расш.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
			Прервать;
		КонецЕсли;
				
		Если Расш.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя Тогда
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы1Начало");
			Область.Параметры.Группа = Обл.Расшифровка.ИД;
			Область.Параметры.Примечание = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ДеньНачало - 1)).Значение;
			Док.Вывести(Область, 1);
			Для Кол = ДеньНачало По ДеньОкончание Цикл
				Область = Макет.ПолучитьОбласть("СтрокаТаблицы1День");
				Область.Параметры.День = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение;
				Область.Параметры.Расшифровка = "Группа";
				Док.Присоединить(Область, 1);
			КонецЦикла;
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы1Конец");
			Область.Параметры.Всего = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ДеньОкончание + 1)).Значение;
			Область.Параметры.Расшифровка = "Группа";
			Док.Присоединить(Область, 1);
		КонецЕсли;			
		
		Стр = Стр + 1;
	КонецЦикла;
	
	Док.ЗакончитьАвтогруппировкуСтрок();
	
	// формируем итоговую строку
	Область = Макет.ПолучитьОбласть("ИтогТаблицыНачало");
	Док.Вывести(Область);
	Для Кол = ДеньНачало По ДеньОкончание Цикл
		Область = Макет.ПолучитьОбласть("ИтогТаблицыДень");
		Область.Параметры.День = "";
		Док.Присоединить(Область);
	КонецЦикла;
	Область = Макет.ПолучитьОбласть("ИтогТаблицыКонец");
	Док.Присоединить(Область);
	
	// обсчитаем итоги таблицы
	Док = ОбсчетТаблицыПоставокПоКонтрагенту(Док);
	
	// записываем в файл
	ПутьКФайлу = ПолучитьПутьКФайлу();
	Если ПутьКФайлу <> "" Тогда
		Док.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
		Сообщить("Отчет по выбранному контрагенту сохранён в файл """ + ПутьКФайлу + """.");
	КонецЕсли;
КонецПроцедуры

Функция ОбсчетТаблицыПоставокПоКонтрагенту(Док)
	КолНачало = Док.Область("ШапкаТаблицыНачало").Право + 1;
	КолКонец = Док.Область("ШапкаТаблицыКонец").Лево;
	СтрНачало = Док.Область("ШапкаТаблицыНачало").Низ + 1;
	СтрКонец = Док.Область("ИтогТаблицыНачало").Верх - 1;
	
	// убираем пустые колонки
	Если УдалятьПустыеКолонкиОтчета Тогда
		Кол = КолНачало;
		Пока Кол < КолКонец Цикл
			НетЗначения = Истина;
			Для Стр = СтрНачало По СтрКонец + 1 Цикл
				Если ЗначениеЗаполнено(Док.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение) Тогда
					НетЗначения = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НетЗначения Тогда
				Док.УдалитьОбласть(Док.Область("C" + Строка(Кол)), ТипСмещенияТабличногоДокумента.ПоВертикали);
				КолКонец = КолКонец - 1;
				Кол = Кол - 1;
			КонецЕсли;
			Кол = Кол + 1;
		КонецЦикла;
	КонецЕсли;
	
	// обсчитываем итоги
	Для Кол = КолНачало По КолКонец Цикл
		СуммаДень = 0;
		Для Стр = СтрНачало По СтрКонец Цикл
			// встречаем итог по группе
			Если Док.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка = "Группа" Тогда
				СуммаДень = СуммаДень + Док.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение;
			КонецЕсли;
		КонецЦикла;
		// выводим сумму в Итог дня
		Док.Область("R" + Строка(СтрКонец + 1) + "C" + Строка(Кол)).Значение = СуммаДень;
	КонецЦикла;
	
	// убираем пустые строки
	Если УдалятьПустыеСтрокиОтчета Тогда
		Стр = СтрНачало;
		Пока Стр <= СтрКонец Цикл
			НетЗначения = Истина;
			Для Кол = КолНачало По КолКонец Цикл
				Если ЗначениеЗаполнено(Док.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Значение) Тогда
					НетЗначения = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НетЗначения Тогда
				Док.УдалитьОбласть(Док.Область("R" + Строка(Стр)), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				СтрКонец = СтрКонец - 1;
				Стр = Стр - 1;
			КонецЕсли;
			Стр = Стр + 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Док;
КонецФункции

Функция ПолучитьПутьКФайлу()
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	Текст = "ru = ""Таблица XLS""; en = ""XLS table""";
	Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите путь для сохранения";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Текст = "Путь сохранения не выбран!";
		Предупреждение(Текст);
		Возврат "";
	КонецЕсли;	
	
	Возврат ПутьКФайлу;
КонецФункции

Процедура КоманднаяПанель1Сформировать(Кнопка)
	СформироватьОтчет()
КонецПроцедуры

Процедура КоманднаяПанель1ОтчетПоКонтрагенту(Кнопка)
	ТабДок = ЭлементыФормы.ТабДок;
	КонтрагентЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	Область = ТабДок.ВыделенныеОбласти[0];
	ОбластьКонтрагент = ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(КонтрагентЛево));
	Расш = ОбластьКонтрагент.Расшифровка;
	Если ЗначениеЗаполнено(Расш) Тогда
		Если ОбластьКонтрагент.Расшифровка.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
			СформироватьВыгрузкуПоКонтрагенту(Область.Верх);
		ИначеЕсли ОбластьКонтрагент.Расшифровка.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя Тогда
			Стр = Область.Верх;
			Пока ТабДок.Область("R" + Строка(Стр) + "C" + Строка(КонтрагентЛево)).Расшифровка.ТипЯчейки <> РасшифровкаПоставкиКонтрагентИмя Цикл
				Стр = Стр - 1;
			КонецЦикла;
			СформироватьВыгрузкуПоКонтрагенту(Стр);
		Иначе
			Сообщить("В таблице поставок встаньте курсором на Контрагента или Номенклатуру, отчёт по которым необходимо выгрузить");
		КонецЕсли;
	Иначе
		Сообщить("В таблице поставок встаньте курсором на Контрагента или Номенклатуру, отчёт по которым необходимо выгрузить");
	КонецЕсли;
	//Сообщить("Контрагент - " + Контрагент);
КонецПроцедуры

Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Расшифровка.ТипЯчейки = РасшифровкаГруппаКонтрагентовДень ИЛИ Расшифровка.ТипЯчейки = РасшифровкаГруппаКонтрагентовВсего Тогда
		Область = Элемент.ВыделенныеОбласти.Получить(0);
		Если Не ЗначениеЗаполнено(Область.Значение) Тогда
			Возврат;
		КонецЕсли;
		Кол = Область.Лево;
		Стр = Область.Верх;
		ШапкаСтр = Элемент.Область("ШапкаТаблицыПродажДень").Верх;
		
		Отчет = Отчеты.Продажи.Создать();
		Отчет.УстановитьНачальныеНастройки();
		Форма = Отчет.ПолучитьФорму();
		Форма.Открыть();
		
		Если Расшифровка.ТипЯчейки = РасшифровкаГруппаКонтрагентовДень Тогда
			Отчет.УниверсальныйОтчет.ДатаНач = Элемент.Область("R" + Строка(ШапкаСтр) + "C" + Строка(Кол)).Значение;
			Отчет.УниверсальныйОтчет.ДатаКон = Отчет.УниверсальныйОтчет.ДатаНач;
		Иначе
			Отчет.УниверсальныйОтчет.ДатаНач = ДатаНач;
			Отчет.УниверсальныйОтчет.ДатаКон = ДатаКон;
		КонецЕсли;
		
		// отбор по "Контрагент.ИТС_УчаствуетВПланировании"
		СтрокаОтбора = Отчет.УниверсальныйОтчет.ПостроительОтчета.Отбор.Найти("Контрагент.ИТС_УчаствуетВПланированииКакПоставщик");
		Если СтрокаОтбора = Неопределено Тогда
			СтрокаОтбора  = Отчет.УниверсальныйОтчет.ПостроительОтчета.Отбор.Добавить("Контрагент.ИТС_УчаствуетВПланированииКакПоставщик");
		КонецЕсли;
		СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
		СтрокаОтбора.Значение =  Ложь;
		СтрокаОтбора.Использование = Истина;
		
		// отбор по "Номенклатура.НоменклатурнаяГруппаЗатрат"
		СтрокаОтбора = Отчет.УниверсальныйОтчет.ПостроительОтчета.Отбор.Найти("Номенклатура.НоменклатурнаяГруппаЗатрат");
		Если СтрокаОтбора = Неопределено Тогда
			СтрокаОтбора  = Отчет.УниверсальныйОтчет.ПостроительОтчета.Отбор.Добавить("Номенклатура.НоменклатурнаяГруппаЗатрат");
		КонецЕсли;
		СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
		СтрокаОтбора.Значение =  НоменклатурнаяГруппа;
		СтрокаОтбора.Использование = Истина;
		
		Отчет.СформироватьОтчет(Форма.ЭлементыФормы.ПолеТабличногоДокументаРезультат);
	КонецЕсли;
КонецПроцедуры

Процедура ДатаНачалаПриИзменении(Элемент)
	Если ДатаНач > ДатаКон Тогда
		ДатаКон = ДатаНач;
	КонецЕсли;
	
	// если период больше 90 дней, выдавать предупреждение
	Если ДатаКон - ДатаНач > 60 * 60 * 24 * 92 Тогда
		Ответ = Вопрос("Выбранный период более 3-х месяцев. Данные могут готовиться длительное время. Хотите продолжить?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПроверкаЗаполненияПараметров() Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура ДатаОкончанияПриИзменении(Элемент)
	Если ДатаНач > ДатаКон Тогда
		ДатаНач = ДатаКон;
	КонецЕсли;
	
	// если период больше 90 дней, выдавать предупреждение
	Если ДатаКон - ДатаНач > 60 * 60 * 24 * 92 Тогда
		Ответ = Вопрос("Выбранный период более 3-х месяцев. Данные могут готовиться длительное время. Хотите продолжить?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПроверкаЗаполненияПараметров() Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1Добавить(Кнопка)
	// если таблица полностью фактическая, выходим
	Если КонецДня(ТекущаяДата()) + 1 > ДатаКон Тогда
		Сообщить("В данном периоде нет плана.");
		Возврат;
	КонецЕсли;
	ТабДок = ЭлементыФормы.ТабДок;
	СтрШапка = ТабДок.Область("ШапкаТаблицыПоставокНачало").Низ;
	СтрИтоги = ТабДок.Область("СтрокаИтоговПоставокНачало").Верх;
	ГруппаЗатратЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	
	// определяем начальные данные формы
	Область = ТабДок.ВыделенныеОбласти.Получить(0);
	ОбластьГруппаЗатрат = ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ГруппаЗатратЛево));
	Расш = ОбластьГруппаЗатрат.Расшифровка;
	Если ЗначениеЗаполнено(Расш) Тогда
		Если Расш.ТипЯчейки <> РасшифровкаПоставкиГруппаЗатратИмя 
			И Расш.ТипЯчейки <> РасшифровкаПоставкиКонтрагентИмя Тогда
			Сообщить("Встаньте на строку с номенклатурой или контрагента в таблице поставок и попробуйте ещё раз.");
			Возврат;
		КонецЕсли;
		
		// ищем строку контрагента
		Контр = неопределено;
		Стр = Область.Верх;
		Пока Стр > СтрШапка Цикл
			РасшЛок = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ГруппаЗатратЛево)).Расшифровка;
			Если Не ЗначениеЗаполнено(РасшЛок) Тогда
				Прервать;
			КонецЕсли;
			Если РасшЛок.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
				Контр = РасшЛок.ИД;
				Прервать;
			КонецЕсли;
			Стр = Стр - 1;
		КонецЦикла;
		
		// такого быть не должно
		Если Контр = Неопределено Тогда
			Сообщить("Произошла непредвиденная ошибка.");
			Возврат;
		КонецЕсли;
		
		// ищем последнюю строку у контрагента
		Порядок = 0;
		Стр = Стр + 1;
		Пока Стр < СтрИтоги Цикл
			РасшЛок = ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ГруппаЗатратЛево)).Расшифровка;
			Если Не ЗначениеЗаполнено(РасшЛок) Тогда
				Прервать;
			КонецЕсли;
			Если РасшЛок.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя Тогда
				Порядок = РасшЛок.Порядок + 1;
			КонецЕсли;
			Если РасшЛок.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
				Прервать;
			КонецЕсли;
			Стр = Стр + 1;
		КонецЦикла;
		
		// создаём форму
		Форма = Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора();
		Результат = Форма.ОткрытьМодально();
		
		Если ЗначениеЗаполнено(Результат) Тогда
			ДанныеДляДобавления = Новый Структура;
			ДанныеДляДобавления.Вставить("День", ДатаНач);
			ДанныеДляДобавления.Вставить("Контрагент", Контр);
			ДанныеДляДобавления.Вставить("ГруппаЗатрат", Результат.Ссылка);
			ДанныеДляДобавления.Вставить("НПримечание", "");
			ДанныеДляДобавления.Вставить("Количество", 0);
			ДанныеДляДобавления.Вставить("Порядок", Порядок);
			ЗаписьВРегистр(ДанныеДляДобавления, Истина, Истина, Ложь);
			
			СформироватьОтчет();
		КонецЕсли;
	Иначе
		Сообщить("Встаньте на строку с номенклатурой или контрагента в таблице поставок и попробуйте ещё раз.");
	КонецЕсли;	
КонецПроцедуры

Процедура ВставитьПустуюСтроку(Стр)
	Макет = Обработки.ИТС_ПланФактПродажПокупок.ПолучитьМакет("МакетОбработки");
	ТабД = новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2Начало");
	Область.Параметры.ГруппаЗатрат = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	Область.Параметры.Примечание = "";
	СР = новый Структура;
	СР.Вставить("ТипЯчейки", РасшифровкаПоставкиГруппаЗатратИмя);
	СР.Вставить("ИД", Область.Параметры.ГруппаЗатрат);
	Область.Параметры.Расшифровка = СР;
	ТабД.Вывести(Область, 2);
			
	СР = новый Структура;
	СР.Вставить("ТипЯчейки", РасшифровкаПоставкиПримечание);
	СР.Вставить("Примечание", "");
	Область.Параметры.РасшифровкаПримечания = СР;
			
	// проход по датам в таблице
	ТекущаяДата = ДатаНач;
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2День");
	Пока ТекущаяДата <= ДатаКон Цикл
		Область.Параметры.День = "";
		СР = новый Структура;
		СР.Вставить("ТипЯчейки", РасшифровкаПоставкиГруппаЗатратДень);
		Область.Параметры.Расшифровка = СР;
		ТабД.Присоединить(Область);
		ТекущаяДата = ТекущаяДата + 86400;
	КонецЦикла;
							
	Область = Макет.ПолучитьОбласть("СтрокиТаблицыПоставок2Конец");
	Область.Параметры.Всего = "";
	ТабД.Присоединить(Область);
	
	ОбластьСтар = ЭлементыФормы.ТабДок.Область("R" + Строка(Стр));
	ОбластьНов = ТабД.Область("R1");
	
	// вставляем строку выше
	ЭлементыФормы.ТабДок.ВставитьОбласть(ОбластьНов, ОбластьСтар, ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	// заполняем вставленную строку
	//ЗаполнитьГруппуЗатрат(Контр, ГЗ, Стр);
	
	// выделяем вставленную строку
	ЭлементыФормы.ТабДок.ВыделенныеОбласти.Очистить();
	ЭлементыФормы.ТабДок.ВыделенныеОбласти.Добавить(ЭлементыФормы.ТабДок.Область("R" + Строка(Стр)));
	
	КолИмя = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	СтрКон = ЭлементыФормы.ТабДок.Область("СтрокаИтоговПоставокНачало").Верх - 1;
	
	// определяем строку начала группировки
	Ст = Стр;
	Пока ЭлементыФормы.ТабДок.Область("R" + Строка(Ст) + "C" + Строка(КолИмя)).Расшифровка.ТипЯчейки <> РасшифровкаПоставкиКонтрагентИмя Цикл
		Ст = Ст - 1;
	КонецЦикла;
	СтНач = Ст + 1;
	
	// определяем строку конца группировки
	Ст = Стр;
	Пока Ст < СтрКон Цикл
		Если ЭлементыФормы.ТабДок.Область("R" + Строка(Ст) + "C" + Строка(КолИмя)).Расшифровка.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
			Ст = Ст - 1;
			Прервать;
		КонецЕсли;
		Ст = Ст + 1;
	КонецЦикла;
	СтКон = Ст;
	
	// Группируем строки
	ЭлементыФормы.ТабДок.Область("R" + Строка(СтНач) + ":R" + Строка(СтКон)).Разгруппировать();
	ЭлементыФормы.ТабДок.Область("R" + Строка(СтНач) + ":R" + Строка(СтКон)).Сгруппировать();
	
	// Разблокируем ячейку группы затрат новой строки
	Область = ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(КолИмя));
	Область.Защита = Ложь;
	Область.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
	
	// переобсчитываем таблицы
	//ОбсчетТаблицыПоставок();
	//ОбсчетИтоговойСтроки();
КонецПроцедуры

Процедура КоманднаяПанель1Удалить(Кнопка)
	ТабДок = ЭлементыФормы.ТабДок;
	СтрШапка = ТабДок.Область("ШапкаТаблицыПоставокНачало").Низ;
	ГруппаЗатратЛево = ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	
	// определяем начальные данные формы
	Область = ТабДок.ВыделенныеОбласти.Получить(0);
	ОбластьГруппаЗатрат = ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ГруппаЗатратЛево));
	ОбластьПримечание = ТабДок.Область("R" + Строка(Область.Верх) + "C" + Строка(ГруппаЗатратЛево + 1));
	Расш = ОбластьГруппаЗатрат.Расшифровка;
	Если ЗначениеЗаполнено(Расш) Тогда
		Если Расш.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя Тогда
			// показываем диалоговое окно с подтверждением удаления
			Ответ = Вопрос("Вы действительно хотите удалить """ + ОбластьГруппаЗатрат.Текст + """ с примечанием """ + ОбластьПримечание.Текст + """?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			Иначе
				Стр = Область.Верх - 1;
				СтрКонтр = Стр;
				Пока Истина Цикл
					Если ТабДок.Область("R" + Строка(Стр) + "C" + Строка(ГруппаЗатратЛево)).Расшифровка.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
						СтрКонтр = Стр;
						Прервать;
					КонецЕсли;
					Стр = Стр - 1;
				КонецЦикла;
						
				// удаляем записи из реестра
				ОбластьКонтрагент = ТабДок.Область("R" + Строка(СтрКонтр) + "C" + Строка(ГруппаЗатратЛево));
						
				НаборЗаписей = РегистрыСведений.ИТС_ПланированиеЗакупаПродаж.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Контрагент.Установить(ОбластьКонтрагент.Расшифровка.ИД);
				НаборЗаписей.Отбор.ГруппаЗатрат.Установить(ОбластьГруппаЗатрат.Расшифровка.ИД);
				НаборЗаписей.Отбор.Примечание.Установить(ОбластьПримечание.Расшифровка.Примечание);
						
				ТекущаяДата = ДатаНач;
				Пока ТекущаяДата <= ДатаКон Цикл
					НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
					НаборЗаписей.Прочитать();
							
					Если НаборЗаписей.Количество() > 0 Тогда
						Запись = НаборЗаписей[0];
						НаборЗаписей.Удалить(Запись);
					КонецЕсли;
							
					НаборЗаписей.Записать(Истина);
							
					ТекущаяДата = ТекущаяДата + 86400;
				КонецЦикла;
						
				// удаляем строку из таблицы
				ТабДок.УдалитьОбласть(ТабДок.Область("R" + Строка(Область.Верх)), ТипСмещенияТабличногоДокумента.ПоВертикали);
				ТабДок.ВыделенныеОбласти.Очистить();
						
				// переобсчитываем таблицы
				ОбсчетТаблицыПоставок();
				ОбсчетИтоговойСтроки();
			КонецЕсли;
		Иначе
			Сообщить("Встаньте на строку с номенклатурой в таблице поставок и попробуйте ещё раз.");
		КонецЕсли;
	Иначе
		Сообщить("Встаньте на строку с номенклатурой в таблице поставок и попробуйте ещё раз.");
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаНастрокиПериодаНажатие(Элемент)
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);

	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон  = НП.ПолучитьДатуОкончания();
		
		// если период больше 90 дней, выдавать предупреждение
		Если ДатаКон - ДатаНач > 60 * 60 * 24 * 92 Тогда
			Ответ = Вопрос("Выбранный период более 3-х месяцев. Данные могут готовиться длительное время. Хотите продолжить?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	ДатаНач = НачалоМесяца(ТекущаяДата());
	ДатаКон = КонецМесяца(ТекущаяДата());
	
	Дальше = ПроверкаЗаполненияПараметров();
	Если Дальше Тогда
		СформироватьОтчет();
		Если АвтоматическоеОбновлениеИнтервал <> 0 Тогда
			ПодключитьОбработчикОжидания("СформироватьОтчет", АвтоматическоеОбновлениеИнтервал);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить(Кнопка)
	// если таблица полностью фактическая, выходим
	Если КонецДня(ТекущаяДата()) + 1 > ДатаКон Тогда
		Сообщить("В данном периоде нет плана.");
		Возврат;
	КонецЕсли;
	СтрНач = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокКонец").Верх + 1;
	Кол = ЭлементыФормы.ТабДок.Область("ШапкаТаблицыПоставокНачало").Лево;
	СтрКон = ЭлементыФормы.ТабДок.Область("СтрокаИтоговПоставокДень").Верх - 1;
	ДанныеДляДобавления = Новый Структура;
	ДанныеДляДобавления.Вставить("День", ДатаНач);
	ДанныеДляДобавления.Вставить("ГруппаЗатрат", НоменклатурнаяГруппа);
	ДанныеДляДобавления.Вставить("НПримечание", "");
	ДанныеДляДобавления.Вставить("Количество", 0);
	
	// ищем контрагента
	Для Стр = СтрНач По СтрКон Цикл
		Расш = ЭлементыФормы.ТабДок.Область("R" + Строка(Стр) + "C" + Строка(Кол)).Расшифровка;
		Если Не ЗначениеЗаполнено(Расш) Тогда
			Продолжить;
		КонецЕсли;
		Если Расш.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
			ЕстьГруппа = Ложь;
			Порядок = 0;
			// ищем группу затрат
			Для Ст = Стр + 1 По СтрКон Цикл
				РасшЛок = ЭлементыФормы.ТабДок.Область("R" + Строка(Ст) + "C" + Строка(Кол)).Расшифровка;
				Если Не ЗначениеЗаполнено(РасшЛок) Тогда
					Продолжить;
				КонецЕсли;
				Если РасшЛок.ТипЯчейки = РасшифровкаПоставкиГруппаЗатратИмя Тогда
					Порядок = РасшЛок.Порядок + 1;
					Если РасшЛок.ИД = НоменклатурнаяГруппа Тогда
						ЕстьГруппа = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				Если РасшЛок.ТипЯчейки = РасшифровкаПоставкиКонтрагентИмя Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если Не ЕстьГруппа Тогда
				ДанныеДляДобавления.Вставить("Контрагент", Расш.ИД);
				ДанныеДляДобавления.Вставить("Порядок", Порядок);
				ЗаписьВРегистр(ДанныеДляДобавления, Истина, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	СформироватьОтчет();
КонецПроцедуры

РасшифровкаПоставкиКонтрагентИмя = "ПоставкиКонтрагентыИмя";
РасшифровкаПоставкиКонтрагентДень = "ПоставкиКонтрагентыДень";
РасшифровкаПоставкиГруппаЗатратИмя = "ПоставкиГруппаЗатратИмя";
РасшифровкаПоставкиПримечание = "ПоставкиПримечание";
РасшифровкаПоставкиГруппаЗатратДень = "ПоставкиГруппаЗатратДень";
РасшифровкаПоставкиИтогДень = "ПоставкиИтогДень";

РасшифровкаКонтрольнаяСтрокаДень = "КонтрольнаяСтрокаДень";

РасшифровкаПродажиКонтрагентИмя = "ПродажиКонтрагентыИмя";
РасшифровкаПродажиПримечание = "ПродажиПримечание";
РасшифровкаПродажиКонтрагентДень = "ПродажиКонтрагентыДень";
РасшифровкаГруппаКонтрагентовИмя = "ГруппаКонтрагентовИмя";
РасшифровкаГруппаКонтрагентовДень = "ГруппаКонтрагентовДень";
РасшифровкаГруппаКонтрагентовВсего = "ГруппаКонтрагентовВсего";
РасшифровкаГруппаКонтрагентовПримечание = "ГруппаКонтрагентовПримечание";
РасшифровкаПродажиИтогДень = "ПродажиИтогДень";

// при формировании отчёта по контрагенту удалять пустые колонки
УдалятьПустыеКолонкиОтчета = Истина;
// при формировании отчёта по контрагенту удалять пустые строки
УдалятьПустыеСтрокиОтчета = Истина;
// в таблице продаж в строках с итогами по контрагенту ссумировать количества ТОЛЬКО по номенклатуре из выбранной группы затрат
СчитатьИтогПоНоменклатурнойГруппеВКонтрагенте = Ложь;
// интервал автоматического обновления таблицы в секундах (0 - обновление отсутствует)
АвтоматическоеОбновлениеИнтервал = 60;
// проставлять номенклатуру на которой стоит курсор в форму добавления номенклатуры при открытии формы
ДобавлятьНоменклатуру = Истина;
// в таблице продаж показывать только номенклатуру из выбранной группы затрат
ПоказыватьТолькоВыбраннуюГруппуЗатрат = Ложь;