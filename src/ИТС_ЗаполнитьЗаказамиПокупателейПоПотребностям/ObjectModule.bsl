Процедура Инициализировать(Объект, ИмяТабличнойЧасти, ТабличноеПолеОбъекта) Экспорт
	Если Объект.Дата < НачалоДня(ТекущаяДата()) Тогда
		Ответ = Вопрос("Дата документа меньше сегодняшнего дня. Проследующее проведение этого документа может негативно отразиться на остатках. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Сделка) Тогда
		Предупреждение("Для заполнения потребностей покупателей необходимо, чтобы поле ""Заказ поставщику"" было не заполнено!");
		Возврат;
	КонецЕсли;
	
	Если Объект.Товары.Количество() = 0 Тогда
		Предупреждение("Заполните сначала таблицу товары");
		Возврат;
	КонецЕсли;
	
	//Ответ = Вопрос("Перед заполнением колонка ""Заказ"" будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	//Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	Возврат;
	//КонецЕсли;
	
	Документ = Объект;
	
	ЗаполнитьЗаказы();
КонецПроцедуры

Процедура ЗаполнитьЗаказы() Экспорт
	// ищем в созданных заказах покупателя те заказы, которые не попали
	// в размещение заказов покупателей и в резервирование на складах
	// затем заполняем колонку Заказ
	// если в заказах покупателя количество недостаточно, то изменяем количество в заказе поставщику,
	// и добавляем новую строку с пустым значением в колонке Заказ
	// сначала заполняем по заказам покупателей, которые попали в размещение
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаказыПокупателейОстатки.Номенклатура,
	                      |	ЗаказыПокупателейОстатки.КоличествоОстаток - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) КАК Количество,
	                      |	ЗаказыПокупателейОстатки.ЗаказПокупателя,
	                      |	ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры,
	                      |	РазмещениеЗаказовПокупателейОстатки.ЗаказПоставщику,
	                      |	РазмещениеЗаказовПокупателейОстатки.КоличествоОстаток КАК КоличествоРазмещения,
	                      |	ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата КАК ЗаказПокупателяДата,
	                      |	ЗаказыПокупателейОстатки.ЕдиницаИзмерения,
	                      |	ЗаказыПокупателейОстатки.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	                      |ИЗ
	                      |	РегистрНакопления.ЗаказыПокупателей.Остатки(&Дата, Номенклатура В (&Номенклатура)) КАК ЗаказыПокупателейОстатки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&Дата, ) КАК ТоварыВРезервеНаСкладахОстатки
	                      |		ПО ЗаказыПокупателейОстатки.Номенклатура = ТоварыВРезервеНаСкладахОстатки.Номенклатура
	                      |			И ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры = ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры
	                      |			И ЗаказыПокупателейОстатки.ЗаказПокупателя = ТоварыВРезервеНаСкладахОстатки.ДокументРезерва
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(&Дата, ) КАК РазмещениеЗаказовПокупателейОстатки
	                      |		ПО ЗаказыПокупателейОстатки.Номенклатура = РазмещениеЗаказовПокупателейОстатки.Номенклатура
	                      |			И ЗаказыПокупателейОстатки.ХарактеристикаНоменклатуры = РазмещениеЗаказовПокупателейОстатки.ХарактеристикаНоменклатуры
	                      |			И ЗаказыПокупателейОстатки.ЗаказПокупателя = РазмещениеЗаказовПокупателейОстатки.ЗаказПокупателя
	                      |ГДЕ
	                      |	ЗаказыПокупателейОстатки.КоличествоОстаток - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0) > 0
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КоличествоРазмещения УБЫВ,
	                      |	ЗаказПокупателяДата УБЫВ");
	Запрос.УстановитьПараметр("Номенклатура", Документ.Товары.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Документ.Ссылка), Новый Граница(Документ.Ссылка.МоментВремени(), ВидГраницы.Исключая), ТекущаяДата()));
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Товар Из Документ.Товары Цикл
		Если ЗначениеЗаполнено(Товар.Заказ) Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", Товар.Номенклатура, Товар.ХарактеристикаНоменклатуры);
		МассивСтрок = ТЗ.НайтиСтроки(ПараметрыОтбора);
		Товар.ИТС_ДобавитьПриходВРазмещение = Ложь;
		
		Для Каждого Строка Из МассивСтрок Цикл
			КоличествоРазмещения = 0;
			Если ЗначениеЗаполнено(Строка.КоличествоРазмещения) Тогда
				КоличествоРазмещения = Строка.КоличествоРазмещения;
			КонецЕсли;
			Если КоличествоРазмещения > 0 Тогда
				Если Товар.Количество > КоличествоРазмещения Тогда
					НоваяСтрокаТовара = Документ.Товары.Добавить();
					НоваяСтрокаТовара.Номенклатура = Товар.Номенклатура;
					НоваяСтрокаТовара.ХарактеристикаНоменклатуры = Товар.ХарактеристикаНоменклатуры;
					НоваяСтрокаТовара.ЕдиницаИзмерения           = Строка.ЕдиницаИзмерения;
					НоваяСтрокаТовара.Коэффициент                = Строка.Коэффициент;
					НоваяСтрокаТовара.Количество = (Товар.Количество - КоличествоРазмещения) 
													* НоваяСтрокаТовара.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
													/ Строка.Коэффициент;
					С = Документ.Товары.НайтиСтроки(ПараметрыОтбора)[0];
					НоваяСтрокаТовара.Цена = С.Цена;
					НоваяСтрокаТовара.СтавкаНДС = С.СтавкаНДС;
					
					ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.ЗаполнитьСкладИОрдерТабЧасти(НоваяСтрокаТовара, Документ);
			
					Товар.Количество = КоличествоРазмещения;
					Товар.Заказ = Строка.ЗаказПокупателя;
					Товар.ЗаказПоставщику = Строка.ЗаказПоставщику;
					Товар.ИТС_ДобавитьПриходВРазмещение = Истина;
					
					ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Товар, Документ);
					
					Строка.Количество = Строка.Количество - КоличествоРазмещения;
					КоличествоРазмещения = 0;
					Прервать;
				ИначеЕсли  Товар.Количество = КоличествоРазмещения Тогда
					Товар.Заказ = Строка.ЗаказПокупателя;
					Товар.ЗаказПоставщику = Строка.ЗаказПоставщику;
					Товар.ИТС_ДобавитьПриходВРазмещение = Истина;
				
					Строка.Количество = Строка.Количество - КоличествоРазмещения;
					КоличествоРазмещения = 0;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если Строка.Количество - КоличествоРазмещения > 0 Тогда
				Товар.Заказ = Строка.ЗаказПокупателя;
				Товар.ИТС_ДобавитьПриходВРазмещение = Истина;
				Если Товар.Количество > Строка.Количество - КоличествоРазмещения Тогда
					НоваяСтрокаТовара = Документ.Товары.Добавить();
					НоваяСтрокаТовара.Номенклатура = Товар.Номенклатура;
					НоваяСтрокаТовара.ХарактеристикаНоменклатуры = Товар.ХарактеристикаНоменклатуры;
					НоваяСтрокаТовара.ЕдиницаИзмерения           = Строка.ЕдиницаИзмерения;
					НоваяСтрокаТовара.Коэффициент                = Строка.Коэффициент;
					НоваяСтрокаТовара.Количество = (Товар.Количество - Строка.Количество + КоличествоРазмещения)
													* НоваяСтрокаТовара.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Строка.Коэффициент;
					С = Документ.Товары.НайтиСтроки(ПараметрыОтбора)[0];
					НоваяСтрокаТовара.Цена = С.Цена;
					НоваяСтрокаТовара.СтавкаНДС = С.СтавкаНДС;
					НоваяСтрокаТовара.ЗаказПоставщику = Товар.ЗаказПоставщику;
					
					ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрокаТовара, Документ);
					ОбработкаТабличныхЧастей.ЗаполнитьСкладИОрдерТабЧасти(НоваяСтрокаТовара, Документ);
			
					Товар.Количество = Строка.Количество - КоличествоРазмещения;
					
					ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Товар, Документ);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Товар, Документ);
					
					Строка.Количество = 0;
					Прервать;
				Иначе
					Строка.Количество = Строка.Количество - Товар.Количество;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры