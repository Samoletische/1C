
Процедура ЗаполнитьСписокРейсов()
	СписокВыбора = Новый СписокЗначений;
	Для Каждого Стр Из СводнаяИнформацияПоМашинамНаДень Цикл
		СписокВыбора.Добавить(Стр.Рейс, Стр.Рейс);
	КонецЦикла;	
	ЭлементыФормы.Рейсы.СписокВыбора = СписокВыбора;
КонецПроцедуры

Процедура ПриОткрытии()
	Рейс = Неопределено;
	ВесРейса = 0;
	ТочекРейса = 0;
	ЗаполнитьСписокРейсов();
	УстановитьДоступностьКнопок();
КонецПроцедуры

Процедура ОбновитьИнформациюОРейсе()
Если ЗначениеЗаполнено(Рейс) Тогда
		ВесРейса = ПолучитьВесРейса(Рейс);
		ТочекРейса = ПолучитьТочекРейса(Рейс);
		СтоимостьРейсаТорги = Рейс.СтоимостьРейсаТорги;
		//ИМИК 10.09.14(
		СтоимостьРейсаПлан = Рейс.СтоимостьРейсаПлан;
		//ИМИК 10.09.14)
		СтоимостьРейсаИзДокумента = Рейс.СтоимостьРейса;
		СтоимостьРейса = Рейс.СтоимостьРейса;
		МашинаРейса = Рейс.Транспорт;
		Машина = Рейс.Транспорт;
		ВодительРейса = Рейс.Водитель;
		Водитель = Рейс.Водитель;
		ПеревозчикРейса = Рейс.Перевозчик;
		Перевозчик = Рейс.Перевозчик;
		ПрицепРейса = Рейс.Прицеп;
		Прицеп = Рейс.Прицеп;
	Иначе
		ВесРейса = 0;
		ТочекРейса = 0;
		СтоимостьРейсаТорги = 0;
		//ИМИК 10.09.14(
		СтоимостьРейсаПлан = 0;
		//ИМИК 10.09.14)
		СтоимостьРейса = 0;
		СтоимостьРейсаИзДокумента = 0;
		МашинаРейса = Неопределено;
		Машина = Неопределено;
		ВодительРейса = Неопределено;
		Водитель = Неопределено;
		ПеревозчикРейса = Неопределено;
		Перевозчик = Неопределено;
		ПрицепРейса = Неопределено;
		Прицеп = Неопределено;
	КонецЕсли;	
КонецПроцедуры	

Процедура РейсыПриИзменении(Элемент)
	Рейс = Элемент.Значение;
	ОбновитьИнформациюОРейсе();
	
КонецПроцедуры

//ИМИК 10.09.14(
Процедура УстановитьВидимостьПанелиКнопок(флВидимость)
	//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие.Доступность = флВидимость;
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие1.Доступность = флВидимость;
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие2.Доступность = флВидимость;
	Если Рейс.Поставщики Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие3.Доступность = Ложь;
	Иначе 
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие3.Доступность = флВидимость;
	КонецЕсли;	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Действие4.Доступность = флВидимость;
КонецПроцедуры	
//ИМИК 10.09.14)

Функция ПолучитьТочекРейса(Рейс)
	//число различных адресов доставки из табличной части док рейс
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПОДСТРОКА(ИТС_МашинаЗаказа.ЗаказПокупателя.АдресДоставки, 1, 1000) КАК АдресДоставки
	                      |ИЗ
	                      |	РегистрСведений.ИТС_МашинаЗаказа КАК ИТС_МашинаЗаказа
	                      |ГДЕ
	                      |	ИТС_МашинаЗаказа.Регистратор = &Рейс
	                      |ИТОГИ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АдресДоставки)
	                      |ПО
	                      |	ОБЩИЕ");
	Запрос.УстановитьПараметр("Рейс", Рейс);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.АдресДоставки;
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции	

Функция ПолучитьВесРейса(Рейс)
	НайдСтр = СводнаяИнформацияПоМашинамНаДень.Найти(Рейс, "Рейс");
	
	Если НайдСтр = Неопределено Тогда
		Результат = 0;
	Иначе
		Результат = НайдСтр.Вес;
	КонецЕсли;	
	
	Возврат Результат;
КонецФункции

Процедура Кнопка1Нажатие(Элемент)
	СтоимостьРейса = СтоимостьРейсаТорги;
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	Если Не ВозможноИзменятьРейс() Тогда
	   Возврат;	 
	КонецЕсли;	
	
	Отказ = Ложь;
    Если Не ЗначениеЗаполнено(Рейс) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Рейс>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Машина) Тогда
		ПоказатьОповещениеПользователя(,,"Не указана <Машина>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Водитель) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Водитель>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СтоимостьРейса) Тогда
		ПоказатьОповещениеПользователя(,,"Не указана <СтоимостьРейса>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не Отказ Тогда
		Об = Рейс.ПолучитьОбъект();
		
		//ИМИК 10.09.14(
	    //проверка на наличие доверенности, иначе рейс нельзя утвердить
		Если Рейс.ДатаРейса >= Константы.ИМИК_ДатаВведенияВзаиморасчетовЗаПеревозки.Получить() Тогда
		 флНужнаДоверенностьВходящая = ?(ЗначениеЗаполнено(Водитель) И ЗначениеЗаполнено(Перевозчик), Истина, Ложь);
	    Иначе
		 флНужнаДоверенностьВходящая = Ложь;
	    КонецЕсли; 
	 
		флВидимостьПанелиКнопок = Истина;
		
		Если флНужнаДоверенностьВходящая Тогда
			Если Не ЗначениеЗаполнено(Рейс.ДатаДоверенности) Или Не ЗначениеЗаполнено(Рейс.НомерДоверенности)  
				Или Не ЗначениеЗаполнено(Рейс.СрокДействияС) Тогда
				
				Если Вопрос("Нельзя утвердить рейс.Необходимо заполнить данные о входящей доверенности.Открыть форму рейса?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					ФормаДок = Рейс.ПолучитьФорму();
					ПанельФормы = ФормаДок.ЭлементыФормы.Панель1;
					ПанельФормы.ТекущаяСтраница = ПанельФормы.Страницы[1];
					
					ФормаДок.ОткрытьМодально();
					Если ЗначениеЗаполнено(Рейс.ДатаДоверенности) И ЗначениеЗаполнено(Рейс.НомерДоверенности)  И ЗначениеЗаполнено(Рейс.СрокДействияС) Тогда
						флВидимостьПанелиКнопок = Истина;
					Иначе
						флВидимостьПанелиКнопок = Ложь;
					КонецЕсли;	
				Иначе
					флВидимостьПанелиКнопок = Ложь;
				КонецЕсли;
			Иначе
				флВидимостьПанелиКнопок = Истина;
			КонецЕсли;
		КонецЕсли;
		
		//ИМИК 24.09.14(
		флПроверкаПройдена = Истина;
		СтрОшибок = "";
		Если Не Об.ПроверкаОтсрочкиОплатыДней() Тогда
			СтрОшибок = " Не заполнено поле <Отсрочка оплаты дней>.";
			флПроверкаПройдена = Ложь;
		КонецЕсли;	
		Если Не Об.ПроверкаЗаполненияНомераБанковскойКарты() Тогда
			СтрОшибок = СтрОшибок + " Не заполнено поле <Номер банковской карты>.";
			флПроверкаПройдена = Ложь;
		КонецЕсли;	
		Если Не Об.ПроверкаЗаполненияФормыОплаты() Тогда
			СтрОшибок = СтрОшибок + " Не заполнено поле <Форма оплаты>.";
			флПроверкаПройдена = Ложь;
		КонецЕсли;	
		Если Не Об.ПроверкаЗаполненияПлановойДатыОплаты() Тогда
			СтрОшибок = СтрОшибок + " Не заполнено поле <Плановая дата оплаты>.";
			флПроверкаПройдена = Ложь;
		КонецЕсли;	
		
		Если Не флПроверкаПройдена Тогда
			Если Вопрос("Рейс не может быть утвержден." + СтрОшибок + " Открыть <Рейс> для заполните необходимых полей?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
				ФормаДок = Рейс.ПолучитьФорму();
				ПанельФормы = ФормаДок.ЭлементыФормы.Панель1;
				ПанельФормы.ТекущаяСтраница = ПанельФормы.Страницы[2];
					
				ФормаДок.ОткрытьМодально();
				Об = Рейс.ПолучитьОбъект();	
				Если Не Об.ПроверкаОтсрочкиОплатыДней() Или Не Об.ПроверкаЗаполненияНомераБанковскойКарты() Или Не Об.ПроверкаЗаполненияФормыОплаты() Тогда
					флВидимостьПанелиКнопок = Ложь;
				КонецЕсли;	
			Иначе
				флВидимостьПанелиКнопок = Ложь;
			КонецЕсли;
		КонецЕсли;
		//ИМИК 24.09.14)
		
		УстановитьВидимостьПанелиКнопок(флВидимостьПанелиКнопок);
	    //ИМИК 10.09.14)
		
		флНужнаДоверенность = ?(Рейс.Поставщики, Истина, Ложь); 
		
		Об = Рейс.ПолучитьОбъект();
		
		Если флНужнаДоверенность Тогда
			
			СписокУдаляемыхДоверенностей = Новый СписокЗначений;
			
			// если есть старые доверенности по документам, которых уже нет, то удалим их
			Для Каждого Стр Из Об.ДоверенностиНаПолучениеТовара Цикл
				НайденнаяСтрока = Об.ДокументыРейса.Найти(Стр.Документ);
				Если НайденнаяСтрока = Неопределено Тогда
					СписокУдаляемыхДоверенностей.Добавить(Стр);
				КонецЕсли;	
			КонецЦикла;
			Для Каждого Эл Из СписокУдаляемыхДоверенностей Цикл
				Док = Эл.Значение.Доверенность;
				Об.УдалитьДоверенность(Док);
				Об.ДоверенностиНаПолучениеТовара.Удалить(Эл.Значение);
			КонецЦикла;	
			
			// создадим или перезаполним доверенности для каждого документа
			Для Каждого СтрокаДокументовРейса Из Об.ДокументыРейса Цикл
				НайдСтр = Об.ДоверенностиНаПолучениеТовара.Найти(СтрокаДокументовРейса.Документ);
				ДокДоверенность = ?(НайдСтр = Неопределено, Неопределено, НайдСтр.Доверенность);
								
				Контрагент = СтрокаДокументовРейса.Документ.Контрагент;
				Если ЗначениеЗаполнено(ДокДоверенность)Тогда
					Об.ПересоздатьДоверенность(ДокДоверенность, Контрагент, "НаПолучениеТовара", СтрокаДокументовРейса.Документ);
			    Иначе                         
				 НовДоверенность = Об.СоздатьДоверенность(Контрагент, "НаПолучениеТовара", СтрокаДокументовРейса.Документ);        
				 НовСтр = Об.ДоверенностиНаПолучениеТовара.Добавить();
				 НовСтр.Доверенность = НовДоверенность;
				 НовСтр.Контрагент = Контрагент;
				 НовСтр.Документ = СтрокаДокументовРейса.Документ;
			    КонецЕсли;
			 
			КонецЦикла;
		КонецЕсли;
		
		флНужнаДоверенностьНаПолучениеДенег = ?(Рейс.Покупатели, Истина, Ложь); 
		
		///Об = Рейс.ПолучитьОбъект();
		
		Если флНужнаДоверенностьНаПолучениеДенег Тогда
			
			СписокКонтрагентов = Об.ПолучитьСписокКонтрагентовРейса();
			СписокУдаляемыхДоверенностей = Новый СписокЗначений;
			СписокУдаляемыхДенежныхСредств = Новый СписокЗначений;

			// если есть старые доверенности а контрагентов уже нет, то удалим их
			Для Каждого Стр Из Об.ДоверенностиНаПолучениеДенег Цикл
				Контрагент = СписокКонтрагентов.НайтиПоЗначению(Стр.Доверенность.Контрагент);
				Если Контрагент = Неопределено Тогда
					СписокУдаляемыхДоверенностей.Добавить(Стр);
				КонецЕсли;	
			КонецЦикла;
			Для Каждого Эл Из СписокУдаляемыхДоверенностей Цикл
				Док = Эл.Значение.Доверенность;
				Об.УдалитьДоверенность(Док);
				Об.ДоверенностиНаПолучениеДенег.Удалить(Эл.Значение);
			КонецЦикла;	
			
			Для Каждого Стр Из Об.ДенежныеСредства Цикл
				Контрагент = СписокКонтрагентов.НайтиПоЗначению(Стр.Контрагент);
				Если Контрагент = Неопределено Тогда
					СписокУдаляемыхДенежныхСредств.Добавить(Стр);
				КонецЕсли;	
			КонецЦикла;
			Для Каждого Эл Из СписокУдаляемыхДенежныхСредств Цикл
				Об.ДенежныеСредства.Удалить(Эл.Значение);
			КонецЦикла;	
	

			// создадим или перезаполним доверенности для СпискаКонтрагентов
			Отбор = Новый Структура;
			
			Для Каждого Эл Из СписокКонтрагентов Цикл
				Контрагент = Эл.Значение;
				
				Отбор.Очистить();
				Отбор.Вставить("Контрагент", Контрагент);
				
				НайдСтр = Об.ДоверенностиНаПолучениеДенег.НайтиСтроки(Отбор);
				Если НайдСтр.Количество()> 0 Тогда
					ДокДоверенность = НайдСтр[0].Доверенность;
				Иначе
					ДокДоверенность = Неопределено;
		        КонецЕсли;
				
				Если ЗначениеЗаполнено(ДокДоверенность)Тогда
				 Об.ПересоздатьДоверенность(ДокДоверенность, Контрагент, "НаПолучениеДенег");
			    Иначе                         
				 НовДоверенность = Об.СоздатьДоверенность(Контрагент, "НаПолучениеДенег");        
				 Если ЗначениеЗаполнено(НовДоверенность) Тогда
					 НовСтр = Об.ДоверенностиНаПолучениеДенег.Добавить();
					 
					 НовСтр.Доверенность = НовДоверенность;
					 НовСтр.Контрагент = Эл.Значение;
					 
					 НовСтр1 = Об.ДенежныеСредства.Добавить();
					 НовСтр1.Контрагент = Эл.Значение;
					 НовСтр1.Сумма = НовДоверенность.Товары.Итог("Количество");
				 КонецЕсли;
			    КонецЕсли;
			 
			КонецЦикла;
		КонецЕсли;
		
		
		Об.ИнициализацияТабЧастиДокументыВодителя();
		
		Если СтоимостьРейса<>СтоимостьРейсаИзДокумента Тогда
     		Об.РаспределенаСуммаПоВсемЗаказам = Ложь;
		КонецЕсли;
		
		флОшибки = Ложь;
		
		Об.Водитель = Водитель;
		Об.СтоимостьРейса = СтоимостьРейса;
		Об.Транспорт = Машина;
		Об.Перевозчик = Перевозчик;
		Об.Прицеп = Прицеп;
		Об.РассчитатьАгентскиеРетроБонус();
		Об.РассчитатьСтоимостьРейсаФакт();
		
		Попытка
		 Об.Записать(РежимЗаписиДокумента.Проведение);
	    Исключение
		 Сообщить(ОписаниеОшибки());
		 флОшибки = Истина;
	    КонецПопытки;
		
		Если Не флОшибки Тогда
		 ОбновитьИнформациюОРейсе();
		 ОбновитьИнформациюВГлавныхТаблицах();
		КонецЕсли; 
	КонецЕсли;	
КонецПроцедуры

Процедура ОбновитьИнформациюВГлавныхТаблицах()
	СтруктураПоиска = Новый Структура("Рейс", Рейс);
	НайдСтр = ДоставкаПокупателю.НайтиСтроки(СтруктураПоиска);
	Для Каждого Стр Из НайдСтр Цикл
		Стр.Машина = Рейс.Транспорт;
		Стр.НомерМашины = ?(ЗначениеЗаполнено(Рейс.Транспорт), Рейс.Транспорт.Код, "");
	КонецЦикла;
	
	НайдСтр = СводнаяИнформацияПоМашинамНаДень.НайтиСтроки(СтруктураПоиска);
	Для Каждого Стр Из НайдСтр Цикл
		Стр.Машина = Рейс.Транспорт;
		Если ЗначениеЗаполнено(Рейс.Транспорт) Тогда
			Стр.НомерМашины = Рейс.Транспорт.Код;
			Стр.Грузоподъемность = Рейс.Транспорт.Грузоподъемность;
			Стр.Свободно = Стр.Грузоподъемность - Стр.Вес;
		Иначе
			Стр.НомерМашины = "";
			Стр.Грузоподъемность = 0;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	

Процедура ОсновныеДействияФормыДействие1(Кнопка)
	Если Не ВозможноИзменятьРейс() Тогда
	   Возврат;	 
	КонецЕсли;	
	
	Об = Рейс.ПолучитьОбъект();
	Об.Водитель = Неопределено;
	Об.Транспорт = Неопределено;
	флОшибки = Ложь;
	Попытка
		Об.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить(ОписаниеОшибки());
		флОшибки = Истина;
	КонецПопытки;
	Если Не флОшибки Тогда
		ОбновитьИнформациюОРейсе();
		ОбновитьИнформациюВГлавныхТаблицах();
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступностьКнопок()
	
КонецПроцедуры	

Процедура ОсновныеДействияФормыДействие2(Кнопка)
	Если Не ВозможноИзменятьРейс() Тогда
	   Возврат;	 
	КонецЕсли;	
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Рейс) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Рейс>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не Отказ И ВесРейса > 0 Тогда
		
		//ИМИК 02.01.15(
		//проверка что в рейс не попадают помеченные на удаление заказы
		СЗУдаленных = Новый СписокЗначений;
		Об = Рейс.ПолучитьОбъект();
		Для Каждого Стр Из Об.ДокументыРейса Цикл
			Если Стр.Документ.ПометкаУдаления Тогда
				СЗУдаленных.Добавить(Стр);
			КонецЕсли;	
		КонецЦикла;
		Если СЗУдаленных.Количество() > 0 Тогда
			Для Каждого Эл Из СЗУдаленных Цикл
				Сообщить("Из рейса удален документ " + СокрЛП(Эл.Значение.Документ) +  " т.к помеченные на удаление документы в рейс входить не могут.", СтатусСообщения.Информация);
				Об.ДокументыРейса.Удалить(Эл.Значение);
			КонецЦикла;
			Попытка
			   Об.Записать(РежимЗаписиДокумента.Проведение);
		    Исключение
			   Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
			КонецПопытки;   
		КонецЕсли;	
		//ИМИК 02.01.15)
		
		//распределение стоимости рейса на транспортные расходы, входящих в рейс заказов покупателя пропорционально весам заказов
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ИТС_МашинаЗаказа.ЗаказПокупателя,
		                      |	ИТС_МашинаЗаказа.ЗаказПокупателя.итс_ТранспортныеВЦенеТовара КАК ТранспортныеВЦенеТовара,
		                      |	СУММА(ИТС_ДоставкаЗаказов.Вес) КАК ВесЗаказа,
		                      |	СУММА(ЗаказыУслуги.Сумма) КАК СуммаУслуг,
		                      |	СУММА(ИТС_МашинаЗаказа.ЗаказПокупателя.СуммаДокумента) КАК СуммаДокумента
		                      |ИЗ
		                      |	РегистрСведений.ИТС_МашинаЗаказа КАК ИТС_МашинаЗаказа
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИТС_ДоставкаЗаказов КАК ИТС_ДоставкаЗаказов
		                      |		ПО ИТС_МашинаЗаказа.ЗаказПокупателя = ИТС_ДоставкаЗаказов.ЗаказПокупателя
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Услуги КАК ЗаказыУслуги
		                      |		ПО (ЗаказыУслуги.Ссылка = ИТС_ДоставкаЗаказов.ЗаказПокупателя)
		                      |ГДЕ
		                      |	ИТС_МашинаЗаказа.Регистратор = &Рейс
		                      |	И ИТС_МашинаЗаказа.ЗаказПокупателя.ПометкаУдаления = ЛОЖЬ
		                      |	И ИТС_МашинаЗаказа.ЗаказПокупателя.Проведен
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ИТС_МашинаЗаказа.ЗаказПокупателя,
		                      |	ИТС_МашинаЗаказа.ЗаказПокупателя.итс_ТранспортныеВЦенеТовара");
        Запрос.УстановитьПараметр("Рейс", Рейс);
		
		Результат=Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		ТЗ=Результат.Выгрузить();
		
		СуммаКРаспределению=Макс(0,Рейс.СтоимостьРейса);//-ТЗ.Итог("СуммаУслуг"));//вернуться додумать как в случае выделения услуг отдельной строкой
		//++ ИТС-Сервис 25.03.2015 #Транспортные затраты разносятся по сумме
		//БазаРаспределения=ТЗ.Итог("ВесЗаказа");
		БазаРаспределения = ТЗ.Итог("СуммаДокумента");
		//-- ИТС-Сервис 25.03.2015 
		
		флОшибки = Ложь;
		Пока Выборка.Следующий() Цикл
			Об = Выборка.ЗаказПокупателя.ПолучитьОбъект();
			//Если Выборка.ТранспортныеВЦенеТовара Тогда
				//++ ИТС-Сервис 25.03.2015 #Транспортные затраты разносятся по сумме
				//Если ЗначениеЗаполнено(Выборка.ВесЗаказа) Тогда 
				//	СуммаТранспортЗатратЗаказа = Окр(Выборка.ВесЗаказа * СуммаКРаспределению / БазаРаспределения, 2);
				//Иначе
				// 	СуммаТранспортЗатратЗаказа = 0;
				//КонецЕсли;
				Если ЗначениеЗаполнено(Выборка.СуммаДокумента) Тогда 
					СуммаТранспортЗатратЗаказа = Окр(Выборка.СуммаДокумента * СуммаКРаспределению / БазаРаспределения, 2);
			    Иначе
				 	СуммаТранспортЗатратЗаказа = 0;
				КонецЕсли;
				//-- ИТС-Сервис 25.03.2015 
				 
				СуммаКРаспределению = СуммаКРаспределению - СуммаТранспортЗатратЗаказа;
				БазаРаспределения   = БазаРаспределения   -  Выборка.СуммаДокумента;
			//	БазаРаспределения=БазаРаспределения-Выборка.ВесЗаказа;
			//Иначе
			//	СуммаТранспортЗатратЗаказа=0;
			//КонецЕсли;
			
			Об.СуммаТранспортЗатрат = СуммаТранспортЗатратЗаказа;
			Попытка 
				Об.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
				флОшибки = Истина;
			КонецПопытки;
		КонецЦикла;
		Если флОшибки Тогда
			Сообщить("Не распределилось.Попробуйте еще раз.", СтатусСообщения.Важное);
			Об = Рейс.ПолучитьОбъект();
			Об.РаспределенаСуммаПоВсемЗаказам = Ложь;
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			Об = Рейс.ПолучитьОбъект();
			Об.РаспределенаСуммаПоВсемЗаказам = Истина;
			Об.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие3(Кнопка)
	Если Не ВозможноИзменятьРейс() Тогда
	   Возврат;	 
	КонецЕсли;	
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Рейс) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Рейс>.");
		Отказ = Истина;
	КонецЕсли;
	Если Не Отказ И ВесРейса > 0 Тогда
		//распределение стоимости рейса на транспортные расходы, входящих в рейс заказов покупателя пропорционально весам заказов
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ИТС_МашинаЗаказа.ЗаказПокупателя,
		                      |	РеализацияТоваровУслуг.Ссылка КАК Реализация
		                      |ИЗ
		                      |	РегистрСведений.ИТС_МашинаЗаказа КАК ИТС_МашинаЗаказа
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		                      |		ПО (ИТС_МашинаЗаказа.ЗаказПокупателя = РеализацияТоваровУслуг.Сделка
		                      |				И НЕ РеализацияТоваровУслуг.ПометкаУдаления)
		                      |ГДЕ
		                      |	ИТС_МашинаЗаказа.Регистратор = &Рейс");
        Запрос.УстановитьПараметр("Рейс", Рейс);
		
		флВыпущеныВсеРеализации = Истина;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Реализация) Тогда
				//на основании заказа уже выписана реализация - переоформим
				//Т.к. заказ не может уже измениться если реализация проведена, то переоформлять проведенные реализации не надо, иначе бухгалтеру заново придется перепроводить реализацию
				флПерепровести = Ложь;	
				Если Выборка.Реализация.Проведен Тогда
					Если Выборка.Реализация.СуммаТранспортЗатрат <> Выборка.Реализация.Сделка.СуммаТранспортЗатрат Тогда
					  флПерепровести = Истина;	
					Иначе	
					  Продолжить;
					КонецЕсли;
				КонецЕсли;	
				Док = Выборка.Реализация.ПолучитьОбъект();
				Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Док.Товары.Очистить();
				Док.Услуги.Очистить();
				Док.Заполнить(Выборка.ЗаказПокупателя);
				флОшибки = Ложь;
				Попытка
				   Док.Записать(РежимЗаписиДокумента.Запись);
			    Исключение
				   Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
				   флОшибки = Истина;
			   КонецПопытки;
			   Если Не флОшибки Тогда
				   Сообщить("Перезаполнен документ " + Док, СтатусСообщения.Обычное);
				   Если флПерепровести Тогда
					  Док.Записать(РежимЗаписиДокумента.Проведение); 
				   КонецЕсли;	   
			   Иначе
				   флВыпущеныВсеРеализации = Ложь;
			   КонецЕсли;
			Иначе
			    //надо выписать на основании заказа реализацию
				Док = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				//++ ИТС-Сервис 14.05.15 #Ошибка не заполнена дата
				Док.Дата = Выборка.ЗаказПокупателя.ДатаОтгрузки;
				Если Не ЗначениеЗаполнено(Док.Дата) Тогда
					Док.Дата = ТекущаяДата();
				КонецЕсли;
				//-- ИТС-Сервис 14.05.15 
				  
				Док.Заполнить(Выборка.ЗаказПокупателя);
				флОшибки = Ложь;
				Попытка
				   Док.Записать(РежимЗаписиДокумента.Запись);
			    Исключение
				   Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
				   флОшибки = Истина;
			   КонецПопытки;
			   Если Не флОшибки Тогда
				   Сообщить("Создан документ " + Док, СтатусСообщения.Обычное);
			   Иначе
				   флВыпущеныВсеРеализации = Ложь;
			   КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		Об = Рейс.ПолучитьОбъект();
		Об.ВыпущеныВсеРеализации = флВыпущеныВсеРеализации;
		Об.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыВыполнить(Кнопка)
	
	Если Не ЗначениеЗаполнено(Рейс) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Рейс>.");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Рейс.Транспорт) Тогда
		ПоказатьОповещениеПользователя(,,"Не указана <Машина> в рейсе.");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Рейс.Водитель) Тогда
		ПоказатьОповещениеПользователя(,,"Не указан <Водитель> в рейсе.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИТС_SMSСообщенияОРейсахСрезПоследних.Рейс,
	                      |	ИТС_SMSСообщенияОРейсахСрезПоследних.Водитель,
	                      |	ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 10) КАК Телефон
	                      |ИЗ
	                      |	РегистрСведений.ИТС_SMSСообщенияОРейсах.СрезПоследних(&НаДату, Рейс = &Рейс) КАК ИТС_SMSСообщенияОРейсахСрезПоследних
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                      |		ПО ИТС_SMSСообщенияОРейсахСрезПоследних.Водитель = КонтактнаяИнформация.Объект
	                      |			И (КонтактнаяИнформация.Тип = &Тип)
	                      |			И (КонтактнаяИнформация.Вид = &Вид)");
    Запрос.Параметры.Вставить("НаДату", ТекущаяДата());
	Запрос.Параметры.Вставить("Рейс", Рейс);
	Запрос.Параметры.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Телефон физ.лица мобильный"));
	Запрос.Параметры.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	ШаблонТекстаSMS = "ООО ""ИМИК Лубрикантс"" * Работа * Водитель на доставку. Рейс №" + СокрЛП(Рейс.Номер) + " закрыта.";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Водитель = Рейс.Водитель Тогда
			Продолжить;
		КонецЕсли;	
		Если ИТС_ОбщийМодуль.ОтправитьSMS(Выборка.Телефон, ШаблонТекстаSMS) Тогда
				НаборЗаписей = РегистрыСведений.ИТС_SMSСообщенияОРейсах.СоздатьНаборЗаписей();
				Запись = НаборЗаписей.Добавить();
				Запись.Период = ТекущаяДата();
				Запись.Рейс = Рейс;
				Запись.Водитель = Выборка.Водитель;
				Запись.ТипSMSСообщения = Перечисления.ИТС_ТипыSMSСообщений.ЗакрытииВакансииНаРейс;
				НаборЗаписей.Записать(Ложь);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	СтоимостьРейса = СтоимостьРейсаИзДокумента;
КонецПроцедуры

Процедура ВодительПриИзменении(Элемент)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИТС_ВодителиМашинСрезПоследних.Машина
	                      |ИЗ
	                      |	РегистрСведений.ИТС_ВодителиМашин.СрезПоследних(&НаДату, Водитель = &Водитель) КАК ИТС_ВодителиМашинСрезПоследних");
    Запрос.УстановитьПараметр("НаДату", ДатаДоставкиПокупателю);
	Запрос.УстановитьПараметр("Водитель", Водитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		лМашина = Выборка.Машина;
		Если Вопрос("За этим водителем закреплена машина" + лМашина.Наименование + " №" + лМашина.Код + ".Перезаполнить машину?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		 Машина = Выборка.Машина;                                    
		КонецЕсли; 
	КонецЕсли;	
КонецПроцедуры

Функция ВозможноИзменятьРейс()
	Если Рейс.ДатаРейса < НачалоДня(ТекущаяДата()) Тогда
		Возврат Вопрос("Дата рейса меньше текущего дня.Заказы уже отправлены.Изменить рейс все равно?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции   
	

