Перем мТабСинх;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	НайдСтрока = ТабМашин.Найти(Истина,"Пометка"); 
	
	Если НайдСтрока = Неопределено Тогда
		Возврат;
	Иначе
		Машина = НайдСтрока.Машина;
		Рейс = НайдСтрока.Рейс;
	КонецЕсли;	
	
	СтруктураОтбора = Новый Структура("Пометка", Истина);
	НайдСтроки = ТабОтбора.НайтиСтроки(СтруктураОтбора);
	СписокУдаляемых = Новый СписокЗначений;
	
	Для Каждого Стр Из НайдСтроки Цикл
		СтруктураОтбора = Новый Структура("Контрагент, АдресДоставки", Стр.Контрагент, Стр.АдресДоставки);
		//добавлено 01.08.14
		
		НайдСтроки1 = ДоставкаПокупателю.НайтиСтроки(СтруктураОтбора);
		Для Каждого Стр1 Из НайдСтроки1 Цикл
			Записано = СделатьЗаписьЗаказаВРейс(Стр1.ЗаказПокупателя, Рейс);
			Стр1.Машина = Машина;
			Стр1.НомерМашины = ?(ЗначениеЗаполнено(Машина), Машина.Код, "");
			Стр1.Рейс = Рейс;
			Стр1.РейсПредставление = ПолучитьПредставлениеРейса(Рейс);
		КонецЦикла;	
		
		Если Записано Тогда
			СписокУдаляемых.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;	
	
	
	Для Каждого Элем Из СписокУдаляемых Цикл
		ТабОтбора.Удалить(Элем.Значение);
	КонецЦикла;	
	НайдСтрока.Пометка = Ложь;
	НайдСтрока.Вес = НайдСтрока.Вес + Вес;
	
	НайдСтрока.Покупатели = Рейс.Покупатели;
	НайдСтрока.Поставщики = Рейс.Поставщики;
	
	НайдСтрока = СводнаяИнформацияПоМашинамНаДень.Найти(Рейс, "Рейс");
	НайдСтрока.Вес = НайдСтрока.Вес + Вес;
	
		
	ОбновитьВесСвободно();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьТабОтбора();
	ЗаполнитьСписокКонтрагентов();
	ЗаполнитьСписокСпособыДоставки();
	ЗаполнитьТабМашин();
	
	Вес = 0;
	Свободно = 0;
	
	УстановитьДоступность(Ложь);
	УстановитьВидимость(Ложь,Ложь);
КонецПроцедуры

Процедура УстановитьДоступность(флДоступность)
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Найти("Закрепить").Доступность = флДоступность;
КонецПроцедуры

Процедура УстановитьВидимость(флВидимостьВес = Неопределено, флВидимостьСвободно = Неопределено)
	Если Не (флВидимостьВес = Неопределено) Тогда
	  ЭлементыФормы.НадписьВесВыбрано.Видимость = флВидимостьВес;
	  ЭлементыФормы.Вес.Видимость = флВидимостьВес;
    КонецЕсли;
    Если Не (флВидимостьСвободно = Неопределено) Тогда
	  ЭлементыФормы.НадписьСвободно.Видимость = флВидимостьСвободно;
	  ЭлементыФормы.Свободно.Видимость = флВидимостьСвободно;
	КонецЕсли;
КонецПроцедуры	

Процедура ЗаполнитьТабОтбора()
	ТабОтбора.Очистить();
	
	СтруктураОтбора = Новый Структура("РейсПредставление", "");
	
	НайдСтроки = ДоставкаПокупателю.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого Стр Из НайдСтроки Цикл
		НовСтр = ТабОтбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.Поставщик = НовСтр.Контрагент.Поставщик;
		НОвСтр.Покупатель = НовСтр.Контрагент.Покупатель;
	КонецЦикла;	
	
	ЭлементыФормы.ТабОтбора.ОбновитьСтроки();
КонецПроцедуры	

Процедура ЗаполнитьСписокКонтрагентов()
	
	СписокВыбора = ЭлементыФормы.Контрагенты.СписокВыбора;
	СписокВыбора.Очистить();
	
	Для Каждого Стр Из ТабОтбора Цикл
		Если СписокВыбора.НайтиПоЗначению(Стр.Контрагент) = Неопределено Тогда
			СписокВыбора.Добавить(Стр.Контрагент, Стр.Контрагент.Наименование);
		КонецЕсли;	
	КонецЦикла;		
	
	СписокВыбора.СортироватьПоЗначению();
	ЭлементыФормы.Контрагенты.СписокВыбора = СписокВыбора;
	
КонецПроцедуры	

Процедура ЗаполнитьСписокСпособыДоставки()
	СписокВыбора = ЭлементыФормы.СпособыДоставки.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить(Перечисления.ИТС_СпособыДоставки.ДоставкаВРегионыАвто, "Доставка в регионы(авто)");
	СписокВыбора.Добавить(Перечисления.ИТС_СпособыДоставки.МестнаяДоставкаАвто, "Местная доставка(авто)");
	СписокВыбора.Добавить(Перечисления.ИТС_СпособыДоставки.ДоставкаКонтейнером, "Доставка контейнером(ж/д)");
	
	ЭлементыФормы.СпособыДоставки.СписокВыбора = СписокВыбора;
КонецПроцедуры

Процедура ЗаполнитьТабМашин()
	ТабМашин.Очистить();
	
	Для Каждого Стр Из СводнаяИнформацияПоМашинамНаДень Цикл
		НовСтр = ТабМашин.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.Поставщики = Стр.Рейс.Поставщики;
		НОвСтр.Покупатели = Стр.Рейс.Покупатели;
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗонаДоставкиПриИзменении(Элемент)
	НаложитьОтборВТабОтбора();
КонецПроцедуры

Процедура КонтрагентыПриИзменении(Элемент)
	НаложитьОтборВТабОтбора();
КонецПроцедуры

Процедура СохранитьПометки()
	мТабСинх.Очистить();
	
	СтруктураОтбора = Новый Структура("Пометка", Истина);
	НайдСтроки = ТабОтбора.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого Стр Из НайдСтроки Цикл
		НовСтр = мТабСинх.Добавить(); 
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;	
КонецПроцедуры

Процедура ВосстановитьПометки()
	Для Каждого Стр Из мТабСинх Цикл
		СтруктураОтбора = Новый Структура("Контрагент,АдресДоставки", Стр.Контрагент, Стр.АдресДоставки);
	    НайдСтроки = ТабОтбора.НайтиСтроки(СтруктураОтбора);
		Если НайдСтроки.Количество()>0 Тогда
			НайдСтроки[0].Пометка = Стр.Пометка;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура НаложитьОтборВТабОтбора()
	СохранитьПометки();
	
	ТабОтбора.Очистить();
	
	Если ЗначениеЗаполнено(ЗонаДоставки) Тогда
		Если УстановленКонтрагентДляОтбора() Тогда
			Если УстановленСпособДоставкиДляОтбора() Тогда
			  СтруктураОтбора = Новый Структура("ЗонаДоставки, Контрагент, СпособДоставки", ЗонаДоставки, ЭлементыФормы.Контрагенты.Значение, ЭлементыФормы.СпособыДоставки.Значение);	
			Иначе	
			  СтруктураОтбора = Новый Структура("ЗонаДоставки, Контрагент", ЗонаДоставки, ЭлементыФормы.Контрагенты.Значение);
			КонецЕсли;
		Иначе
			Если УстановленСпособДоставкиДляОтбора() Тогда
			  СтруктураОтбора = Новый Структура("ЗонаДоставки, СпособДоставки", ЗонаДоставки, ЭлементыФормы.СпособыДоставки.Значение);	
			Иначе	
			  СтруктураОтбора = Новый Структура("ЗонаДоставки", ЗонаДоставки);
			КонецЕсли;
		КонецЕсли;	
	Иначе
		Если УстановленКонтрагентДляОтбора() Тогда
			Если УстановленСпособДоставкиДляОтбора() Тогда
			  СтруктураОтбора = Новый Структура("Контрагент, СпособДоставки", ЭлементыФормы.Контрагенты.Значение, ЭлементыФормы.СпособыДоставки.Значение);	
			Иначе	
			  СтруктураОтбора = Новый Структура("Контрагент", ЭлементыФормы.Контрагенты.Значение);
			КонецЕсли;  
		Иначе
			Если УстановленСпособДоставкиДляОтбора() Тогда
				СтруктураОтбора = Новый Структура("СпособДоставки", ЭлементыФормы.СпособыДоставки.Значение);	
			Иначе	
				ЗаполнитьТабОтбора();
				ВосстановитьПометки();
				
				ЭлементыФормы.ТабОтбора.ОбновитьСтроки();
				ОбновитьВесСвободно();
				
				Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	ТЗ = ТабОтбора.Скопировать();
	
	СтруктураОтбора1 = Новый Структура("НомерМашины", "");
	НайдСтроки = ДоставкаПокупателю.НайтиСтроки(СтруктураОтбора1);
	Для Каждого Стр Из НайдСтроки Цикл
		НовСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;	
	
	НайдСтроки = ТЗ.НайтиСтроки(СтруктураОтбора);
	Для Каждого Стр Из НайдСтроки Цикл
		НовСтр = ТабОтбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;	
	
	ВосстановитьПометки();
	
	ЭлементыФормы.ТабОтбора.ОбновитьСтроки();
	ОбновитьВесСвободно();
КонецПроцедуры	

Функция УстановленКонтрагентДляОтбора() 
	ВыбранныйЭлемент = ЭлементыФормы.Контрагенты.Значение;
	Если Не ЗначениеЗаполнено(ВыбранныйЭлемент)Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции	

Функция УстановленСпособДоставкиДляОтбора()
	ВыбранныйЭлемент = ЭлементыФормы.СпособыДоставки.Значение;
	Если Не ЗначениеЗаполнено(ВыбранныйЭлемент)Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции

Процедура ТабОтбораПриИзмененииФлажка(Элемент, Колонка)
	ОбновитьВесСвободно();
КонецПроцедуры

Процедура ОбновитьВесСвободно()
	СтруктураОтбора = Новый Структура("Пометка", Истина);
	НайдСтроки = ТабОтбора.НайтиСтроки(СтруктураОтбора);
	Вес = 0;
	флВидимостьВес = Ложь;
	
	Для Каждого Стр Из НайдСтроки Цикл
		Вес = Вес + Стр.Вес; 
		флВидимостьВес = Истина;
	КонецЦикла;	
	
	
	НайдСтр = ТабМашин.Найти(Истина,"Пометка"); 
	Если НайдСтр = Неопределено Тогда
		Свободно = 0;
		флВидимостьСвободно = Ложь;
	Иначе
		Свободно = НайдСтр.Грузоподъемность - НайдСтр.Вес - Вес;
		УстановитьЦветДляСвободно();
	    флВидимостьСвободно = Истина;
	КонецЕсли;	
	
	УстановитьВидимость(флВидимостьВес, флВидимостьСвободно);
	
КонецПроцедуры	

Процедура ТабМашинПриИзмененииФлажка(Элемент, Колонка)
	ТекСтр = Элемент.ТекущаяСтрока;
	
	Если ТекСтр.Пометка Тогда
		СтруктураОтбора = Новый Структура("Пометка",Истина);
	    НайдСтроки = ТабМашин.НайтиСтроки(СтруктураОтбора);
		
		Если НайдСтроки.Количество() >= 2 Тогда
		  Для каждого Стр Из НайдСтроки Цикл
		    Стр.Пометка = Ложь;
	      КонецЦикла;	
		  ТекСтр.Пометка = Истина;	
	    КонецЕсли;	
		
		Свободно = ТекСтр.Грузоподъемность - ТекСтр.Вес - Вес;
		УстановитьЦветДляСвободно();
		УстановитьВидимость(,Истина);
	Иначе
		Свободно = 0;
		УстановитьВидимость(,Ложь);
	КонецЕсли;	
	
	УстановитьДоступность(ТекСтр.Пометка);
	
КонецПроцедуры

Процедура УстановитьЦветДляСвободно()
	Если Свободно < 0 Тогда
	   ЭлементыФормы.НадписьСвободно.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	   ЭлементыФормы.Свободно.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
    Иначе
	   ЭлементыФормы.НадписьСвободно.ЦветТекста = ЦветаСтиля.ТекстИнформационнойНадписи;
	   ЭлементыФормы.Свободно.ЦветТекста = ЦветаСтиля.ТекстИнформационнойНадписи;
	КонецЕсли;
КонецПроцедуры

Процедура КонтрагентыОчистка(Элемент, СтандартнаяОбработка)
	НаложитьОтборВТабОтбора();
КонецПроцедуры

Процедура СпособыДоставкиПриИзменении(Элемент)
	НаложитьОтборВТабОтбора();
КонецПроцедуры

Процедура СпособыДоставкиОчистка(Элемент, СтандартнаяОбработка)
	НаложитьОтборВТабОтбора();	
КонецПроцедуры

Процедура КоманднаяПанель1Действие1(Кнопка)
	Для Каждого Стр Из ТабОтбора Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
	ОбновитьВесСвободно();
КонецПроцедуры

Процедура КоманднаяПанель1Действие2(Кнопка)
	Для Каждого Стр Из ТабОтбора Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	ОбновитьВесСвободно();
КонецПроцедуры

мТабСинх = Новый ТаблицаЗначений;
мТабСинх.Колонки.Добавить("Контрагент");
мТабСинх.Колонки.Добавить("АдресДоставки");
мТабСинх.Колонки.Добавить("Пометка");
