Перем ПерваяКолонка;
Перем КоличествоДоплат;
Перем КоличествоУдержаний;
Перем ИтогиГруппы;
Перем Итоги;

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);

	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон  = НП.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1Сформировать(Кнопка)
	
	Если Не ЗначениеЗаполнено(ДатаНач)
		Или Не ЗначениеЗаполнено(ДатаКон)
		Или Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Заполните организацию и период отчёта.");
		Возврат;
	КонецЕсли;
	
	Табель = ПолучитьТабель();
	Начисления = ПолучитьНачисления();
	ТЗ = СформироватьТаблицу(Табель, Начисления);
	ВывестиТаблицу(ТЗ);
	
КонецПроцедуры

Процедура ВывестиТаблицу(ТЗ)
	
	Макет = ПолучитьМакет("ПечатьТабеля");
	
	ЭлементыФормы.Отчет.Очистить();
	
	Итоги = Новый Массив();
	
	// шапка отчёта
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.ДатаНач = ДатаНач;
	Область.Параметры.ДатаКон = ДатаКон;
	Область.Параметры.Организация = Организация;
	ЭлементыФормы.Отчет.Вывести(Область);

	// шапка таблицы
	ВывестиШапкуТаблицы(Макет, ТЗ);
	
	// тело таблицы
	ТипСмен = Неопределено;
	//Группа = "";
	НПП = 1;
	Для Каждого Строка Из ТЗ Цикл
		//Если Группа <> Строка.Группа Тогда
		//	Группа = Строка.Группа;
		//	ТипСмен = Строка.ТипСмен;
		//	Если Строка.ТипСмен Тогда
		//		ВывестиГруппу12(Макет, Строка);
		//		НПП = 1;
		//	Иначе
		//		ВывестиГруппу8(Макет, Строка);
		//		НПП = 1;
		//	КонецЕсли;
		//Иначе
		Если ТипСмен = Неопределено
			И Строка.ТипСмен Тогда
			ТипСмен = Истина;
			ВывестиГруппу12(Макет, Строка);
			НПП = 1;
		ИначеЕсли ТипСмен = Неопределено
			И Не Строка.ТипСмен Тогда
			ТипСмен = Ложь;
			ВывестиГруппу8(Макет, Строка);
			НПП = 1;
		ИначеЕсли Строка.ТипСмен
			И Не ТипСмен Тогда
			// группа 12-часовых смен
			//Если ТипСмен <> Неопределено Тогда
				ВывестиИтог8(Макет);
			//КонецЕсли;
			ТипСмен = Истина;
			ВывестиГруппу12(Макет, Строка);
			НПП = 1;
		ИначеЕсли Не Строка.ТипСмен
			И ТипСмен Тогда
			//Если ТипСмен <> Неопределено Тогда
				ВывестиИтог12(Макет);
			//КонецЕсли;
			ТипСмен = Ложь;
			ВывестиГруппу8(Макет, Строка);
			НПП = 1;
		КонецЕсли;
		
		ВывестиСтроку(Макет, Строка, НПП, ТЗ);
		
		НПП = НПП + 1;
	КонецЦикла;
	
	Если ТипСмен Тогда
		ВывестиИтог12(Макет);
	ИначеЕсли ТипСмен = Ложь Тогда
		ВывестиИтог8(Макет);
	КонецЕсли;
	
	ВывестиИтог(Макет);
	
КонецПроцедуры

Процедура ВывестиШапкуТаблицы(Макет, ТЗ)
	
	// начало
	Область = Макет.ПолучитьОбласть("ШапкаНачало");
	ЭлементыФормы.Отчет.Вывести(Область);
	
	// день
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	Область = Макет.ПолучитьОбласть("ШапкаДень");
	Для Ном = 1 По КоличествоДней Цикл
		ТекущаяДата = ДатаНач + (Ном - 1) * 86400;
		Область.Параметры.ДеньНедели = ТекущаяДата;
		Область.Параметры.ЧислоДень = ТекущаяДата;
		Область.Параметры.ЧислоНочь = Строка(Формат(ТекущаяДата, "ДФ=dd")) + "-" + Строка(Формат(КонецДня(ТекущаяДата) + 1, "ДФ=dd"));
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	Если КоличествоДней > 0 Тогда
		ЭлементыФормы.Отчет.Область("R14C4:R14C" + Строка(3 + КоличествоДней * 2)).Объединить();
	КонецЕсли;
	
	// середина
	Область = Макет.ПолучитьОбласть("ШапкаСередина");
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	НомерКолонки = 8;
	Область = Макет.ПолучитьОбласть("ШапкаДоплаты");
	Для Ном = 1 По КоличествоДоплат Цикл
		Колонка = ТЗ.Колонки.Найти("Доплата" + Строка(Ном));
		Область.Параметры.Доплата = Колонка.Заголовок;
		Область.Параметры.Текст = "Доплаты";
		Область.Параметры.Колонка = НомерКолонки;
		НомерКолонки = НомерКолонки + 1;
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	Если КоличествоДоплат > 0 Тогда
		ПерваяДоплата = 7 + КоличествоДней * 2;
		ЭлементыФормы.Отчет.Область("R10C" + Строка(ПерваяДоплата) + ":R11C" + Строка(ПерваяДоплата + КоличествоДоплат - 1)).Объединить();
	КонецЕсли;
	
	// всего
	Область = Макет.ПолучитьОбласть("ШапкаВсего");
	Область.Параметры.Колонка = НомерКолонки;
	НомерКолонки = НомерКолонки + 1;
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ШапкаУдержания");
	Для Ном = 1 По КоличествоУдержаний Цикл
		Колонка = ТЗ.Колонки.Найти("Удержание" + Строка(Ном));
		Область.Параметры.Удержание = Колонка.Заголовок;
		Область.Параметры.Текст = "Удержания";
		Область.Параметры.Колонка = НомерКолонки;
		НомерКолонки = НомерКолонки + 1;
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	Если КоличествоУдержаний > 0 Тогда
		ПервоеУдержание = 8 + КоличествоДней * 2 + КоличествоДоплат;
		ЭлементыФормы.Отчет.Область("R10C" + Строка(ПервоеУдержание) + ":R11C" + Строка(ПервоеУдержание + КоличествоУдержаний - 1)).Объединить();
	КонецЕсли;
	
	// конец
	Область = Макет.ПолучитьОбласть("ШапкаКонец");
	Область.Параметры.Колонка1 = НомерКолонки;
	Область.Параметры.Колонка2 = НомерКолонки + 1;
	Область.Параметры.Колонка3 = НомерКолонки + 2;
	ЭлементыФормы.Отчет.Присоединить(Область);
	
КонецПроцедуры	

Процедура ВывестиСтроку(Макет, Строка, НПП, ТЗ)
	
	// начало
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаНачало"), Макет.ПолучитьОбласть("СтрокаНачало8"));
	Область.Параметры.НомерСтроки = НПП;
	Область.Параметры.Работник = Строка.Работник;
	Область.Параметры.Должность = Строка.Должность;
	Область.Параметры.СтоимостьСмены = Строка.СтоимостьСмены;
	ЭлементыФормы.Отчет.Вывести(Область);
	
	// день
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаДень"), Макет.ПолучитьОбласть("СтрокаДень8"));
	Для Ном = 1 По КоличествоДней Цикл
		Область.Параметры.День = Строка.Получить(ПерваяКолонка + Ном * 2 - 2);
		Если Строка.ТипСмен Тогда
			Область.Параметры.Ночь = Строка.Получить(ПерваяКолонка + Ном * 2 - 1);
			ИтогиГруппы[Ном * 2 - 2] = ИтогиГруппы[Ном * 2 - 2] + ?(Область.Параметры.День = Неопределено, 0, Область.Параметры.День);
			ИтогиГруппы[Ном * 2 - 1] = ИтогиГруппы[Ном * 2 - 1] + ?(Область.Параметры.Ночь = Неопределено, 0, Область.Параметры.Ночь);
		Иначе
			ИтогиГруппы[Ном - 1] = ИтогиГруппы[Ном - 1] + ?(Область.Параметры.День = Неопределено, 0, Область.Параметры.День);
		КонецЕсли;
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	ИндексИтогов = ?(Строка.ТипСмен, КоличествоДней * 2, КоличествоДней);
	
	// середина
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаСередина"), Макет.ПолучитьОбласть("СтрокаСередина8"));
	Область.Параметры.КоличествоСмен = Строка.КоличествоСмен;
	Область.Параметры.СтоимостьСмен = Строка.СтоимостьСмен;
	Область.Параметры.Сальдо = Строка.Сальдо;
	
	ИтогиГруппы[ИндексИтогов] = ИтогиГруппы[ИндексИтогов] + ?(Область.Параметры.КоличествоСмен = Неопределено, 0, Область.Параметры.КоличествоСмен);
	ИтогиГруппы[ИндексИтогов + 1] = ИтогиГруппы[ИндексИтогов + 1] + ?(Область.Параметры.СтоимостьСмен = Неопределено, 0, Область.Параметры.СтоимостьСмен);
	ИтогиГруппы[ИндексИтогов + 2] = ИтогиГруппы[ИндексИтогов + 2] + ?(Область.Параметры.Сальдо = Неопределено, 0, Область.Параметры.Сальдо);

	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаДоплаты"), Макет.ПолучитьОбласть("СтрокаДоплаты8"));
	Для Ном = 1 По КоличествоДоплат Цикл
		Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Доплата" + Строка(Ном)));
		Область.Параметры.Доплата = Строка.Получить(Индекс);
		
		ИтогиГруппы[ИндексИтогов + 2 + Ном] = ИтогиГруппы[ИндексИтогов + 2 + Ном] + ?(Область.Параметры.Доплата = Неопределено, 0, Область.Параметры.Доплата);
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаВсего"), Макет.ПолучитьОбласть("СтрокаВсего8"));
	Область.Параметры.ВсегоНачислено = Строка.ВсегоНачислено;
	
	ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1] = ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1] + ?(Область.Параметры.ВсегоНачислено = Неопределено, 0, Область.Параметры.ВсегоНачислено);

	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаУдержания"), Макет.ПолучитьОбласть("СтрокаУдержания8"));
	Для Ном = 1 По КоличествоУдержаний Цикл
		Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Удержание" + Строка(Ном)));
		Область.Параметры.Удержание = Строка.Получить(Индекс);
		
		ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + Ном] = ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + Ном] + ?(Область.Параметры.Удержание = Неопределено, 0, Область.Параметры.Удержание);
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = ?(Строка.ТипСмен, Макет.ПолучитьОбласть("СтрокаКонец"), Макет.ПолучитьОбласть("СтрокаКонец8"));
	Область.Параметры.ВсегоКУплате = Строка.ВсегоКУплате;
	Область.Параметры.Выплачено = Строка.Выплачено;
	Область.Параметры.ДолгЗаПредприятием = Строка.ДолгЗаПредприятием;
	
	ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] = ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] + ?(Область.Параметры.ВсегоКУплате = Неопределено, 0, Область.Параметры.ВсегоКУплате);
	ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] = ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] + ?(Область.Параметры.Выплачено = Неопределено, 0, Область.Параметры.Выплачено);
	ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] = ИтогиГруппы[ИндексИтогов + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] + ?(Область.Параметры.ДолгЗаПредприятием = Неопределено, 0, Область.Параметры.ДолгЗаПредприятием);

	ЭлементыФормы.Отчет.Присоединить(Область);
			
КонецПроцедуры

Процедура ВывестиГруппу12(Макет, Строка)
	
	ИтогиГруппы = Новый Массив();
	
	// начало
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыНачало");
	//Область.Параметры.Заголовок = Строка(Строка.Группа) + " - смены 12 час";
	Область.Параметры.Заголовок = "Смены по 12 час";
	ЭлементыФормы.Отчет.Вывести(Область);
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	
	// день
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыДень");
	Для Ном = 1 По КоличествоДней Цикл
		ИтогиГруппы.Добавить(0);
		ИтогиГруппы.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// середина
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыСередина");
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыДоплаты");
	Для Ном = 1 По КоличествоДоплат Цикл
		ИтогиГруппы.Добавить(0);
		Итоги.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыВсего");
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыУдержания");
	Для Ном = 1 По КоличествоУдержаний Цикл
		ИтогиГруппы.Добавить(0);
		Итоги.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыКонец");
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
			
КонецПроцедуры

Процедура ВывестиГруппу8(Макет, Строка)
	
	ИтогиГруппы = Новый Массив();
		
	// начало
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыНачало8");
	//Область.Параметры.Заголовок = Строка(Строка.Группа) + " - смены 8 час";
	Область.Параметры.Заголовок = "Смены по 8 час";
	ЭлементыФормы.Отчет.Вывести(Область);
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	
	// день
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыДень8");
	Для Ном = 1 По КоличествоДней Цикл
		ИтогиГруппы.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// середина
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыСередина8");
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыДоплаты8");
	Для Ном = 1 По КоличествоДоплат Цикл
		ИтогиГруппы.Добавить(0);
		Итоги.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыВсего8");
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыУдержания8");
	Для Ном = 1 По КоличествоУдержаний Цикл
		ИтогиГруппы.Добавить(0);
		Итоги.Добавить(0);
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = Макет.ПолучитьОбласть("ЗаголовокГруппыКонец8");
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	ИтогиГруппы.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	Итоги.Добавить(0);
	ЭлементыФормы.Отчет.Присоединить(Область);
			
КонецПроцедуры

Процедура ВывестиИтог12(Макет)
	
	// начало
	Область = Макет.ПолучитьОбласть("ИтогГруппыНачало");
	ЭлементыФормы.Отчет.Вывести(Область);
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	
	// день
	Область = Макет.ПолучитьОбласть("ИтогГруппыДень");
	Для Ном = 1 По КоличествоДней Цикл
		Область.Параметры.День = ИтогиГруппы[Ном * 2 - 2];
		Область.Параметры.Ночь = ИтогиГруппы[Ном * 2 - 1];
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// середина
	Область = Макет.ПолучитьОбласть("ИтогГруппыСередина");
	Область.Параметры.КоличествоСмен = ИтогиГруппы[КоличествоДней * 2];
	Область.Параметры.СтоимостьСмен = ИтогиГруппы[КоличествоДней * 2 + 1];
	Область.Параметры.Сальдо = ИтогиГруппы[КоличествоДней * 2 + 2];
	
	Итоги[0] = Итоги[0] + ИтогиГруппы[КоличествоДней * 2];
	Итоги[1] = Итоги[1] + ИтогиГруппы[КоличествоДней * 2 + 1];
	Итоги[2] = Итоги[2] + ИтогиГруппы[КоличествоДней * 2 + 2];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = Макет.ПолучитьОбласть("ИтогГруппыДоплаты");
	Для Ном = 1 По КоличествоДоплат Цикл
		Область.Параметры.Доплата = ИтогиГруппы[КоличествоДней * 2 + 2 + Ном];
		
		Итоги[2 + Ном] = Итоги[2 + Ном] + ИтогиГруппы[КоличествоДней * 2 + 2 + Ном];
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = Макет.ПолучитьОбласть("ИтогГруппыВсего");
	Область.Параметры.ВсегоНачислено = ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1];
		
	Итоги[2 + КоличествоДоплат + 1] = Итоги[2 + КоличествоДоплат + 1] + ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ИтогГруппыУдержания");
	Для Ном = 1 По КоличествоУдержаний Цикл
		Область.Параметры.Удержание = ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + Ном];
		
		Итоги[2 + КоличествоДоплат + 1 + Ном] = Итоги[2 + КоличествоДоплат + 1 + Ном] + ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + Ном];
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = Макет.ПолучитьОбласть("ИтогГруппыКонец");
	Область.Параметры.ВсегоКУплате = ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1];
	Область.Параметры.Выплачено = ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2];
	Область.Параметры.ДолгЗаПредприятием = ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3];
		
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] + ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1];
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] + ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2];
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] + ИтогиГруппы[КоличествоДней * 2 + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
КонецПроцедуры

Процедура ВывестиИтог8(Макет)
	
	// начало
	Область = Макет.ПолучитьОбласть("ИтогГруппыНачало8");
	ЭлементыФормы.Отчет.Вывести(Область);
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	
	// день
	Область = Макет.ПолучитьОбласть("ИтогГруппыДень8");
	Для Ном = 1 По КоличествоДней Цикл
		Область.Параметры.День = ИтогиГруппы[Ном - 1];
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// середина
	Область = Макет.ПолучитьОбласть("ИтогГруппыСередина8");
	Область.Параметры.КоличествоСмен = ИтогиГруппы[КоличествоДней];
	Область.Параметры.СтоимостьСмен = ИтогиГруппы[КоличествоДней + 1];
	Область.Параметры.Сальдо = ИтогиГруппы[КоличествоДней + 2];
	
	Итоги[0] = Итоги[0] + ИтогиГруппы[КоличествоДней];
	Итоги[1] = Итоги[1] + ИтогиГруппы[КоличествоДней + 1];
	Итоги[2] = Итоги[2] + ИтогиГруппы[КоличествоДней + 2];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = Макет.ПолучитьОбласть("ИтогГруппыДоплаты8");
	Для Ном = 1 По КоличествоДоплат Цикл
		Область.Параметры.Доплата = ИтогиГруппы[КоличествоДней + 2 + Ном];
		
		Итоги[2 + Ном] = Итоги[2 + Ном] + ИтогиГруппы[КоличествоДней + 2 + Ном];
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = Макет.ПолучитьОбласть("ИтогГруппыВсего8");
	Область.Параметры.ВсегоНачислено = ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1];
	
	Итоги[2 + КоличествоДоплат + 1] = Итоги[2 + КоличествоДоплат + 1] + ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ИтогГруппыУдержания8");
	Для Ном = 1 По КоличествоУдержаний Цикл
		Область.Параметры.Удержание = ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + Ном];
		
		Итоги[2 + КоличествоДоплат + 1 + Ном] = Итоги[2 + КоличествоДоплат + 1 + Ном] + ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + Ном];
		
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = Макет.ПолучитьОбласть("ИтогГруппыКонец8");
	Область.Параметры.ВсегоКУплате = ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1];
	Область.Параметры.Выплачено = ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2];
	Область.Параметры.ДолгЗаПредприятием = ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3];
	
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1] + ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1];
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2] + ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2];
	Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3] + ИтогиГруппы[КоличествоДней + 2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3];
	
	ЭлементыФормы.Отчет.Присоединить(Область);
	
КонецПроцедуры

Процедура ВывестиИтог(Макет)
	
	// начало
	Область = Макет.ПолучитьОбласть("ИтогНачало");
	ЭлементыФормы.Отчет.Вывести(Область);
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	
	// день
	Область = Макет.ПолучитьОбласть("ИтогДень");
	Для Ном = 1 По КоличествоДней Цикл
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// середина
	Область = Макет.ПолучитьОбласть("ИтогСередина");
	Область.Параметры.КоличествоСмен = Итоги[0];
	Область.Параметры.СтоимостьСмен = Итоги[1];
	Область.Параметры.Сальдо = Итоги[2];
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// доплаты
	Область = Макет.ПолучитьОбласть("ИтогДоплаты");
	Для Ном = 1 По КоличествоДоплат Цикл
		Область.Параметры.Доплата = Итоги[2 + Ном];
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// всего
	Область = Макет.ПолучитьОбласть("ИтогВсего");
	Область.Параметры.ВсегоНачислено = Итоги[2 + КоличествоДоплат + 1];
	ЭлементыФормы.Отчет.Присоединить(Область);
	
	// удержания
	Область = Макет.ПолучитьОбласть("ИтогУдержания");
	Для Ном = 1 По КоличествоУдержаний Цикл
		Область.Параметры.Удержание = Итоги[2 + КоличествоДоплат + 1 + Ном];
		ЭлементыФормы.Отчет.Присоединить(Область);
	КонецЦикла;
	
	// конец
	Область = Макет.ПолучитьОбласть("ИтогКонец");
	Область.Параметры.ВсегоКУплате = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 1];
	Область.Параметры.Выплачено = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 2];
	Область.Параметры.ДолгЗаПредприятием = Итоги[2 + КоличествоДоплат + 1 + КоличествоУдержаний + 3];
	ЭлементыФормы.Отчет.Присоединить(Область);
	
КонецПроцедуры

Функция СформироватьТаблицу(Табель, Начисления)
	
	ТЗ = Новый ТаблицаЗначений;
	
	МСтрока = Новый Массив();
	МСтрока.Добавить(Тип("Строка"));
	ОТСтрока = Новый ОписаниеТипов(МСтрока);
	МЧисло = Новый Массив();
	МЧисло.Добавить(Тип("Строка"));
	ОТЧисло = Новый ОписаниеТипов(МЧисло);
	
	КоличествоДней = (ДатаКон - ДатаНач) / 86400 + 1;
	
	// формируем колонки
	//ТЗ.Колонки.Добавить("НомерСтроки");
	//ТЗ.Колонки.Добавить("ПриоритетГруппы");
	ТЗ.Колонки.Добавить("ТипСмен");
	ТЗ.Колонки.Добавить("Работник");
	ТЗ.Колонки.Добавить("Должность");
	//ТЗ.Колонки.Добавить("Группа");
	ТЗ.Колонки.Добавить("СтоимостьСмены");
	
	ПерваяКолонка = 4; // нумерация с нуля
	Для Ном = 1 По КоличествоДней Цикл
		ТЗ.Колонки.Добавить("День" + Строка(Ном));
		ТЗ.Колонки.Добавить("Ночь" + Строка(Ном));
	КонецЦикла;
	
	ТЗ.Колонки.Добавить("КоличествоСмен");
	ТЗ.Колонки.Добавить("СтоимостьСмен");
	ТЗ.Колонки.Добавить("Сальдо");
	
	МассивДоплат = ПолучитьДоплаты(Начисления.ВыгрузитьКолонку("ТипНачисления"));
	Ном = 1;
	Для Каждого Доплата Из МассивДоплат Цикл
		ТЗ.Колонки.Добавить("Доплата" + Строка(Ном), , Доплата.Наименование);
		Ном = Ном + 1;
	КонецЦикла;
	КоличествоДоплат = Ном - 1;
	
	ТЗ.Колонки.Добавить("ВсегоНачислено");
	
	МассивУдержаний = ПолучитьУдержания(Начисления.ВыгрузитьКолонку("ТипНачисления"));
	Ном = 1;
	Для Каждого Удержание Из МассивУдержаний Цикл
		ТЗ.Колонки.Добавить("Удержание" + Строка(Ном), , Удержание.Наименование);
		Ном = Ном + 1;
	КонецЦикла;
	КоличествоУдержаний = Ном - 1;
	
	ТЗ.Колонки.Добавить("ВсегоКУплате");
	ТЗ.Колонки.Добавить("Выплачено");
	ТЗ.Колонки.Добавить("ДолгЗаПредприятием");
	
	// Формируем тело таблицы
	МассивДолжностей = Новый Массив();
	МассивДолжностей.Добавить(Справочники.ДолжностиОрганизаций.НайтиПоНаименованию("Рабочий линии"));
	МассивДолжностей.Добавить(Справочники.ДолжностиОрганизаций.НайтиПоНаименованию("Грузчик"));
	// Добавляем 12-часовые смены
	ПараметрыОтбора = Новый Структура("ТипСмен", Перечисления.ИТС_ТипыСмен.Час12);
	МассивСтрок = Табель.НайтиСтроки(ПараметрыОтбора);
	ТЗ = ДобавитьТелоТаблицы(МассивСтрок, ТЗ, МассивДолжностей, Табель, Начисления, Истина);
	
	// Добавляем 8-часовые смены
	ПараметрыОтбора = Новый Структура("ТипСмен", Перечисления.ИТС_ТипыСмен.Час8);
	МассивСтрок = Табель.НайтиСтроки(ПараметрыОтбора);
	ТЗ = ДобавитьТелоТаблицы(МассивСтрок, ТЗ, МассивДолжностей, Табель, Начисления, Ложь);
	
	ТЗ.Сортировать("ТипСмен Убыв, Должность Возр, Работник Возр");
	ТЗ = ОбсчитатьТаблицу(ТЗ);
	
	Возврат ТЗ;
	
КонецФункции

Функция ДобавитьТелоТаблицы(МассивСтрок, ТЗ, МассивДолжностей, Табель, Начисления, ТипСмен)
	
	Для Каждого Строка Из МассивСтрок Цикл
		Работник = ТЗ.Найти(Строка.Работник, "Работник");
		Если Работник = Неопределено Тогда
			Работник = ТЗ.Добавить();
		КонецЕсли;
		
		// табель
		Работник.ТипСмен = ТипСмен;
		Работник.Работник = Строка.Работник;
		//СтрГруппа = МассивДолжностей.Найти(Строка.Работник.Должность);
		//Если СтрГруппа = Неопределено Тогда
		//	Работник.Группа = "Прочие";
		//	Работник.ПриоритетГруппы = 100;
		//Иначе
		//	Работник.Группа = МассивДолжностей[СтрГруппа].Наименование;
		//	Работник.ПриоритетГруппы = СтрГруппа;
		//КонецЕсли;
		Работник.Должность = Строка.Работник.Должность;
		НомерДня = Цел((Строка.Дата - ДатаНач) / 86400 + 1);
		Индекс = ?(Строка.ДневнаяСмена, ТЗ.Колонки.Найти("День" + Строка(НомерДня)), ТЗ.Колонки.Найти("Ночь" + Строка(НомерДня)));
		Работник.Установить(ТЗ.Колонки.Индекс(Индекс), 1);
		
		// начисления
		ПараметрыОтбора = Новый Структура("Работник, ТипНачисления", Строка.Работник, Справочники.ИТС_ТипыНачислений.НачисленоЗаСмены);
		МассивНачислений = Начисления.НайтиСтроки(ПараметрыОтбора);
		СтоимостьСмен = 0;
		Для Каждого Смена Из МассивНачислений Цикл
			СтоимостьСмен = СтоимостьСмен + Смена.СуммаОборот;
		КонецЦикла;
		Работник.СтоимостьСмен = СтоимостьСмен;
		
		// сальдо
		ПараметрыОтбора = Новый Структура("Работник", Строка.Работник);
		МассивНачислений = Начисления.НайтиСтроки(ПараметрыОтбора);
		Работник.Сальдо = ?(МассивНачислений.Количество() > 0, МассивНачислений[0].СуммаОстаток, 0);
		
		// доплаты
		ПараметрыОтбора = Новый Структура("Работник", Строка.Работник);
		МассивНачислений = Начисления.НайтиСтроки(ПараметрыОтбора);
		МассивДоплат = ПолучитьДоплаты(Начисления.ВыгрузитьКолонку("ТипНачисления"));
		Для Каждого Начисление Из МассивНачислений Цикл
			С = МассивДоплат.Найти(Начисление.ТипНачисления);
			Если С <> Неопределено Тогда
				Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Доплата" + Строка(С + 1)));
				Доплата = 0;
				ПараметрыОтбора = Новый Структура("Работник, ТипНачисления", Строка.Работник, Начисление.ТипНачисления);
				МассивНач = Начисления.НайтиСтроки(ПараметрыОтбора);
				Для Каждого Нач Из МассивНач Цикл
					Доплата = Доплата + Нач.СуммаОборот;
				КонецЦикла;
				Работник.Установить(Индекс, Доплата);
			КонецЕсли;
		КонецЦикла;
		
		// стоимость смен
		Работник.СтоимостьСмен = СтоимостьСмен;
		
		// удержания
		ПараметрыОтбора = Новый Структура("Работник", Строка.Работник);
		МассивНачислений = Начисления.НайтиСтроки(ПараметрыОтбора);
		МассивУдержаний = ПолучитьУдержания(Начисления.ВыгрузитьКолонку("ТипНачисления"));
		Для Каждого Начисление Из МассивНачислений Цикл
			С = МассивУдержаний.Найти(Начисление.ТипНачисления);
			Если С <> Неопределено Тогда
				Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Удержание" + Строка(С + 1)));
				Удержание = 0;
				ПараметрыОтбора = Новый Структура("Работник, ТипНачисления", Строка.Работник, Начисление.ТипНачисления);
				МассивНач = Начисления.НайтиСтроки(ПараметрыОтбора);
				Для Каждого Нач Из МассивНач Цикл
					Удержание = Удержание + Нач.СуммаОборот;
				КонецЦикла;
				Работник.Установить(Индекс, Удержание);
			КонецЕсли;
		КонецЦикла;
		
		// выплачено
		ПараметрыОтбора = Новый Структура("Работник, ТипНачисления", Строка.Работник, Справочники.ИТС_ТипыНачислений.Выплачено);
		МассивНачислений = Начисления.НайтиСтроки(ПараметрыОтбора);
		Выплачено = 0;
		Для Каждого Выплата Из МассивНачислений Цикл
			Выплачено = Выплачено + Выплата.СуммаОборот;
		КонецЦикла;
		Работник.Выплачено = Выплачено;
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

Функция ОбсчитатьТаблицу(ТЗ)
	
	КоличествоДней = Цел((ДатаКон - ДатаНач) / 86400 + 1);
	Для Каждого Строка Из ТЗ Цикл
		// количество смен
		КоличествоСмен = 0;
		Для Ном = 1 По КоличествоДней * 2 Цикл
			Значение = Строка.Получить(ПерваяКолонка + Ном - 1);
			КоличествоСмен = КоличествоСмен + ?(Значение = Неопределено, 0, 1);
		КонецЦикла;
		Строка.КоличествоСмен = КоличествоСмен;
		
		Строка.СтоимостьСмены = Формат(Строка.СтоимостьСмен / КоличествоСмен, "ЧДЦ=2");
		
		// сумма доплат
		Доплаты = 0;
		Для Ном = 1 По КоличествоДоплат Цикл
			Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Доплата" + Строка(Ном)));
			Значение = Строка.Получить(Индекс);
			Доплаты = Доплаты + ?(Значение = Неопределено, 0, Значение);
		КонецЦикла;
		
		// сумма удержаний
		Удержания = 0;
		Для Ном = 1 По КоличествоУдержаний Цикл
			Индекс = ТЗ.Колонки.Индекс(ТЗ.Колонки.Найти("Удержание" + Строка(Ном)));
			Значение = Строка.Получить(Индекс);
			Удержания = Удержания + ?(Значение = Неопределено, 0, Значение);
		КонецЦикла;
		
 		Строка.ВсегоНачислено = Строка.СтоимостьСмен + Доплаты;
		
		Строка.ВсегоКУплате = Строка.ВсегоНачислено - Удержания;
		
		Строка.ДолгЗаПредприятием = Строка.ВсегоКУплате - Строка.Выплачено - Строка.Сальдо;
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

Функция ПолучитьДоплаты(Начисления)
	
	Доплаты = Новый Массив;
	Для Каждого Начисление Из Начисления Цикл
		Если Доплаты.Найти(Начисление) = Неопределено
			И Начисление.ПриходРасход = Перечисления.ИТС_ВидыНачислений.Начисление
			И Начисление <> Справочники.ИТС_ТипыНачислений.НачисленоЗаСмены Тогда
			Доплаты.Добавить(Начисление);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Доплаты;
	
КонецФункции

Функция ПолучитьУдержания(Начисления)
	
	Удержания = Новый Массив;
	Для Каждого Начисление Из Начисления Цикл
		Если Удержания.Найти(Начисление) = Неопределено
			И Начисление.ПриходРасход = Перечисления.ИТС_ВидыНачислений.Удержание
			И Начисление <> Справочники.ИТС_ТипыНачислений.Выплачено Тогда
			Удержания.Добавить(Начисление);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Удержания;
	
КонецФункции

Функция ПолучитьТабель()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИТС_ТабельУРВ.Дата,
	                      |	ИТС_ТабельУРВ.Работник,
	                      |	ИТС_ТабельУРВ.ТипСмен,
	                      |	ИТС_ТабельУРВ.ДневнаяСмена
	                      |ИЗ
	                      |	РегистрСведений.ИТС_ТабельУРВ КАК ИТС_ТабельУРВ
	                      |ГДЕ
	                      |	ИТС_ТабельУРВ.Дата >= &ДатаНач
	                      |	И ИТС_ТабельУРВ.Дата <= &ДатаКон
	                      |	И ИТС_ТабельУРВ.Организация = &Организация");
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Организация", Организация);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьНачисления()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИТС_НачисленияОбороты.Работник,
	                      |	ИТС_НачисленияОбороты.ТипНачисления,
	                      |	ИТС_НачисленияОбороты.СуммаОборот,
	                      |	ЕстьNULL(ИТС_ВзаиморасчетыСРаботникамиОстатки.СуммаОстаток, 0) КАК СуммаОстаток
	                      |ИЗ
	                      |	РегистрНакопления.ИТС_Начисления.Обороты(&ДатаНач, &ДатаКон, День, Организация = &Организация) КАК ИТС_НачисленияОбороты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИТС_ВзаиморасчетыСРаботниками.Остатки(&ДатаНач, Организация = &Организация) КАК ИТС_ВзаиморасчетыСРаботникамиОстатки
	                      |		ПО ИТС_НачисленияОбороты.Работник = ИТС_ВзаиморасчетыСРаботникамиОстатки.Работник
	                      |			И ИТС_НачисленияОбороты.Организация = ИТС_ВзаиморасчетыСРаботникамиОстатки.Организация");
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Организация", Организация);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
