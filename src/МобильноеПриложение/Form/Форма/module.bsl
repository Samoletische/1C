
Процедура ПриОткрытии()
	
	// задаём значения начальных переменных
	ПутьКФайлам = "C:\mobApp";
	СтрокаСоединения = "http://46.233.221.194:80";
	СтартоваяСтраница = СтрЗаменить(ПутьКФайлам, "\", "/") + "/index.html";
	
	// устанавливаем соединение с сервером
	Сообщить("Соединение с сервером...");
	Если ВыполнитьСоединение() Тогда
		Сообщить("Соединение с сервером выполнено");
		// проверка соединения
		Если ВыполнитьHTTPЗапрос("ping", "PingOK") Тогда
			Сообщить("Запрос версии сервера...");
			// запрос версии с сервера
			ВерсияСервера = ВыполнитьHTTPЗапрос("getVer");
			Сообщить("Номер версии на сервере: " + ВерсияСервера);
			// запрос версии локально
			ВерсияЛокальная = Новый ЧтениеТекста(ПутьКФайлам + "\ver.txt", КодировкаТекста.UTF8);
			// если версия не совпадает с текущей, запрос пользователю на обновление
			Если ВерсияСервера <> ВерсияЛокальная Тогда
				Ответ = Вопрос("На сервере имеется новая версия приложения. Установить сейчас?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
				Если Ответ = КодВозвратаДиалога.Да Тогда
					// процесс обновления
					ОбновитьВерсию();
				КонецЕсли;
			КонецЕсли;
			// запуск начальной страницы
			ЭлементыФормы.ХТМЛ.Перейти(СтартоваяСтраница);
		Иначе
			Сообщить("Что-то не так с серверным ПО");
		КонецЕсли;
	Иначе
		Сообщить("Соединение с сервером НЕ выполнено");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьВерсию()
КонецПроцедуры

Функция ВыполнитьСоединение()
	СтруктураURI = СтруктураURI(СтрокаСоединения); 
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт); 
	 
	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере); 
	Попытка
		Результат =  HTTPСоединение.Получить(HTTPЗапрос);
	Исключение
		// исключение здесь говорит о том, что запрос не дошел до HTTP-Сервера
		Сообщить("Произошла сетевая ошибка!");
		ВызватьИсключение;
	КонецПопытки;
	 
	Если Результат.КодСостояния < 400 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	 //// Анализируем фатальные ошибки
	 //// В большинстве случаев нужно остановить работу и показать пользователю сообщение об ошибке,
	 //// включив в него HTTP-статус
	 //
	 //// Ошибки 4XX говорят о неправильном запросе - в широком смысле
	 //// Может быть неправильный адрес, ошибка аутентификации, плохой формат запроса
	 //// Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4
	 //Если Результат.КодСостояния >= 400 и Результат.КодСостояния < 500  Тогда
	 //  	 Сообщить("Код статуса больше 4XX, ошибка запроса.  Код статуса: " + Результат.КодСостояния);
	 //КонецЕсли;
	 //
	 //// Ошибки 5XX говорят о проблемах на сервере (возможно, прокси-сервер)
	 //// Это может быть программная ошибка, нехватка памяти, ошибка конфигурации и т.д.
	 //// Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5
	 //Если Результат.КодСостояния >= 500 и Результат.КодСостояния < 600  Тогда
	 //  	 Сообщить("Код статуса больше 5XX, ошибка сервера. Код статуса: " + Результат.КодСостояния);
	 //КонецЕсли;
	 //
	 //// Обрабатываем перенаправление
	 //Если Результат.КодСостояния >= 300 и Результат.КодСостояния < 400  Тогда
	 //  	 Сообщить("Код статуса больше 3XX, Перенаправление. Код статуса: " + Результат.КодСостояния);
	 //    Если Результат.КодСостояния = 302 Тогда
	 //   	  Сообщить("Код статуса 302, Постоянное перенаправление.");
	 //   	  АдресРесурса = Результат.Заголовки.Получить("Location");
	 //   	  Если АдресРесурса <> Неопределено Тогда
	 //   		  Сообщить("Выполняю запрос по новому адресу " + АдресРесурса);
	 //   		  ВыполнитьСоединение(АдресРесурса);
	 //   	  Иначе
	 //   		  Сообщить("Сервер не сообщил адрес ресурса!");
	 //   	  КонецЕсли;
	 //    КонецЕсли;
	 //КонецЕсли;
	 //// Статусы 1XX и 2XX считаем хорошими
	 //Если Результат.КодСостояния < 300 Тогда 
	 //      Сообщить("Скорее всего все хорошо");	
	 //      Сообщить("Код статуса: " + Результат.КодСостояния);	
	 //КонецЕсли; 
КонецФункции

&НаКлиенте
Функция ВыполнитьHTTPЗапрос(Команда, Ответ=Неопределено)
	
	ОтветОтСервера = HTTPСоединение.ВызватьHTTPМетод("GET /mobApp/transporter.php?command=" + Команда + " HTTP/1.1", HTTPЗапрос);
	Если Ответ <> Неопределено Тогда
		Если ОтветОтСервера.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8) = Ответ Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ОтветОтСервера.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	
КонецФункции
 
&НаКлиенте
Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции